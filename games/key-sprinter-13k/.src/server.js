var users=[];function findOpponent(b){for(var a=0;a<users.length;a++)b===users[a]||null!==users[a].opponent||users[a].ready||(console.log(users[a].socket.id,users[a].ready),(new Game(b,users[a])).match())}function removeUser(b){users.splice(users.indexOf(b),1)}var Game=function(b,a){this.user1=b;this.user2=a};Game.prototype.match=function(){this.user1.match(this,this.user2);this.user2.match(this,this.user1)};Game.prototype.count=function(){this.user1.count(this,this.user2);this.user2.count(this,this.user1)};
Game.prototype.reset=function(){this.user1.ready=!1;this.user2.ready=!1};var User=function(b){this.socket=b;this.opponent=this.game=null;this.ready=!1};User.prototype.setGuess=function(b){return!0};User.prototype.match=function(b,a){this.game=b;this.opponent=a;this.ready=!1;this.socket.emit("match")};User.prototype.count=function(b,a){this.socket.emit("count")};User.prototype.end=function(){this.opponent=this.game=null;this.socket.emit("end")};
module.exports={io:function(b){var a=new User(b);users.push(a);findOpponent(a);b.on("ready",function(){a.ready=!0;a.opponent&&a.opponent.ready&&a.game.count()});b.on("hit",function(){a.opponent&&a.opponent.socket.emit("opp_hit")});b.on("offline",function(){a.opponent&&a.opponent.socket.emit("opp_off")});b.on("find",function(){a.ready=!1;findOpponent(a)});b.on("win",function(){a.game&&a.game.reset();a.opponent&&a.opponent.socket.emit("opp_win")});b.on("disconnect",function(){removeUser(a);a.opponent&&
a.opponent.end()});console.log("Connected: "+b.id)}};