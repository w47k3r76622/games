const canvas=document.getElementById("gameCanvas"),ctx=canvas.getContext("2d"),keys={ArrowUp:!1,ArrowDown:!1,ArrowLeft:!1,ArrowRight:!1},playerBodyImage=new Image;playerBodyImage.src="./asset/player-body.png";const playerArmImage=new Image;playerArmImage.src="./asset/player-arm.png";let player={x:400,y:300,radius:15,fireRate:1e3,speed:.9,crossroads:150,damage:1},experience=0,requiredExperience=100,playerLevel=1,lives=10,isGameOver=!1,isPaused=!1,isGameStarted=!1,waitForShoot=!1,bodyCurrentFrame=0,bodyCurrentTime=0,bodyAnimationState="standing",bodyAnimationDirection="left",armAngle=0;const experienceBarHeight=10,allowedArea={x:215,y:170,width:475,height:340},arrows=[];let maxArrows=1,canShoot=!0,currentArrows=0,lastArrowShotTime=0;const destination={x:200,y:350,radius:25},enemies=[],spriteSheetArr=["./asset/horse-run-Sheet.png","./asset/infantry-Sheet.png"];let enemySpawnInterval=5e3,lastEnemySpawnTime=0,currentTime;const pathPoints=[{x:50,y:70},{x:300,y:70},{x:770,y:100},{x:770,y:540},{x:150,y:540},{x:130,y:350},{x:300,y:350},];function init(){player={x:400,y:300,radius:15,fireRate:1e3,speed:.9,crossroads:150,damage:1},experience=0,requiredExperience=100,playerLevel=1,lives=10,enemySpawnInterval=5e3,lastEnemySpawnTime=0,arrows.length=0,enemies.length=0,maxArrows=1,canShoot=!0,currentArrows=0,lastArrowShotTime=0}function drawPlayerRange(){ctx.beginPath(),ctx.arc(player.x,player.y,player.radius+player.crossroads,0,2*Math.PI),ctx.strokeStyle="rgba(0, 0, 255, 0.3)",ctx.lineWidth=2,ctx.stroke()}canvas.addEventListener("click",function(){isGameOver&&reStartGame()}),window.addEventListener("keydown",function(e){keys[e.key]=!0}),window.addEventListener("keyup",function(e){keys[e.key]=!1});class Enemy{constructor(e,t,a,r){this.x=e+16,this.y=t+16,this.speed=a,this.pathIndex=0,this.radius=20,this.health=r,this.maxHealth=r,this.currentFrame=0,this.currentRow=0,this.lastUpdateTime=0,this.frameRate=10,this.img=new Image,this.img.src=a>1.5?spriteSheetArr[0]:spriteSheetArr[1]}takeDamage(e){"number"==typeof this.health&&!isNaN(this.health)&&(this.health-=e,this.health<=0&&this.destroy())}destroy(){let e=enemies.indexOf(this);-1!==e&&(enemies.splice(e,1),experience+=10)}draw(){let e=32*this.currentFrame,t=32*this.currentRow;ctx.save(),"down"===this.direction?(ctx.scale(-1,1),ctx.drawImage(this.img,e,t,32,32,-this.x-32,this.y-32,64,64)):ctx.drawImage(this.img,e,t,32,32,this.x-32,this.y-32,64,64),ctx.restore()}update(){let e=pathPoints[this.pathIndex].x,t=pathPoints[this.pathIndex].y,a=e-this.x,r=t-this.y,s=Math.sqrt(a*a+r*r),i=currentTime-this.lastUpdateTime;i>=1e3/this.frameRate&&(this.currentFrame++,this.currentFrame>=3&&(this.currentFrame=0),this.lastUpdateTime=currentTime),this.currentRow=0,s>this.speed?(this.x+=a/s*this.speed,this.y+=r/s*this.speed):(this.pathIndex++,this.pathIndex>=pathPoints.length&&(this.pathIndex=0),3===this.pathIndex||4===this.pathIndex?this.direction="down":this.direction="up")}drawHealthBar(){let e=this.x-15,t=this.y-this.radius-20,a=this.health/this.maxHealth;ctx.fillStyle="green",ctx.fillRect(e,t,30*a,5),ctx.strokeStyle="black",ctx.strokeRect(e,t,30,5)}}class Arrow{constructor(e,t,a,r){this.x=e,this.y=t,this.speed=7,this.targetX=a,this.targetY=r,this.radius=5,this.hit=!1,this.distanceToPlayer=0,this.img=new Image,this.img.src="./asset/arrow.png",this.angle=Math.atan2(r-t,a-e),this.rotateAngle=this.angle+Math.PI/2}update=function(){let e=this.targetX-this.x,t=this.targetY-this.y,a=Math.sqrt(e*e+t*t);if(!this.hit){if(a>this.speed)this.x+=e/a*this.speed,this.y+=t/a*this.speed;else for(let r=0;r<enemies.length;r++){let s=enemies[r],i=this.x-s.x,l=this.y-s.y,n=Math.sqrt(i*i+l*l);if(n<s.radius){s.takeDamage(player.damage),this.hit=!0,audio.hitSound.play();break}}}let o=this.x-player.x,d=this.y-player.y;this.distanceToPlayer=Math.sqrt(o*o+d*d)};draw(){ctx.restore(),ctx.save(),ctx.translate(this.x,this.y),ctx.rotate(this.rotateAngle),ctx.drawImage(this.img,-6,-16,12,32),ctx.rotate(-this.rotateAngle),ctx.translate(-this.x,-this.y),ctx.restore(),ctx.save()}}function shootArrow(e,t,a,r){if(currentArrows<maxArrows){let s=a-e,i=r-t;if(Math.sqrt(s*s+i*i)<=player.radius+player.crossroads){let l=new Arrow(e,t,a,r);arrows.push(l),currentArrows++,audio.shootSound.play()}}}function updateArrows(){for(let e=arrows.length-1;e>=0;e--){let t=arrows[e];t.update(),(t.x>canvas.width||t.x<0||t.y>canvas.height||t.y<0||t.hit||t.distanceToPlayer>player.radius+player.crossroads)&&arrows.splice(e,1)}}function shootArrows(){if((canShoot=currentArrows<maxArrows)&&currentTime-lastArrowShotTime>=player.fireRate){let e=findClosestEnemy();if(e){let t=e.x-player.x,a=e.y-player.y;Math.sqrt(t*t+a*a)<=player.radius+player.crossroads&&(shootArrow(player.x,player.y,e.x,e.y),currentArrows++,canShoot=!1,lastArrowShotTime=currentTime,waitForShoot=!1)}}else currentTime-lastArrowShotTime>=player.fireRate&&(canShoot=!0,currentArrows=0)}function updatePlayer(){keys.ArrowUp&&player.y>allowedArea.y&&(player.y-=player.speed,bodyAnimationState="moving"),keys.ArrowDown&&player.y<allowedArea.y+allowedArea.height&&(player.y+=player.speed,bodyAnimationState="moving"),keys.ArrowLeft&&player.x>allowedArea.x&&(player.x-=player.speed,bodyAnimationState="moving",bodyAnimationDirection="left"),keys.ArrowRight&&player.x<allowedArea.x+allowedArea.width&&(player.x+=player.speed,bodyAnimationState="moving",bodyAnimationDirection="right"),keys.ArrowUp||keys.ArrowDown||keys.ArrowRight||keys.ArrowLeft||(bodyAnimationState="standing");let e=findClosestEnemy();"standing"===bodyAnimationState&&(bodyCurrentFrame=0),armAngle+=1;let t=currentTime-bodyCurrentTime,a=32*bodyCurrentFrame;if(t>=100&&(++bodyCurrentFrame>=3&&(bodyCurrentFrame=0),bodyCurrentTime=currentTime),ctx.save(),"left"===bodyAnimationDirection?(ctx.scale(-1,1),ctx.drawImage(playerBodyImage,a,0,32,32,-player.x-32,player.y-32,64,64)):"right"===bodyAnimationDirection&&ctx.drawImage(playerBodyImage,a,0,32,32,player.x-32,player.y-32,64,64),ctx.restore(),ctx.save(),"left"===bodyAnimationDirection){if(ctx.translate(player.x,player.y-5),e){let r=e.x-player.x,s=e.y-player.y-10;ctx.rotate(Math.atan2(s,r))}}else if(ctx.translate(player.x,player.y-5),e){let i=e.x-player.x,l=e.y-player.y-10;ctx.rotate(Math.atan2(l,i))}ctx.drawImage(playerArmImage,-32,-32,64,64),ctx.restore(),ctx.save(),shootArrows()}function spawnEnemy(){if(isGameStarted&&!isPaused){let e=Math.random()*canvas.height,t=.5,a=1;enemySpawnInterval<=2e3?(t+=2*Math.random(),a+=Math.floor(3*Math.random())):enemySpawnInterval<=3e3?(t+=1.2*Math.random(),a+=Math.floor(3*Math.random())):enemySpawnInterval<=4500?(t+=.8*Math.random(),a+=Math.floor(2*Math.random())):t+=.5*Math.random();let r=new Enemy(0,e,t,a);enemies.push(r)}}function updateEnemies(){for(let e=0;e<enemies.length;e++){let t=enemies[e];t.update(),checkCollision(t)?t.takeDamage(1):t.x>canvas.width&&(t.takeDamage(t.health),decreaseLives(),decreaseLives()),t.drawHealthBar(),t.draw()}}function findClosestEnemy(){let e=1/0,t=null;for(let a of enemies){let r=a.x-player.x,s=a.y-player.y,i=Math.sqrt(r*r+s*s);i<e&&(e=i,t=a)}return t}function checkCollision(e){let t=e.x-destination.x,a=e.y-destination.y;return Math.sqrt(t*t+a*a)<destination.radius&&(decreaseLives(),!0)}function decreaseLives(){audio.explosionSound.play(),--lives<=0&&(isGameOver=!0)}function drawDestination(){ctx.fillStyle="green",ctx.beginPath(),ctx.arc(destination.x,destination.y,0,0,2*Math.PI),ctx.fill()}function drawHUD(){ctx.fillStyle="green",ctx.font="18px Arial",ctx.fillText("Enemy: "+enemies.length,allowedArea.width/2,allowedArea.y+200),ctx.fillStyle="green",ctx.font="18px Arial",ctx.fillText("Life: "+lives,allowedArea.width/2,allowedArea.y+230),ctx.fillStyle="rgba(0, 0, 255, 0.3)",ctx.fillStyle="green",ctx.font="25px Arial",ctx.fillText("MOVE : keyboard Arrow Key",allowedArea.width/2,allowedArea.y+100)}function drawExperienceBar(e,t,a,r){let s=canvas.width*(a/r);ctx.fillStyle="lightgray",ctx.fillRect(e,t,canvas.width,10),ctx.fillStyle="blue",ctx.fillRect(e,t,s,10),ctx.strokeStyle="black",ctx.strokeRect(e,t,canvas.width,10)}function drawPlayerLevel(){ctx.fillStyle="black",ctx.font="18px Arial",ctx.fillText("Level: "+playerLevel,10,30)}function updateGameArea(){if(ctx.clearRect(0,0,canvas.width,canvas.height),isGameStarted&&!isGameOver){if(currentTime=new Date().getTime(),drawHUD(),drawDestination(),drawExperienceBar(0,0,experience,requiredExperience),drawPlayerLevel(),drawPlayerRange(),!isPaused){let e=currentTime-lastEnemySpawnTime;updateEnemies(),updatePlayer(),updateArrows(),e>=enemySpawnInterval&&(this.spawnEnemy(),lastEnemySpawnTime=currentTime,enemySpawnInterval>500&&(enemySpawnInterval-=50));for(let t=0;t<arrows.length;t++)arrows[t].update(),arrows[t].draw(),arrows[t].x>canvas.width&&(arrows.splice(t,1),t--);lives<=0?isGameOver=!0:levelUp()}requestAnimationFrame(()=>this.updateGameArea())}else isGameOver?(ctx.fillStyle="black",ctx.font="50px Arial",ctx.fillText("Game Over",canvas.width/2-60,canvas.height/2),ctx.font="40px Arial",ctx.fillText("Click anywhere to Restart",canvas.width/2-150,canvas.height/2+80)):drawStartScreen()}const startCanvas=document.getElementById("startCanvas"),startCtx=startCanvas.getContext("2d");function drawStartScreen(){canvas.style.display="none",startCanvas.style.display="block",startCtx.fillStyle="black",startCtx.font="120px Arial",startCtx.fillText("13C Defense",50,180),startCtx.fillStyle="green",startCtx.fillRect(0,200,canvas.width,canvas.height),startCtx.fillStyle="black",startCtx.font="40px Arial",startCtx.fillText("Click anywhere to start",200,530);let e=new Image;e.src=spriteSheetArr[0],e.onload=function(){startCtx.drawImage(e,64,0,32,32,500,280,64,64),startCtx.drawImage(e,64,0,32,32,310,410,64,64),startCtx.drawImage(e,0,0,32,32,250,310,64,64),startCtx.drawImage(e,32,0,32,32,100,250,64,64),startCtx.drawImage(e,32,0,32,32,150,400,64,64)};let t=new Image;t.src=spriteSheetArr[1],t.onload=function(){startCtx.drawImage(t,64,0,32,32,520,350,64,64),startCtx.drawImage(t,64,0,32,32,400,350,64,64),startCtx.drawImage(t,0,0,32,32,350,280,64,64),startCtx.drawImage(t,32,0,32,32,450,400,64,64)},startCtx.restore()}function startGame(){isGameStarted=!0,isGameOver=!1,isPaused=!1,canvas.style.display="block",startCanvas.style.display="none",init(),updateGameArea()}function reStartGame(){isGameStarted=!1,isGameOver=!1,isPaused=!1,init(),updateGameArea()}startCanvas.addEventListener("click",function(){isGameStarted||startGame()}),updateGameArea();const levelUpCanvas=document.getElementById("levelUpCanvas"),levelUpCtx=levelUpCanvas.getContext("2d");function levelUp(){experience>=requiredExperience&&(experience-=requiredExperience,playerLevel++,requiredExperience+=50,showLevelUpUI())}let cards=[{title:"Speed",description:"Increased. . movement. . speed",stats:"speed"},{title:"FireRate",description:"Reduce. . arrow firing. . interval",stats:"fireRate"},{title:"Range",description:"Increase. . shooting range",stats:"crossroads"},{title:"Life",description:"Increased. . glottal stamina",stats:"hp"},{title:"Damage",description:"Increased. . damage",stats:"damage"}];function levelUpKeyDown(e){if(isPaused){let t=e.key;if("1"===t||"2"===t||"3"===t){let a=cards[levelCards[t-1]];canvas.style.display="block",levelUpCanvas.style.display="none",window.removeEventListener("keydown",levelUpKeyDown),"speed"===a.stats?player.speed+=.2:"fireRate"===a.stats?player.fireRate-=100:"crossroads"===a.stats?player.crossroads+=50:"hp"===a.stats?lives+=10:"damage"===a.stats&&(player.damage+=.5),isPaused=!1}}}function drawCard(e,t,a,r){levelUpCtx.fillStyle="#ccc",levelUpCtx.fillRect(e,t,200,300),levelUpCtx.save(),levelUpCtx.beginPath(),levelUpCtx.rect(e,t,200,300),levelUpCtx.clip(),levelUpCtx.fillStyle="#000",levelUpCtx.lineWidth=5,levelUpCtx.stroke(),levelUpCtx.fillStyle="#000",levelUpCtx.font="25px Arial",levelUpCtx.fillText(r+" . "+a.title,e+10,t+50);let s=a.description.split(". ");for(let i=0;i<s.length;i++)levelUpCtx.fillText(s[i],e+10,t+150+20*i);levelUpCtx.restore()}function showLevelUpUI(){getLevelCards(),isPaused=!0,canvas.style.display="none",levelUpCanvas.style.display="block",levelUpCtx.fillStyle="#000",levelUpCtx.font="90px Arial",levelUpCtx.fillText("Level UP",200,110),levelUpCtx.font="25px Arial",levelUpCtx.fillText("Select and press one of the number keys ",180,160),levelUpCtx.fillText("1, 2, or 3 depending on the desired ability.",180,190);let e=3;for(let t=0;t<3;t++)e--,drawCard(canvas.width/2-220*e+120,canvas.height/3+50,cards[levelCards[t]],t+1);window.addEventListener("keydown",levelUpKeyDown)}let levelCards=[];function getLevelCards(){levelCards=[];let e=cards.length;for(let t=0;t<3;t++){let a=Math.floor(Math.random()*e);2===a&&player.fireRate<=100?t--:-1===levelCards.indexOf(a)?levelCards.push(a):t--}}const audio={hitSound:new Audio("./asset/hit.mp3"),explosionSound:new Audio("./asset/explosion.mp3"),shootSound:new Audio("./asset/shoot.mp3")};let isMuted=!0;const muteButton=document.getElementById("muteButton");function toggleMute(){for(let e in isMuted=!isMuted,audio)if(audio.hasOwnProperty(e)){let t=audio[e];t.muted=isMuted}muteButton.textContent=isMuted?"SOUND":"SOUND MUTE"}muteButton.addEventListener("click",toggleMute),toggleMute();
