import{canvas,gl}from"./init.js";import{stopDrop}from"./logic.js";import{activeColorShades,disconnectedShade,generatorShade,connectedShade}from"./maps.js";import{Cube}from"./cube.js";import{Ray}from"./ray.js";import{Skybox}from"./skybox.js";import{GrabState}from"./state.js";import{FloatMat4,FloatVec3,FloatVec4,Quaternion}from"./webgl.js";gl.enable(gl.DEPTH_TEST),gl.enable(gl.CULL_FACE),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);export const projection=new FloatMat4;const rotatedProjection=new FloatMat4,view=new FloatMat4,projectionView=new FloatMat4,offsetVec=new FloatVec3,offsetMat=new FloatMat4,lightDir=new FloatVec3(-5,6,-2).normalize(),lightColor=new FloatVec3(1,1,1).normalize(),noRotation=new Quaternion(0,0,0,1),rotateAxis=new FloatVec3(0,1,0),lookDown=(new Quaternion).fromAxisAngle(new FloatVec3(1,0,0),Math.PI/6);Skybox.program.uniforms.get("projection").value=rotatedProjection;const rayModel=new FloatMat4;Ray.program.uniforms.get("model").value=rayModel;const rayColor=new FloatVec4(.8,1,.9,.5);Ray.program.uniforms.get("color").value=rayColor,Ray.program.uniforms.get("projectionView").value=projectionView,Cube.program.uniforms.get("projection").value=projection,Cube.program.uniforms.get("view").value=view,Cube.program.uniforms.get("lightDir").value=lightDir;const cubeColor=new FloatVec3;Cube.program.uniforms.get("color").value=cubeColor;const cubeShade=new FloatVec3;Cube.program.uniforms.get("shade").value=cubeShade;const drawCubes=o=>{const{program:e,indices:t}=Cube;e.uniforms.get("color").value=lightColor;const{location:a}=e.uniforms.get("model"),{location:i}=e.uniforms.get("color"),{location:r}=e.uniforms.get("shade");e.bind(),t.bind(),o.forEach(({modelView:o,position:e,rotation:n,scale:s,color:l,shade:c})=>{o.compose(e,n,s),o.bind(a),l.bind(i),cubeShade.x=cubeShade.y=cubeShade.z=c,cubeShade.bind(r),t.use(gl.TRIANGLES)}),cubeShade.x=cubeShade.y=cubeShade.z=1.5,cubeShade.bind(r)},drawBase=o=>{const{program:e,indices:t}=Cube;e.uniforms.get("color").value=new FloatVec3(94/255,90/255,123/255);const a=e.uniforms.get("model").value,i=(new FloatVec3).copy(o).mulScalar(.5);i.x+=.1,i.z+=.1,i.y=15;const r=(new FloatVec3).copy(o).mulScalar(.5);r.x-=.5,r.z-=.5,r.y=-15.5,a.compose(r,noRotation,i),e.bind(),t.bind(),t.use(gl.TRIANGLES)},drawSkybox=()=>{const{program:o,indices:e}=Skybox;o.bind(),e.bind(),gl.disable(gl.DEPTH_TEST),e.use(gl.TRIANGLES),gl.enable(gl.DEPTH_TEST)},rand=()=>window.crypto.getRandomValues(new Uint32Array(1))[0]/4228250625;class Particle{constructor(){this.modelView=new FloatMat4,this.velocity=new FloatVec3,this.scale=new FloatVec3(.3+rand(),.3+rand(),.3+rand()).mulScalar(.15),this.acceleration=new FloatVec3,this.rotationAxis=new FloatVec3,this.rotationAngle=rand(),this.torque=0,this.position=new FloatVec3}step(o){this.rotationAngle+=this.torque*o,this.position.y<-80&&(this.scale.x+=.15*rand()*o,this.scale.y+=.15*rand()*o,this.scale.z+=.15*rand()*o),this.velocity.add((new FloatVec3).copy(this.acceleration).mulScalar(o)),this.position.add((new FloatVec3).copy(this.velocity).mulScalar(o))}updateAsteroid(){this.position.y>30&&this.initAsteroid();const o=(new Quaternion).fromAxisAngle(this.rotationAxis,this.rotationAngle);this.modelView.compose(this.position,o,this.scale)}initAsteroid(){this.rotationAxis.x=.5*rand()-.25,this.rotationAxis.y=.5*rand()-.25,this.rotationAxis.z=.5*rand()-.25,this.rotationAxis.normalize(),this.torque=.1+.8*rand();const o=(new Quaternion).fromAxisAngle(new FloatVec3(0,1,0),2*rand()*Math.PI);return this.position.x=20+20*rand(),this.position.y=-90-10*rand(),this.position.applyQuat(o),this.acceleration.x=.005*(rand()-.5),this.acceleration.y=.03+.22*rand(),this.acceleration.z=.01*(rand()-.5),this.acceleration.applyQuat(o),this.velocity.copy(this.acceleration).mulScalar(50),this.scale.mulScalar(0),this}}const asteroids=[];for(let o=0;o<100;o++){const o=(new Particle).initAsteroid();asteroids.push(o)}const drawParticles=o=>{const{program:e,indices:t}=Cube;e.uniforms.get("color").value=lightColor,cubeShade.x=cubeShade.y=cubeShade.z=1,e.bind(),t.bind(),o.forEach(o=>{o.updateAsteroid();const{location:a}=e.uniforms.get("model");o.modelView.bind(a),t.use(gl.TRIANGLES)})},drawArm=o=>{const{armPos:e,armRadius:t}=o,{program:a,indices:i}=Ray,r=new FloatVec3(t,20,t);rayModel.compose(e,noRotation,r),a.bind(),i.bind(),gl.enable(gl.BLEND),gl.cullFace(gl.FRONT),i.use(gl.TRIANGLES),gl.disable(gl.BLEND),gl.cullFace(gl.BACK)},draw=o=>{const{camPos:e,camRot:t,mapSize:a,cubes:i,generators:r,armPos:n}=o,s=(new Quaternion).fromAxisAngle(rotateAxis,t).preMul(lookDown);offsetVec.x=n.x,offsetVec.z=n.z,offsetMat.compose(offsetVec.mulScalar(-1),noRotation),view.compose(e,s).mul(offsetMat),projectionView.copy(view).preMul(projection),rotatedProjection.compose(new FloatVec3,s).preMul(projection),canvas.width=window.innerWidth,canvas.height=window.innerHeight,gl.viewport(0,0,canvas.width,canvas.height),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),drawSkybox(),gl.clear(gl.DEPTH_BUFFER_BIT),a.x&&(drawBase(a),drawCubes(i),drawCubes(r)),drawParticles(asteroids),drawArm(o)},interpolate=(o,e)=>{const t=e-o;return Math.abs(t)<.05?e:o+.5*t};export const animate=(o,e,t)=>{asteroids.forEach(e=>e.step(o));const{cubes:a,generators:i,connectedCubes:r,fullyConnectedCubes:n,targetArmPos:s,camPos:l,targetCamPos:c,camRot:d,targetCamRot:u,droppingRot2:g,droppingRot1:h,grabbedCube:m,neighbourLevel:p,groundLevel:b,grabState:w,armPos:f,grabHeight:S,grabRotAxis:y}=t;if(m){const e=2,a=5,i=(m.position.y-b)/(S-b),r=w==GrabState.Dropping?-a*o:a*o,n=Math.max(0,Math.min(1,i+r));{const o=.05,e=.5-o;t.armRadius=o+n*e}{const o=S-b;m.position.y=b+n*o}w==GrabState.Dropping?Quaternion.nlerp(g,h,Math.max(0,(m.position.y-p)/(S-p)),m.rotation):m.position.y>=p&&m.rotation.preMul((new Quaternion).fromAxisAngle(y,e*o)),0==n?(t.grabState=GrabState.Drop,m.position.x=f.x,m.position.z=f.z,stopDrop(t)):1==n&&(t.grabState=GrabState.Grab)}if(f.x=interpolate(f.x,s.x),f.z=interpolate(f.z,s.z),t.camRot=interpolate(d,u),l.x=interpolate(l.x,c.x),l.y=interpolate(l.y,c.y),l.z=interpolate(l.z,c.z),t.grabbedCube){const{grabbedCube:o,armPos:e}=t;o.position.x=e.x,o.position.z=e.z}{let o=1;activeColorShades.forEach((t,a)=>{activeColorShades.set(a,1+.2*Math.cos(o/8+e*(1+o/100)/200)),o+=1})}a.forEach(o=>{o.shade=disconnectedShade}),i.forEach(o=>{o.shade=generatorShade}),r.forEach(o=>{(o=>{const e=activeColorShades.get(o.color);void 0!==e&&(o.shade=e)})(o)}),n.forEach(o=>{o.shade=connectedShade}),draw(t)};