import{gl}from"./init.js";export class Shader{constructor(t,r,i,s){this.type=t,this.attributes=r,this.uniforms=i,i.forEach(({type:t,name:r})=>{s=`uniform ${t} ${r};\n`+s}),r.forEach(({type:t,name:r})=>{s=`attribute ${t} ${r};\n`+s}),s="precision highp float;\n"+s,console.log(s),this.source=s}}export class FloatVec3{constructor(t=0,r=0,i=0){this.x=t,this.y=r,this.z=i}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){const r=this.x,i=this.y,s=this.z,e=t.x,h=t.y,l=t.z;return this.x=i*l-s*h,this.y=s*e-r*l,this.z=r*h-i*e,this}length2(){return this.dot(this)}length(){return Math.sqrt(this.length2())}mulScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}normalize(){return this.mulScalar(1/this.length())}applyQuat(t){const r=this.x,i=this.y,s=this.z,e=t.x,h=t.y,l=t.z,o=t.w,a=o*r+h*s-l*i,n=o*i+l*r-e*s,u=o*s+e*i-h*r,c=-e*r-h*i-l*s;return this.x=a*o+c*-e+n*-l-u*-h,this.y=n*o+c*-h+u*-e-a*-l,this.z=u*o+c*-l+a*-h-n*-e,this}bind(t){gl.uniform3f(t,this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}}export class FloatVec4{constructor(t=0,r=0,i=0,s=0){this.x=t,this.y=r,this.z=i,this.w=s}bind(t){gl.uniform4f(t,this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}}export class Quaternion extends FloatVec4{fromAxisAngle(t,r){const i=r/2,s=Math.sin(i);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(i),this}mul(t){return this.multiply(this,t)}preMul(t){return this.multiply(t,this)}multiply(t,r){const i=t.x,s=t.y,e=t.z,h=t.w,l=r.x,o=r.y,a=r.z,n=r.w;return this.x=i*n+h*l+s*a-e*o,this.y=s*n+h*o+e*l-i*a,this.z=e*n+h*a+i*o-s*l,this.w=h*n-i*l-s*o-e*a,this}normalize(){let t=this.length();return 0===t?(this.x=0,this.y=0,this.z=0,this.w=1):(t=1/t,this.x=this.x*t,this.y=this.y*t,this.z=this.z*t,this.w=this.w*t),this}static nlerp(t,r,i,s){return s.x=(1-i)*t.x+i*r.x,s.y=(1-i)*t.y+i*r.y,s.z=(1-i)*t.z+i*r.z,s.w=(1-i)*t.w+i*r.w,s.normalize()}}const defaultScale=new FloatVec3(1,1,1);export class FloatMat4{constructor(t=[]){this.arr=t}perspective(t,r,i,s){const e=i*Math.tan(.5*t),h=2*e,l=r*h,o=-.5*l,a=o+l,n=e-h,u=2*i/(a-o),c=2*i/(e-n),g=(a+o)/(a-o),f=(e+n)/(e-n),y=-(s+i)/(s-i),x=-2*s*i/(s-i),m=this.arr;return m[0]=u,m[4]=0,m[8]=g,m[12]=0,m[1]=0,m[5]=c,m[9]=f,m[13]=0,m[2]=0,m[6]=0,m[10]=y,m[14]=x,m[3]=0,m[7]=0,m[11]=-1,m[15]=0,this}mul(t){return this.multiply(this,t)}preMul(t){return this.multiply(t,this)}multiply({arr:t},{arr:r}){const i=t[0],s=t[4],e=t[8],h=t[12],l=t[1],o=t[5],a=t[9],n=t[13],u=t[2],c=t[6],g=t[10],f=t[14],y=t[3],x=t[7],m=t[11],p=t[15],d=r[0],z=r[4],b=r[8],w=r[12],E=r[1],A=r[5],S=r[9],R=r[13],F=r[2],M=r[6],B=r[10],_=r[14],T=r[3],P=r[7],L=r[11],U=r[15],v=this.arr;return v[0]=i*d+s*E+e*F+h*T,v[4]=i*z+s*A+e*M+h*P,v[8]=i*b+s*S+e*B+h*L,v[12]=i*w+s*R+e*_+h*U,v[1]=l*d+o*E+a*F+n*T,v[5]=l*z+o*A+a*M+n*P,v[9]=l*b+o*S+a*B+n*L,v[13]=l*w+o*R+a*_+n*U,v[2]=u*d+c*E+g*F+f*T,v[6]=u*z+c*A+g*M+f*P,v[10]=u*b+c*S+g*B+f*L,v[14]=u*w+c*R+g*_+f*U,v[3]=y*d+x*E+m*F+p*T,v[7]=y*z+x*A+m*M+p*P,v[11]=y*b+x*S+m*B+p*L,v[15]=y*w+x*R+m*_+p*U,this}compose(t,r,i=defaultScale){const s=this.arr,{x:e,y:h,z:l,w:o}=r,a=e+e,n=h+h,u=l+l,c=e*a,g=e*n,f=e*u,y=h*n,x=h*u,m=l*u,p=o*a,d=o*n,z=o*u,b=i.x,w=i.y,E=i.z;return s[0]=(1-(y+m))*b,s[1]=(g+z)*b,s[2]=(f-d)*b,s[3]=0,s[4]=(g-z)*w,s[5]=(1-(c+m))*w,s[6]=(x+p)*w,s[7]=0,s[8]=(f+d)*E,s[9]=(x-p)*E,s[10]=(1-(c+y))*E,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}bind(t){gl.uniformMatrix4fv(t,!1,this.arr)}copy(t){for(let r=0;r<t.arr.length;r++)this.arr[r]=t.arr[r];return this}}export class GLArrayBuffer{constructor(t,r,i,s=gl.STATIC_DRAW){this.data=t,this.size=r,this.type=i;const e=gl.createBuffer();if(null===e)throw console.trace("buffer === null"),1;gl.bindBuffer(gl.ARRAY_BUFFER,e),gl.bufferData(gl.ARRAY_BUFFER,t,s),this.buffer=e}bind(t){gl.bindBuffer(gl.ARRAY_BUFFER,this.buffer),gl.enableVertexAttribArray(t),gl.vertexAttribPointer(t,this.size,this.type,!1,0,0)}}export class ElementBuffer{constructor(t){this.data=t;const r=gl.createBuffer();if(null===r)throw console.trace("buffer === null"),1;gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,r),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,t,gl.STATIC_DRAW),this.buffer=r}bind(){gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.buffer)}use(t){gl.drawElements(t,this.data.length,gl.UNSIGNED_SHORT,0)}}export class Program{constructor(t){this.uniforms=new Map,this.attributes=new Map;const r=t.map(({source:t,type:r})=>this.compileShader(t,r)),i=gl.createProgram();if(r.forEach(t=>gl.attachShader(i,t)),gl.linkProgram(i),!gl.getProgramParameter(i,gl.LINK_STATUS))throw new Error(gl.getProgramInfoLog(i)||"compileProgram() error");r.forEach(t=>{gl.detachShader(i,t),gl.deleteShader(t)}),t.forEach(({uniforms:t,attributes:r})=>{t.forEach(({name:t})=>{const r=gl.getUniformLocation(i,t);if(null===r)throw console.trace("location === null"),1;this.uniforms.set(t,{value:null,location:r})}),r.forEach(({name:t})=>{const r=gl.getAttribLocation(i,t);if(null===r)throw console.trace("index === null"),1;this.attributes.set(t,{value:null,index:r})})}),this.program=i}compileShader(t,r){const i=gl.createShader(r);if(gl.shaderSource(i,t),gl.compileShader(i),!gl.getShaderParameter(i,gl.COMPILE_STATUS))throw new Error(gl.getShaderInfoLog(i)||"compileShader() error");return i}bind(){gl.useProgram(this.program),this.attributes.forEach(({value:t,index:r})=>{t.bind(r)}),this.uniforms.forEach(({value:t,location:r})=>{t.bind(r)})}}