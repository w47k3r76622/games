const OFFSET_X=window.innerWidth/4,OFFSET_Y=window.innerHeight/4;class Point{constructor(e,t){this.x=e,this.y=t}}class Polygon{constructor(){this.points=[]}init(e){let t=this;e.forEach(function(e){let s=new Point(e[0],e[1]);t.points.push(s)})}}function render(e,t){e.beginPath(),e.moveTo(SCALE_X*t.points[0].x,SCALE_Y*t.points[0].y);for(let s=1;s<t.points.length;s++)e.lineTo(SCALE_X*t.points[s].x,SCALE_Y*t.points[s].y);e.closePath(),e.stroke()}function playSound(e,t=1){e.volume=t,e.play()}const keys={UP:!1,DOWN:!1,LEFT:!1,RIGHT:!1,BOOST:!1};function handleKeyDown(e){switch(e.code){case"KeyW":keys.UP=!0;break;case"KeyA":keys.LEFT=!0;break;case"KeyS":keys.DOWN=!0;break;case"KeyD":keys.RIGHT=!0;break;case"Space":keys.BOOST=!0}}function handleKeyUp(e){switch(e.code){case"KeyW":keys.UP=!1;break;case"KeyA":keys.LEFT=!1;break;case"KeyS":keys.DOWN=!1;break;case"KeyD":keys.RIGHT=!1;break;case"Space":keys.BOOST=!1}}window.addEventListener("keydown",function(e){this.handleKeyDown(e)}),window.addEventListener("keyup",function(e){this.handleKeyUp(e)});class Character{constructor(e=0,t=0,s=0,i=0,r=0,x=0){this.x=e*CELL_WIDTH+CELL_WIDTH+CELL_WIDTH/2,this.y=t*CELL_WIDTH+CELL_WIDTH/2,this.vx=s,this.vy=i,this.ax=r,this.ay=x,this.r=5,this.t=50,this.lw=7,this.tr=1,this.i=0,this.wx=this.x,this.wy=this.y,this.wt=40,this.wave=!1,this.row,this.col,this.boostx=0,this.boosty=0,this.upateCellPosition(),this.footStepSound=new Audio("res/foot_steps0.mp3")}upateCellPosition(){this.col=Math.floor((this.x-CELL_WIDTH)/CELL_WIDTH),this.row=Math.floor(this.y/CELL_WIDTH)}move(e){let t=this.x,s=this.y;this.x+=this.vx+this.boostx,this.y+=this.vy+this.boosty;let i=6,r=6;this.vx+this.boostx==0&&(i=0),this.vy+this.boosty==0&&(r=0),this.vx+this.boostx<0&&(i=-6),this.vy+this.boosty<0&&(r=-6),0==e.cells[Math.floor((this.y+r)/40)][Math.floor((this.x-40+i)/40)].index&&(this.x=t,this.y=s),this.upateCellPosition()}sprint(){}waveReset(){this.r=5,this.t=50,this.lw=7,this.tr=1,this.i=0,this.wx=this.x,this.wy=this.y,this.wt=0}waveEmiter(){ctx1.beginPath(),ctx1.arc(this.wx,this.wy,this.r,0,2*Math.PI),ctx1.strokeStyle="white",ctx1.lineWidth=this.lw,ctx1.globalAlpha=this.tr,ctx1.stroke(),ctx1.closePath(),ctx1.beginPath(),ctx1.arc(this.wx,this.wy,this.r+11,0,2*Math.PI),ctx1.stroke(),ctx1.closePath(),ctx1.beginPath(),ctx1.arc(this.wx,this.wy,this.r+22,0,2*Math.PI),ctx1.stroke(),ctx1.closePath(),ctx1.beginPath(),ctx1.arc(this.wx,this.wy,this.r,0,2*Math.PI),ctx1.stroke(),ctx1.closePath(),this.r+=1,this.lw-=.05,this.tr=this.tr/1.05}startEmiting(){waves.push(this)}stopEmiting(){let e=waves.indexOf(this);waves.splice(e,1)}isAtCell(e,t){return this.row==e&&this.col==t}shareSameCell(e){return this.isAtCell(e.row,e.col)}}class Enemy extends Character{constructor(e=0,t=0,s=0,i=0,r=0,x=0){super(e,t,s,i,r,x),this.normalPath=[],this.alertPath=[],this.isMoving=!1,this.normalPathIndex=1,this.alertIndex=1,this.alerted=!1,this.startEmiting()}displacement(){if(this.alerted){this.alertIndex>this.alertPath.length-1&&(this.alertIndex=1);let e=this.alertPath[this.alertIndex][1]-this.alertPath[this.alertIndex-1][1],t=this.alertPath[this.alertIndex][0]-this.alertPath[this.alertIndex-1][0];this.move(e,t),this.alertIndex++}else{this.normalPathIndex>this.normalPath.length-1&&(this.normalPathIndex=1);let e=this.normalPath[this.normalPathIndex][0]-this.normalPath[this.normalPathIndex-1][0],t=this.normalPath[this.normalPathIndex][1]-this.normalPath[this.normalPathIndex-1][1];this.move(e,t),this.normalPathIndex++}}move(e,t){this.x+=e*CELL_WIDTH,this.y+=t*CELL_WIDTH,this.upateCellPosition()}findNormalPath(){var e=this.normalPath[0],t=this.normalPath[1],s=this.normalPath[2],i=this.normalPath[3],r=s,x=i;if(e<s&&(r=e),t<i&&(x=t),t==i){for(let i=0;i<Math.abs(s-e)+1;i++)this.normalPath[i]=[],this.normalPath[i][0]=r,this.normalPath[i][1]=t,r++;r--;for(let i=Math.abs(s-e)+1;i<2*Math.abs(s-e)+1;i++)this.normalPath[i]=[],r--,this.normalPath[i][0]=r,this.normalPath[i][1]=t}if(e==s){for(let s=0;s<Math.abs(i-t)+1;s++)this.normalPath[s]=[],this.normalPath[s][0]=e,this.normalPath[s][1]=x,x++;x--;for(let s=Math.abs(i-t)+1;s<2*Math.abs(i-t)+1;s++)this.normalPath[s]=[],x--,this.normalPath[s][0]=e,this.normalPath[s][1]=x}}}const level1={grid:[["x","x","x","x","x","x","x","x","x","x","x","x","x","x"],["x",".",".","x","x","x","x",".",".",".","x",".",".","x"],["x",".",".","x","x","x","x",".",".",".","x",".",".","x"],["x",".",".","x","x","x","x",".",".",".","x",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".","x","x","x","x",".",".",".","x",".",".","x"],["x",".",".","x","x","x","x",".",".",".","x",".",".","x"],["x","x","x","x","x","x","x","x","x","x","x","x","x","x"]],rows:12,columns:14,playerAt:[1,1],exitAt:[10,12],enemiesAt:[[11,4,11,9]],trapsAt:[]},level2={grid:[["x","x","x","x","x","x","x","x","x","x","x","x","x","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x","x","x","x","x","x","x","x","x","x","x","x","x","x"]],rows:12,columns:14,playerAt:[1,1],exitAt:[10,1],enemiesAt:[[1,8,12,8],[1,4,12,4]],trapsAt:[[2,2],[1,12]]},level3={grid:[["x","x","x","x","x","x","x","x","x","x","x","x","x","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x",".",".","x",".",".",".",".",".",".","x",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".","x","x","x","x","x","x",".",".",".","x"],["x",".",".",".","x","x","x","x","x","x",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".","x",".",".",".",".",".",".","x",".",".","x"],["x",".",".","x","x","x","x","x","x","x","x",".",".","x"],["x","x","x","x","x","x","x","x","x","x","x","x","x","x"]],rows:12,columns:14,playerAt:[1,1],exitAt:[1,12],enemiesAt:[[5,4,9,4],[5,7,9,7],[11,4,11,7]],trapsAt:[[10,1],[7,4],[10,12]]},level4={grid:[["x","x","x","x","x","x","x","x","x","x","x","x","x","x"],["x",".",".","x","x","x",".",",","x","x","x",".",".","x"],["x",".",".","x","x","x",".",",","x","x","x",".",".","x"],["x",".","x","x","x","x",".",",","x","x","x","x",".","x"],["x",".","x",".",".",".",".",".",".",".",".","x",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".",".",".",".","x","x","x","x",".",".",".",".","x"],["x",".",".",".",".",".",".",".",".",".",".",".",".","x"],["x",".","x",".",".",".",".",".",".",".",".","x",".","x"],["x",".","x","x","x","x",".",".","x","x","x","x",".","x"],["x",".",".","x","x","x",".",".","x","x","x",".",".","x"],["x","x","x","x","x","x","x","x","x","x","x","x","x","x"]],rows:12,columns:14,playerAt:[1,1],exitAt:[7,5],enemiesAt:[[4,4,4,8],[9,4,9,8],[3,4,10,4]],trapsAt:[[10,1],[1,6],[10,7],[7,12]]};function Cell(e,t,s){this.index=1,this.x=e,this.y=t,this.width=s,this.drawCell=(e=>{e.fillStyle="grey",e.font="8px Georgia",this.index||e.fillRect(this.x,this.y,this.width,this.width)})}function Grid(e,t,s,i,r){this.rows=s,this.cols=i,this.cellWidth=r,this.cells=[this.rows],this.offsetX=e,this.offsetY=t;for(let e=0;e<this.rows;e++)this.cells[e]=[this.cols];this.init=(t=>{let s=this.offsetX,i=this.offsetY;for(let x=0;x<this.rows;x++){for(let e=0;e<this.cols;e++)this.cells[x][e]=new Cell(s,i,r),"x"==t[x][e]?this.cells[x][e].index=0:this.cells[x][e].index=1,s+=r;s=e,i+=r}}),this.draw=(e=>{e.strokeStyle="white";for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.cells[t][s].drawCell(e)})}let graphGrid=[];const XDir=[1,0,-1,0],YDir=[0,1,0,-1];let priorityQueue=[];class Graph_Node{constructor(e,t,s=-1,i){this.row=e,this.column=t,this.distanceFromSource=s,this.parentNode=i,this.visited=!1,this.walkable=!1}}function isInside(e,t,s){return e>=0&&e<s.length&&t>=0&&t<s[0].length}function isWalkable(e,t){return graphGrid[e][t].walkable}function initGrid(e){let t=e.rows,s=e.columns;graphGrid=[];for(let i=0;i<t;i++){graphGrid[i]=[];for(let t=0;t<s;t++)graphGrid[i][t]=new Graph_Node(i,t),"."==e.grid[i][t]&&(graphGrid[i][t].walkable=!0),"x"!=e.grid[i][t]&&"X"!=e.grid[i][t]||(graphGrid[i][t].walkable=!1)}}function findPath(e,t,s,i){let r=graphGrid[e][t],x=graphGrid[s][i];r.distanceFromSource=0,r.visited=!0,priorityQueue=[],djikstrasAlgo(e,t,s,i);let l=[];l[0]=[],l[0][0]=x.row,l[0][1]=x.column;for(let e=x.distanceFromSource,t=1;e>0;e--,t++){l[t]=[];let s=getNeighbours(l[t-1][0],l[t-1][1],0);for(neighbourIndex in s)if(s[neighbourIndex].distanceFromSource==e-1){l[t][0]=s[neighbourIndex].row,l[t][1]=s[neighbourIndex].column;break}}return l}function getNeighbours(e,t,s=1){let i=[];for(let r=0;r<4;r++)r1=e+XDir[r],c1=t+YDir[r],!isInside(r1,c1,graphGrid)||0==!graphGrid[r1][c1].visited&&s||isWalkable(r1,c1)&&i.push(graphGrid[r1][c1]);return i}function djikstrasAlgo(e,t,s,i){let r=graphGrid[e][t];for(priorityQueue.push(r),r.visited=!0;priorityQueue.length>0;){let e=priorityQueue.splice(0,1)[0];if(e.row==s&&e.column==i)return 1;e.visited=!0,updateNeighbours(e.row,e.column);let t=getNeighbours(e.row,e.column);for(cellIndex in t)priorityQueue.push(t[cellIndex])}return 0}function getGraphGridArray(e){let t=[];for(let s=0;s<e.length;s++){t[s]=[];for(let i=0;i<e[0].length;i++)t[s][i]=e[s][i].distanceFromSource}return t}function isBlocked(e,t){return!isWalkable(e,t)}function updateNeighbours(e,t){let s,i,r,x=graphGrid[e][t];for(let l=0;l<4;l++)isInside(i=e+XDir[l],r=t+YDir[l],graphGrid)&&!isBlocked(i,r)&&((s=graphGrid[i][r]).distanceFromSource>x.distanceFromSource+1||s.distanceFromSource<0&&0==s.visited)&&(s.distanceFromSource=x.distanceFromSource+1,s.parentNode=x)}const CANVAS=document.getElementById("canvas"),CTX=CANVAS.getContext("2d"),GAME_WIDTH=640,GAME_HEIGHT=480,GAME_ARENA_OFFSETX=160,GAME_ARENA_OFFSETY=GAME_HEIGHT/4,SCALE_X=1,SCALE_Y=1,CELL_WIDTH=40;let waves=[];var PLAYER_VELOCITY=1.2,PLAYER_MAX_VELOCITY=2;CANVAS.width=640,CANVAS.height=GAME_HEIGHT,CANVAS.style.background="#000000",CTX.strokeStyle="#FFFFFF",CTX.lineWidth=8,CTX.lineCap="round",CTX.lineJoin="round";const footStepSound=new Audio("res/foot_steps0.mp3"),footStepSound1=new Audio("res/foot_steps1.mp3"),loadingScreen=document.querySelector(".loading_screen"),gameMenuScreen=document.querySelector(".game_menu_screen"),storyScreen=document.querySelector(".story_screen"),gameCanvasScreen=document.querySelector(".game_canvas"),screens=[loadingScreen,gameMenuScreen,storyScreen,gameCanvasScreen],declineBtn=document.querySelector(".decline"),accepBtn=document.querySelector(".accept"),playBtn=document.querySelector("#img");declineBtn.onclick=(()=>{declineBtn.innerHTML="Sorry, Button is not working",declineBtn.style="background-color:red;color:black"}),window.setTimeout(()=>{screens[0].style="opacity:0",screens[1].style="opacity:1; transform:translateY(-100vh)",document.querySelector(".play_text").style.WebkitAnimationPlayState="running"},3e3),playBtn.onclick=(()=>{screens[1].style="opacity:0";for(let e=0;e<6;e++)screens[2].children[e].style.WebkitAnimationPlayState="running";screens[2].style="transform:translateY(-200vh);opacity:1;display:block"}),accepBtn.onclick=(()=>{screens[2].style="opacity:0",document.querySelector(".find_the_exit").style="transform:translateY(-300vh) ",window.setTimeout(()=>{document.querySelector(".find_the_exit").style="transform:translateY(-400vh)"},4e3),window.setTimeout(()=>{document.querySelector(".traps").style="transform:translateY(-400vh) "},4500),window.setTimeout(()=>{document.querySelector(".traps").style="transform:translateY(-600vh) "},1e4),window.setTimeout(()=>{document.querySelector(".fall_back").style="transform:translateY(-500vh) "},11e3),window.setTimeout(()=>{document.querySelector(".fall_back").style="transform:translateY(-900vh) "},15e3),window.setTimeout(()=>{document.querySelector(".game_canvas").style="transform:translateY(-611vh );opacity:1 "},17e3)});let canvas1=document.getElementById("canvas1"),ctx1=canvas1.getContext("2d"),canvas2=document.getElementById("canvas2"),ctx2=canvas2.getContext("2d"),canvas3=document.getElementById("canvas3"),ctx3=canvas3.getContext("2d"),canvas4=document.getElementById("canvas4"),ctx4=canvas4.getContext("2d");canvas1.width=640,canvas1.height=GAME_HEIGHT,canvas2.width=640,canvas2.height=GAME_HEIGHT,canvas3.width=640,canvas3.height=GAME_HEIGHT+100,canvas4.width=640,canvas4.height=GAME_HEIGHT+100,ctx3.font="50px Georgia",ctx3.fillStyle="red";let currentLevel=-1,time=0;const levels=[level1,level2,level3,level4];var player,grid,enemies=[];function renderObject(){ctx2.clearRect(0,0,canvas2.width,canvas2.height),ctx2.beginPath(),ctx2.arc(player.x,player.y,6,0,2*Math.PI),ctx2.fill(),ctx2.closePath()}function startLevel(e){ctx2.fillStyle="white",ctx3.clearRect(0,0,canvas3.width,canvas3.height),CTX.clearRect(0,0,CANVAS.width,CANVAS.height),enemies.splice(0,enemies.length),waves=[],initGrid(e);let t=e.rows,s=e.columns;(grid=new Grid(40,0,t,s,CELL_WIDTH)).init(e.grid),grid.draw(CTX),player=new Character(e.playerAt[0],e.playerAt[1]);for(let t=0;t<e.enemiesAt.length;t++)enemies.push(new Enemy(e.enemiesAt[t][0],e.enemiesAt[t][1])),enemies[t].normalPath=e.enemiesAt[t].slice(),enemies[t].findNormalPath()}function update(){function e(){startLevel(levels[currentLevel=0])}function t(){ctx2.fillStyle="grey",currentLevel>0&&currentLevel--,startLevel(levels[currentLevel])}function s(){ctx2.fillStyle="black"}for(enemyIndex in keys.UP&&(keys.DOWN||(player.vy=-PLAYER_VELOCITY)),keys.DOWN&&(keys.UP||(player.vy=PLAYER_VELOCITY)),keys.LEFT&&(keys.RIGHT||(player.vx=-PLAYER_VELOCITY)),keys.RIGHT&&(keys.LEFT||(player.vx=PLAYER_VELOCITY)),keys.BOOST&&(player.vx>0&&(player.boostx=PLAYER_VELOCITY),player.vx<0&&(player.boostx=-PLAYER_VELOCITY),player.vy>0&&(player.boosty=PLAYER_VELOCITY),player.vy<0&&(player.boosty=-PLAYER_VELOCITY)),player.move(grid),player.vx=0,player.vy=0,player.boostx=0,player.boosty=0,enemies)player.shareSameCell(enemies[enemyIndex])&&(ctx2.fillStyle="red",ctx3.fillStyle="black",ctx3.fillRect(0,0,canvas3.width,canvas3.height),ctx3.fillStyle="red",ctx3.fillText("YOU WERE CAUGHT",0,GAME_HEIGHT/2),setTimeout(s,300),setTimeout(e,1e3));for(trapIndex in levels[currentLevel].trapsAt)player.isAtCell(levels[currentLevel].trapsAt[trapIndex][0],levels[currentLevel].trapsAt[trapIndex][1])&&(ctx2.fillStyle="grey",ctx3.fillStyle="black",ctx3.fillRect(0,0,canvas3.width,canvas3.height),ctx3.fillStyle="red",ctx3.fillText("YOU FELL INTO TRAP",0,GAME_HEIGHT/2),setTimeout(t,1e3));renderObject(),player.isAtCell(levels[currentLevel].exitAt[0],levels[currentLevel].exitAt[1])&&(++currentLevel>levels.length-1&&alert("Game Completed! More levels coming soon. Thanks for playing"),currentLevel%=levels.length,startLevel(levels[currentLevel]))}startLevel(levels[currentLevel=0]);var ct=0;function globalWave(){ctx1.clearRect(0,0,canvas1.width,canvas1.height);for(let e=0;e<waves.length;e++)waves[e].waveEmiter(),waves[e].wt++,waves[e].wt>45&&waves[e].waveReset();if(ct>45){for(let e=0;e<enemies.length;e++)enemies[e].displacement();initGrid(levels[currentLevel]),ct=0}ct++}setInterval(globalWave,1e3/60),setInterval(update,25);