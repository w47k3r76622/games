/* @stpettersens' js13k 2017 entry.
Blackjack in under 13kb.
Copyright 2017 Sam Saint-Pettersen. 
MIT License. */

'use strict';var DEBUG=false;var playing=true;var cards={number:52,deck:[],played:[],ranks:['A',2,3,4,5,6,7,8,9,10,'J','Q','K'],suits:['\u2665','\u25C6','\u2663','\u2660']};var player={name:'Player',cards:[],values:[],total:0};var dealer={name:'Dealer',cards:[],values:[],total:0};function drawMessage(ctx,msg,x,y){ctx.font='14pt Verdana';ctx.fillStyle='black';ctx.fillText(msg,x,y);}
function drawSprite(ctx,card,x,y){var w=60;var h=80;var color='black';if(card.length===4)card=card.replace(' ','');if(/\u2665|\u25C6/.test(card))color='red';ctx.rect(x,y,w,h);ctx.font='14pt Verdana';ctx.fillStyle=color;ctx.fillText(card,x+12,y+50);ctx.stroke();}
function clear(ctx){ctx.clearRect(0,0,800,560);}
function calcTotal(actor){actor.values.sort(function(a,b){return b-a;});var total=0;for(var i=0;i<actor.values.length;i++){var v=actor.values[i];if(v===1){if(total+11<=21)v=11;else if(total+11>21)v=1;}
total+=v;}
actor.total=total;return total;}
function getCard(cards){var ir=Math.floor(Math.random()*cards.ranks.length);var is=Math.floor(Math.random()*cards.suits.length);return cards.ranks[ir]+' '+cards.suits[is];}
function getValue(card){var vs=card.split(' ');var value=0;if(vs[0]==='A')value=1;else if(/J|Q|K/.test(vs[0]))value=10;else value=parseInt(vs[0]);return value;}
function shuffle(cards){while(true){var card=getCard(cards);if(cards.deck.indexOf(card)===-1){cards.deck.push(card);if(cards.deck.length===cards.number)break;}}}
function drawCard(cards){var card=cards.deck.pop();cards.played.push(card);return card;}
function receiveCards(ctx,actor,cards){var card='';for(var i=0;i<2;i++){card=drawCard(cards);actor.cards.push(card);actor.values.push(getValue(card));}
log(actor.name+' receives their cards.');calcTotal(actor);}
function hit(ctx,actor,cards){var card=drawCard(cards);actor.cards.push(card);actor.values.push(getValue(card));log(actor.name+' hits.');calcTotal(actor);}
function stand(ctx,actor){log(actor.name+' stands.');log(actor.name+' has '+calcTotal(actor));calcTotal(actor);update(ctx,dealer,player);}
function getBalance(){log('Player balance is $'+parseInt(sessionStorage.getItem('money')));return parseInt(sessionStorage.getItem('money'));}
function lose(){log('Player loses $ 100');if(!playing)sessionStorage.setItem('money',getBalance()-100);}
function win(){log('Player wins $ 100');if(!playing)sessionStorage.setItem('money',getBalance()+100);}
function respond(ctx,dealer,cards){var responding=true;while(responding){var total=0;while(total<=18){total=calcTotal(dealer);if(total===16){if(Math.floor(Math.random()*6)>=3){hit(ctx,dealer,cards);}else{stand(ctx,dealer,cards);}}else if(total>=17){stand(ctx,dealer,cards);responding=false;break;}else{hit(ctx,dealer,cards);}}}}
function hasBlackjack(actor){var blackjack=false;if(actor.total===21){blackjack=true;}
return blackjack;}
function isBust(actor){var bust=false;if(actor.total>21){bust=true;}
return bust;}
function showCards(ctx,actor){var cards='';for(var i=0;i<actor.cards.length;i++){cards+=' '+actor.cards[i];}
log(actor.name+' has:');log(cards+' --> '+calcTotal(actor));return actor.total;}
function update(ctx,dealer,player){clear(ctx);var x=575;drawMessage(ctx,'Balance $ '+getBalance(),x,50);x=180;drawMessage(ctx,dealer.name.toUpperCase(),250,50);drawSprite(ctx,dealer.cards[0],x,110);drawMessage(ctx,calcTotal(player),250,430);drawMessage(ctx,player.name.toUpperCase(),250,400);for(var i=0;i<player.cards.length;i++){drawSprite(ctx,player.cards[i],x,250);x+=80;}
if(hasBlackjack(dealer)||isBust(dealer)||hasBlackjack(player)||isBust(player)){if(playing)endGame(ctx,dealer,player);}
if(!playing){var _x=260;drawMessage(ctx,calcTotal(dealer),250,80);for(var _i=1;_i<dealer.cards.length;_i++){drawSprite(ctx,dealer.cards[_i],_x,110);_x+=80;}
drawMessage(ctx,'New Game? [Y/N]',250,520);}else{drawMessage(ctx,'Hit [H] or Stand? [S]',250,520);}}
function newGame(ctx,cards,player,dealer){if(parseInt(sessionStorage.getItem('initial'))!==1){sessionStorage.setItem('money',-1000);sessionStorage.setItem('initial',1);}
var loaded=sessionStorage.getItem('loaded');if(parseInt(loaded)!==1){window.location.reload(true);sessionStorage.setItem('loaded',1);}
playing=true;reset(cards,player,dealer);shuffle(cards);receiveCards(ctx,player,cards);receiveCards(ctx,dealer,cards);update(ctx,dealer,player);}
function reset(cards,player,dealer){cards.deck=[];cards.played=[];player.cards=[];player.values=[];player.total=0;dealer.cards=[];dealer.values=[];dealer.total=0;}
function endGame(ctx,dealer,player){playing=false;var ds=showCards(ctx,dealer);var ps=showCards(ctx,player);if(ps===21&&ds!==21){drawMessage(ctx,'Player has Blackjack!',250,480);win();}else if(ds===21&&ps!==21){drawMessage(ctx,'Dealer has Blackjack!',250,480);}else if(ps===ds||ps>21&&ds>21){drawMessage(ctx,'Push. Nobody won.',250,480);win();}else if(ps<=21&&ps>ds){drawMessage(ctx,'Player wins with '+ps+'.',250,480);win();}else if(ds<=21&&ds>ps){drawMessage(ctx,'Dealer wins with '+ds+'.',250,480);lose();}else if(ps>21&&ds<=21){drawMessage(ctx,'Dealer wins. Player bust.',250,480);lose();}else if(ds>21&&ps<=21){drawMessage(ctx,'Player wins. Dealer bust.',250,480);win();}
sessionStorage.setItem('loaded',0);}
function exitToGitHub(){window.location.href='https://github.com/stpettersens/js13k_2017';}
function isNotMobile(){if(/Android|iPhone/.test(navigator.userAgent)){window.alert('This game is not compatible with mobile devices.');exitToGitHub();}}
function log(msg){if(DEBUG){console.log(msg);}}
window.onload=function(){isNotMobile();var canvas=document.getElementById('js13k');canvas.width=800;canvas.height=560;canvas.style.border='1px solid rgb(0, 0, 0)';var ctx=canvas.getContext('2d');log('Welcome to @stpettersens\' js13k 2017 entry! '+cards.suits[0]);newGame(ctx,cards,player,dealer);document.addEventListener('keydown',function(event){if(playing&&event.keyCode===72){hit(ctx,player,cards);update(ctx,dealer,player);}else if(playing&&event.keyCode===83){stand(ctx,player,cards);respond(ctx,dealer,cards);playing=false;update(ctx,dealer,player);endGame(ctx,dealer,player);}else if(!playing&&event.keyCode===89){newGame(ctx,cards,player,dealer);}else if(!playing&&event.keyCode===78){exitToGitHub();}});};