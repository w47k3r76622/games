const playersPerTeam=2,games=[];function getGame(){if(games.length>0&&games[0].players.length<2*playersPerTeam)return games[0];const e={id:"room"+games.length,players:[]};return games.unshift(e),e}module.exports={io:e=>{const t=getGame(),r=t.players.length;t.players.push(e),e.join(t.id),e.emit("prepare",t.players.length,JSON.stringify(t.players.map(e=>e.data).filter(e=>e))),t.players.length===2*playersPerTeam&&setTimeout(()=>{e.emit("start"),e.to(t.id).emit("start")},4e3);const a={disconnect:()=>{e.to(t.id).emit("end",-1),t.players.forEach(e=>e.disconnect()),t.players.length=2*playersPerTeam},hello:(r,a)=>{e.data=[r,a],e.to(t.id).emit("hello",r,a)},target:(a,s)=>{e.emit("target",r,a,s).to(t.id).emit("target",r,a,s)},power:a=>{e.emit("power",r,a).to(t.id).emit("power",r,a)},end:a=>{e.to(t.id).emit("end",r)}};for(const t in a)a.hasOwnProperty(t)&&e.on(t,a[t])}};
