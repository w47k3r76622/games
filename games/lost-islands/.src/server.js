"use strict";function _each(t,s,e){for(var i=0;i<t.length;i++)s.call(e,t[i])}function _remove(t,s){var e=t.indexOf(s);-1!==e&&t.splice(e,1)}function _contains(t,s){return-1!==t.indexOf(s)}function EventEmitter(){this.listeners={}}function _validateEventName(t){if("string"!=typeof t)throw"eventName is not a string"}function _validateListener(t){if("function"!=typeof t)throw"listener is not a function"}EventEmitter.prototype.maxListeners=10,EventEmitter.prototype.on=function(t,s){if(_validateEventName(t),_validateListener(s),this.listeners[t]=this.listeners[t]||[],this.listeners[t].length>this.maxListeners)throw"Exceeded maxListeners - You might have a memory leak";return _contains(this.listeners[t],s)||(this.listeners[t].push(s),this.emit("on",{eventName:t,listener:s})),this},EventEmitter.prototype.emit=function(t,s){_validateEventName(t);var e=Array.prototype.slice.call(arguments,1);return _each(this.listeners[t]||[],function(t){t.apply(this,e)},this),this},EventEmitter.prototype.off=function(t,s){return _validateEventName(t),_validateListener(s),_remove(this.listeners[t]||[],s),this.emit("off",{eventName:t,listener:s}),this},EventEmitter.prototype.clearListeners=function(t){return _validateEventName(t),this.listeners[t]=null,this};var index=EventEmitter;class User{constructor(t){this.id=t.id,this.socket=t,this.info={id:this.id,name:"player",hair:0,skin:0,status:0,game:null}}updateInfo(t){t.name&&(this.info.name=t.name),t.hair>-1&&(this.info.hair=t.hair),t.skin>-1&&(this.info.skin=t.skin),t.status&&(this.info.status=t.status),this.updateUser()}updateUser(){this.socket.nsp.to(this.socket.id).emit("updateInfo",this.info)}}class Area{constructor(t){let s=random(MAPS.areas,3);this.id=s[0],this.x=getRandom(1,t-s[3]-1),this.y=getRandom(1,t-s[3]-1),this.w=getRandom(s[2],s[3]),this.h=getRandom(s[2],s[3])}getRndPt(){return{x:getRandom(this.x,this.r()),y:getRandom(this.y,this.b())}}mid(){return{x:this.x+this.w/2,y:this.y+this.h/2}}r(){return this.x+this.w}b(){return this.y+this.h}}class Item{constructor(t,s=3,e=10){this.item=ITEMS.data[t],this.name=t,this.eq=!1,this.pos=this.item.pos,this.grade=this.getGrade(s,e),this.obj=this.item.obj+this.grade,this.bonus=this.item.factor*this.grade}attr(t){return this.item.attrs[t]?this.item.attrs[t]>0?this.item.attrs[t]+this.bonus:this.item.attrs[t]:0}getGrade(t,s){let e,i;switch(!0){case s<20:e=1e3,i=2999;break;case s>=20&&s<40:e=2e3,i=4999;break;case s>=40&&s<60:e=4e3,i=6500;break;case s>=60:e=5e3,i=6999}return~~((getRandom(e,i)+50*t)/1e3)-1}}class Character{constructor(t,s=0,e=-1,i="player"){this.type=i,this.id=e,this.status={nextTime:s,rdy:!1,attrs:{hp:100,atk:getRandom(7,10),def:getRandom(2,5),spd:4,luk:getRandom(3,4)},place:null,items:["map"],loc:{x:-1,y:-1}},this.info={skin:t.info.skin,hair:t.info.hair,name:t.info.name}}attr(){return this.status.items.reduce((t,s)=>{if("string"==typeof s)return t;let e=Object.assign({},t);return s.eq&&Object.keys(this.status.attrs).forEach(t=>{e[t]=e[t]+s.attr(t)}),e},this.status.attrs)}atk(t,s){getRandom(1,25),this.attr().luk;let e=~~(this.attr().atk+getRandom(1,5)-t.attr().def);t.status.attrs.hp=t.status.attrs.hp-(e>0?e:0),s(t,this)}}class Monster extends Character{constructor(t=10,s=0){super({info:{name:"Monster",skin:5,hair:4}},0,uuid(),"monster"),this.status.items.push(new Item("hemlet",0,t),new Item("armor",0,t)),t>10&&this.status.items.push(random([new Item("axe",0,t),new Item("sword",0,t)])),this.status.items.forEach(t=>{"string"!=typeof t&&(t.eq=!0)}),this.status.attrs.hp=2*t}}class Place{constructor(t,s,e=-1,i=-1,a=!1){if(this.name=s||t[1],this.type=t||random(MAPS.areas),this.x=e,this.y=i,this.monsters=[],a&&this.x==a.x&&this.y==a.y)this.monsters.push(a.mon),a.mon.name="Black General",console.log("boss",this.x,this.y);else{let t=random(this.type[5]);t>-1&&this.monsters.push(new Monster(t))}this.env={back:random(this.type[7][0]),bottom:random(this.type[7][1]),backEls:this.genBackEls(4)}}genBackEls(t){let s=[];for(let e=0;e<t;e++)s.push(random(this.type[7][2]));return s}}class Map{constructor(t=64,s){this.boss=s,this.map=null,this.map_size=t,this.areas=[],this.places=[],this.types={}}generate(){this.map=[];for(let t=0;t<this.map_size;t++){this.map[t]=[];for(let s=0;s<this.map_size;s++)this.map[t][s]=0}let t=getRandom(10,30);for(let s=0;s<t;s++){let t=new Area(this.map_size);this.isCollide(t)?s--:(t.w--,t.h--,this.areas.push(t))}this.areas.forEach(t=>{let s=this.closestRoom(t),e=t.getRndPt(),i=s.getRndPt();for(;i.x!=e.x||i.y!=e.y;)i.x!=e.x?i.x>e.x?i.x--:i.x++:i.y!=e.y&&(i.y>e.y?i.y--:i.y++),this.map[i.x][i.y]=1}),this.areas.forEach(t=>{for(let s=t.x;s<t.r();s++)for(let e=t.y;e<t.b();e++)this.map[s][e]=t.id});for(let t=0;t<this.map_size;t++)for(let s=0;s<this.map_size;s++)if(1==this.map[t][s])for(let e=t-1;e<=t+1;e++)for(let t=s-1;t<=s+1;t++)0==this.map[e][t]&&(this.map[e][t]=2);for(let t=0;t<this.map_size;t++){this.places[t]=[];for(let s=0;s<this.map_size;s++)this.places[t][s]=new Place(MAPS.areas[this.map[t][s]],null,t,s,this.boss),this.types[this.map[t][s]]?this.types[this.map[t][s]].push(this.places[t][s]):this.types[this.map[t][s]]=[this.places[t][s]]}}closestRoom(t){let s=t.mid(),e=null,i=1e3;return this.areas.forEach(a=>{if(a==t)return;let h=a.mid(),r=Math.abs(s.x-h.x)+Math.abs(s.y-h.y);r<i&&(i=r,e=a)}),e}isCollide(t,s){for(let e=0;e<this.areas.length;e++){if(e==s)continue;let i=this.areas[e];if(!(t.r()<i.x||t.x>i.b()||t.b()<i.y||t.y>i.r()))return!0}return!1}}console.log("maps",MAPS),console.log("items",ITEMS.data);class Game{constructor(t,s){this.boss={x:getRandom(0,64),y:getRandom(0,64),mon:new Monster(10)},this.map=new Map(64,this.boss),this.id=s,this.maxPlayers=4,this.events=t,this.players={},this.status=0,this.logs=[],this.socket=null,this.time=0,this.countdown=5,this.actions={map:{req:t=>t.status.items.indexOf("map")>-1},ready:{req:t=>!t.status.rdy,act:t=>{this.players[t].status.rdy=!0,this.log(`${this.players[t].info.name} is ready`),this.changeActions(t)}},"go left":{req:t=>t.status.nextTime<this.time&&t.status.loc.y>0,act:t=>this.changePlace(t,this.players[t],{y:this.players[t].status.loc.y-1})},"go right":{req:t=>t.status.nextTime<this.time&&t.status.loc.y>=0&&t.status.loc.y<64,act:t=>this.changePlace(t,this.players[t],{y:this.players[t].status.loc.y+1})},"go up":{req:t=>t.status.nextTime<this.time&&t.status.loc.x>0,act:t=>this.changePlace(t,this.players[t],{x:this.players[t].status.loc.x-1})},"go down":{req:t=>t.status.nextTime<this.time&&t.status.loc.x>=0&&t.status.loc.x<64,act:t=>this.changePlace(t,this.players[t],{x:this.players[t].status.loc.x+1})},atk:{req:t=>t.status.rdy&&t.status.nextTime<this.time,act:(t,s)=>{let e=this.map.places[s.loc.x][s.loc.y].monsters[s.mid];this.players[t].atk(e,()=>{console.log(e.status.attrs),e.status.attrs.hp<=0&&(e.status.items.forEach(s=>{"string"!=typeof s&&(s.eq=!1,this.players[t].status.items.push(s))}),this.map.places[s.loc.x][s.loc.y].monsters=[]),this.updatePlace(this.map.places[s.loc.x][s.loc.y]),this.changeAttr(t,this.players[t],t),this.changeItems(t,this.players[t])})}}},this.map.generate(),this.lobby=new Place(null,"game lobby"),this.log(`Game ${s} created. `),this.events.on("remove-user",t=>this.removePlayer(t.id)),this.timer=setInterval(()=>this.tick(),1e3)}changeActions(t){t in this.players&&this.comm("changeActions",Object.keys(this.actions).map(s=>{if(this.actions[s].req(this.players[t]))return s}).filter(t=>t),t)}getMap(){return this.map.map}log(t){console.log(this.id+":"+t),this.logs.push(t),this.comm("gamemsg",this.logs)}tick(){if(this.time++,0===this.status)switch(this.time){case 6:this.log("all players will be automatically ready in 10 seconds");break;case 11:this.eachPlayer(t=>t.status.rdy=!0)}0!==this.status||Object.keys(this.players).find(t=>!this.players[t].status.rdy)||(this.status=1),1===this.status&&(this.log("Game will start in "+this.countdown),0===--this.countdown&&this.startGame()),2===this.status&&(this.eachPlayer((t,s)=>{t.status.place.monsters.forEach(s=>{this.ai(s,t)}),t.status.attrs.hp<100&&(t.status.attrs.hp+=1),this.changeAttr(s,t),this.changeActions(s)}),this.boss.mon.status.attrs.hp<=0&&this.eachPlayer((t,s)=>{this.comm("gg",`Congratuation! You won! Socre: ${this.time}`)})),this.comm("gameinfo",{time:this.time})}ai(t,s,e){t.status.nextTime>this.time||t.atk(s,(s,e)=>{t.status.nextTime=this.time+t.attr().spd,s.status.attrs.hp<=0?this.death(s,e):this.changeAttr(s.id,s,t.id)})}death(t,s){this.log(`${t.info.name} is killed by ${s.info.name}`),this.removePlayer(t.id),this.comm("gg",`Game Over! You are killed by ${s.info.name}`,t.id)}eachPlayer(t){Object.keys(this.players).forEach(s=>{t(this.players[s],s)})}comm(t,s,e){this.socket&&this.socket.to(e||this.id).emit(t,s)}updatePlace(t){this.eachPlayer((s,e)=>{s.status.place.x==t.x&&s.status.place.y===t.y&&this.comm("updatePlace",t,e)})}changePlace(t,s,e){Object.assign(s.status.loc,e),s.status.place=this.map.places[s.status.loc.x][s.status.loc.y],this.comm("changeStage",{loc:s.status.loc,place:s.status.place},t),this.changeActions(t)}startGame(){this.status=2,this.comm("gameinfo",{status:this.status}),this.log("Game has started"),this.eachPlayer((t,s)=>{let e=random(this.map.areas).getRndPt();this.changePlace(s,t,e)})}initGame(t){this.socket.to(t).emit("initGame",{id:this.id,status:this.status,lobby:this.lobby,logs:this.logs,time:this.time,boss:this.boss,players:Object.keys(this.players).map(t=>({id:t,info:this.players[t].info,status:this.players[t].status})),map:this.getMap()})}updatePlayers(){this.comm("changePlayers",Object.keys(this.players).map(t=>({id:t,info:this.players[t].info,status:this.players[t].status})))}addPlayer(t){this.socket||(this.socket=t.socket.nsp),this.players[t.id]=new Character(t,this.time,t.id),this.players[t.id].status.items.push(new Item("sword",0,10)),t.socket.join(this.id,()=>{this.log(`Player ${t.info.name} join the game.`)}),t.socket.on("gamemsg",s=>{this.log(`${t.info.name}:${s}`)}),t.socket.on("gameaction",s=>{"object"==typeof s?this.actions[s.id].req(this.players[t.id])&&(this.actions[s.id].act(t.id,s),this.players[t.id].status.nextTime=this.time+(5-this.players[t.id].attr().spd)):(this.actions[s].act(t.id),this.players[t.id].status.nextTime=this.time+(5-this.players[t.id].attr().spd))}),t.socket.on("useitem",s=>{let e=this.players[t.id].status.items[s];"string"!=typeof e&&(e.eq?e.eq=!1:(this.players[t.id].status.items.filter(t=>"string"!=typeof t).forEach(t=>{t.pos===e.pos&&(t.eq=!1)}),e.eq=!0),this.updatePlayers(),this.changeAttr(t.id,this.players[t.id]),this.changeItems(t.id,this.players[t.id]))}),t.updateInfo({status:1}),this.initGame(t.id),this.changeActions(t.id),this.updatePlayers(),this.changeAttr(t.id,this.players[t.id]),this.changeItems(t.id,this.players[t.id]),this.full()&&(this.status=1)}changeAttr(t,s,e=!1){e?this.comm("changeAttr",{by:e,attrs:s.attr()},t):this.comm("changeAttr",s.attr(),t)}changeItems(t,s){this.comm("changeItems",s.status.items,t)}removePlayer(t){t in this.players&&(this.log(`Removed ${this.players[t].info.name} from game`),delete this.players[t]),this.empty()?this.status=3:this.updatePlayers()}full(){return Object.keys(this.players).length>=this.maxPlayers}empty(){return 0===Object.keys(this.players).length}end(){clearInterval(this.timer)}}class ServerApp{constructor(){this.events=new index,this.events.maxListeners=999,this.users=[],this.games=[],setInterval(this.crons.bind(this),5e3)}crons(){this.games.forEach(t=>{t.empty()&&this.removeGame(t)})}createNewGame(t,s=uuid()){let e=new Game(this.events,s);return e.addPlayer(t),this.addGame(e),s}queueGame(t){this.noGames()?this.createNewGame(t):this.openGames()[0].addPlayer(t)}noGames(){return 0===this.openGames().length}openGames(){return this.games.filter(t=>0==t.status)}addGame(t){this.games.push(t)}removeGame(t){t.end(),console.log("remove game: ",t.id),this.games.removeItem(t)}removeUser(t){this.users.removeItem(t),this.events.emit("remove-user",t)}addUser(t){this.users.push(t)}router(t){let s=new User(t);this.addUser(s),t.on("disconnect",()=>{console.log("Disconnected: "+t.id),this.removeUser(s)}),t.on("updateInfo",(t,e)=>{s.updateInfo(t),console.log("updated user: ",s.info),e&&e()}),t.on("queueGame",(t,e)=>{this.queueGame(s),e()}),t.on("newgame",()=>{if(s.game)return console.log("Already in game");this.createNewGame("abc123",s)}),console.log("Connected: "+t.id),s.updateUser()}}Array.prototype.removeItem=function(t){return this.splice(this.indexOf(t),1)};const App=new ServerApp;module.exports=App.router.bind(App);