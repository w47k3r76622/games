function LevelCollisionController(){this.collisions=[],this.OVERLAP=30}function LevelContainerController(){this.model=new LevelContainerModel,this.view=new LevelContainerView(this.model),GameEvents.on("activateCheckpoint",this.onActivateCheckpoint,this)}function LevelTileController(a,b,c,d,e,f){this.model=new LevelTileModel(a,b,c,d,e,f),this.view=new LevelTileView(this.model),GameEvents.on("glitchModeChanged",this.onGlitchModeChanged,this),GameEvents.on("checkForInsideNewGlitcher",this.onInsideNewGlitcherCheck,this),GameEvents.on("findAndActivateCheckpoint",this.onFindAndActivateCheckpoint,this),GameEvents.on("getActiveCheckpointPosition",this.onGetActiveCheckpointPosition,this),GameEvents.on("update",this.update,this),this.onGlitchModeChanged(window.glitchMode)}function LineColliderController(a,b,c){this.model=new LineColliderModel(a,b,TILE_TYPES[c].name),this.view=new LineColliderView(this.model),GameEvents.emit("registerCollider",this,"level")}function PlayerController(){this.model=new PlayerModel,this.view=new PlayerView(this.model),this.keysdown={left:!1,right:!1,up:!1},GameEvents.on("arrowKeyDown",this.onKeyDown,this),GameEvents.on("arrowKeyUp",this.onKeyUp,this),GameEvents.on("update",this.update,this),GameEvents.on("startLevel",this.onLevelStarted,this),GameEvents.on("collision",this.onCollision,this)}function LevelContainerModel(){this.reset()}function LevelTileModel(a,b,c,d,e,f){this.position=a,this.width=b,this.height=c,this.type=d,this.index=e,this.relativeSize=f,this.bounds={top:this.position.y,right:this.position.x+this.width,bottom:this.position.y+this.height,left:this.position.x}}function LineColliderModel(a,b,c){this.a=a,this.b=b,this.normal=this.a.crossProduct(this.b).normalise(),this.type=c}function PlayerModel(){this.reset()}function Vector2(a,b){this.x=a,this.y=b}function LevelContainerView(a){this.model=a,GameEvents.on("draw",this.draw,this)}function LevelTileView(a){this.model=a,GameEvents.on("draw",this.draw,this),this.glitchOffsets=[new Vector2(0,0),new Vector2(0,0),new Vector2(0,0)]}function LineColliderView(a){this.model=a,GameEvents.on("draw",this.draw,this)}function PlayerView(a){this.model=a,GameEvents.on("draw",this.draw,this)}function Events(a){var b={},c=[];a=a||this,a.on=function(a,c,d){(b[a]=b[a]||[]).push([c,d])},a.off=function(a,d){a||(b={});for(var e=b[a]||c,f=e.length=d?e.length:0;f--;)d==e[f][0]&&e.splice(f,1)},a.emit=function(a){for(var d,e=b[a]||c,f=e.length>0?e.slice(0,e.length):e,g=0;d=f[g++];)d[0].apply(d[1],c.slice.call(arguments,1))}}var LevelData=[{level:[[5,5,5,5,5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,4,3,4,3,4,3,4,3,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,2,5],[5,5,5,5,5,5,5,5,5,5,5,5,5,5]],title:"1.1 Arrow keys move",showGameTitle:!0,gameTitle:"GLITCH SWITCHER"},{level:[[5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,2,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5],[5,5,5,5,5,5,5,5,5,5]],title:"1.2 Up arrow jumps"},{level:[[5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,2,5],[5,3,3,3,3,3,3,3,3,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,5]],title:"1.3 Don't turn back"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,0,0,0,0,0,0,5],[5,5,5,5,5,5,5,5,3,3,3,5],[5,2,0,0,0,0,0,0,0,0,0,5],[5,5,5,5,5,5,5,5,5,5,5,5]],title:"1.4 Or do..."},{level:[[5,5,5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,4,4,0,0,0,0,5],[5,0,0,0,0,4,4,0,0,0,0,5],[5,5,5,5,5,3,3,5,5,5,3,5],[5,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,2,5],[5,5,5,5,5,5,5,5,5,5,5,5]],title:"1.5 Don't turn around inside a block"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,0,0,0,0,0,0,5],[5,5,5,5,5,5,5,5,3,3,3,5],[5,0,0,0,0,0,0,0,0,0,0,5],[5,4,4,4,5,5,5,5,5,5,5,5],[5,0,0,0,0,0,0,0,0,0,2,5],[5,5,5,5,5,5,5,5,5,5,5,5]],title:"1.6 Down we go"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5,5,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,1,0,0,0,0,0,0,0,0,0,0,2,5],[5,3,3,4,4,4,4,4,4,4,4,3,3,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5]],title:"1.7 Big gap"},{level:[[5,5,5],[5,2,5],[5,0,5],[5,4,5],[5,0,5],[5,3,5],[5,0,5],[5,4,5],[5,0,5],[5,3,5],[5,0,5],[5,4,5],[5,1,5],[5,5,5]],title:"1.8 Up the ladder"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5,5],[5,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,5,0,0,0,5],[5,0,0,5,5,5,5,0,5,2,0,0,5],[5,3,0,5,5,5,5,3,5,5,5,5,5],[5,0,0,0,0,0,0,0,0,0,0,0,5],[5,4,4,4,0,0,0,0,0,0,0,0,5],[5,0,0,4,4,0,0,0,0,0,0,0,5],[5,0,0,0,4,4,0,0,0,0,0,0,5],[5,0,0,0,0,4,4,0,0,0,0,0,5],[5,0,0,0,0,0,4,4,0,0,0,0,5],[5,0,5,5,5,5,0,4,4,0,0,0,5],[5,3,5,0,0,5,0,0,4,4,0,0,5],[5,1,0,0,0,5,0,0,0,4,4,0,5],[5,5,5,5,5,5,5,5,5,5,5,5,5]],title:"1.9 Step up"},{level:[[5,5,5,5,5,5,5,5,5],[5,0,0,1,5,2,0,0,5],[5,4,5,5,5,0,0,0,5],[5,0,0,0,5,5,5,3,5],[5,0,0,0,5,0,0,0,5],[5,3,5,5,5,4,5,5,5],[5,0,0,0,5,0,0,0,5],[5,0,0,0,5,5,5,3,5],[5,4,5,5,5,0,0,0,5],[5,0,0,0,5,0,5,5,5],[5,0,0,0,5,0,0,0,5],[5,0,0,0,5,3,0,0,5],[5,0,0,0,5,4,0,0,5],[5,0,0,0,0,0,0,0,5],[5,5,5,5,5,0,0,5,5]],title:"1.10 Mind the gap"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],[5,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,2,5],[5,0,0,0,5,0,5,0,0,0,0,0,5,0,0,0,0,5],[5,3,0,0,5,0,5,0,0,0,0,0,5,4,3,4,3,5],[5,0,0,0,5,0,5,0,0,0,0,0,5,0,0,0,0,5],[5,0,0,4,5,0,5,0,0,0,5,0,5,3,4,3,4,5],[5,0,0,0,5,0,5,0,0,0,5,0,5,0,0,0,0,5],[5,3,0,0,5,0,5,4,0,0,5,0,5,4,3,4,3,5],[5,0,0,0,5,0,5,0,0,0,5,0,5,0,0,0,0,5],[5,0,0,4,5,0,5,4,0,0,5,0,5,3,4,3,4,5],[5,0,0,0,5,0,5,0,0,0,5,0,5,0,0,0,0,5],[5,3,0,0,5,0,5,0,0,3,5,0,5,4,3,4,3,5],[5,0,0,0,5,0,5,0,0,0,5,0,5,0,0,0,0,5],[5,0,0,4,5,0,5,0,0,3,5,0,5,4,3,4,3,5],[5,1,0,0,5,6,0,0,0,0,5,6,0,0,0,0,0,5],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]],title:"1.11 Checkpoint!"},{level:[[5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,2,5],[5,0,0,0,0,0,0,0,0,5],[5,0,0,7,7,7,0,0,0,5],[5,5,5,5,5,5,5,5,5,5]],title:"2.1 Red is bad"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5,5,5],[5,1,0,0,0,7,7,0,0,7,7,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,0,5],[5,0,0,0,0,0,0,0,0,0,0,0,2,5],[5,3,3,0,0,3,3,0,0,3,3,0,0,5]],title:"2.2 Mind your head"},{level:[[7,7,7,7,7,7,7,7,7,7,7,7,7,7],[7,1,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,0,7,5,5,5,5,7],[7,5,5,5,5,5,7,2,7,5,5,5,5,7],[7,7,7,7,7,7,7,7,7,7,7,7,7,7]],title:"2.3 Don't touch the walls!"},{level:[[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],[5,1,0,7,0,7,0,7,0,7,0,7,7,0,7,7,0,0,0,5],[5,0,0,7,0,7,0,7,0,7,0,7,7,0,7,7,0,0,0,5],[5,0,0,7,0,7,0,7,0,7,0,7,7,0,7,7,0,0,0,5],[5,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,5],[5,0,0,7,0,7,0,7,0,7,0,0,0,0,0,0,0,0,0,5],[5,0,0,7,0,7,0,7,0,6,0,7,7,0,7,7,0,0,2,5],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]],title:"2.4 Pillars of doom"},{level:[[7,7,7,7,7,7,7,7,7,7,7,7,7,7],[7,0,0,0,0,0,1,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,0,0,0,0,7],[7,0,0,0,0,0,0,0,0,2,0,0,0,7],[7,7,7,7,7,7,7,7,7,7,7,7,7,7]],showGameTitle:!0,gameTitle:"YOU WIN"}],ACCELERATION=7500,MAX_SPEED=1e3,FRICTION=.8,GRAVITY=2500,JUMP_STRENGTH=1e3,MAX_JUMPS=1,TERMINAL_VELOCITY=2500,DEATH_TIMING=500,DEATH_SHARD_COUNT=15,DEATH_SHARD_MAX_VELOCITY_X=300,DEATH_SHARD_MAX_VELOCITY_Y=1e3,DEATH_SHARD_MAX_SIZE=15,DRAW_DEBUG=!1,PLAYER_SIZE=30,TILE_SIZE=70,STARTING_LEVEL=0,TILE_TYPES=[{name:"none",value:0,colour:null},{name:"spawnPoint",value:1},{name:"exit",value:2},{name:"floor",value:3,colour:"rgb(122, 143, 164)"},{name:"antifloor",value:4,colour:"rgb(22, 43, 54)"},{name:"blocker",value:5,colour:"rgb(52, 73, 94)"},{name:"checkpoint",value:6,colour:"rgb(80, 80, 80)"},{name:"deathtile",value:7,colour:"rgb(204, 80, 80)"}],DRAW_LAYERS=["background","level","player","debug"];LevelCollisionController.prototype={generateCollisionsFromLevelData:function(a){if(!a)throw new Error("No data provided");this.destroyCollisionData();var b,c,d,e;for(b=0;b<a.length;b++)for(d=void 0,c=0;c<a[b].length;c++)e=this.switchCellType(a[b][c]),void 0!=d&&d!=e&&(0!==e&&this.createLineCollider(b,c,b+1,c,e),0!==d&&this.createLineCollider(b+1,c,b,c,d)),d=e;for(c=0;c<a[0].length;c++)for(b=0;b<a.length;b++)e=a[b][c],void 0!=d&&d!=e&&(0!==e&&this.createLineCollider(b,c+1,b,c,e),0!==d&&this.createLineCollider(b,c,b,c+1,d)),d=e},switchCellType:function(a){if("floor"===window.glitchMode){if(3===a)return 0;if(4===a)return 5}else{if(4===a)return 0;if(3===a)return 5}return a},createLineCollider:function(a,b,c,d,e){this.collisions.push(new LineColliderController(new Vector2(TILE_SIZE*b,TILE_SIZE*a),new Vector2(TILE_SIZE*d,TILE_SIZE*c),e))},destroyCollisionData:function(){for(var a=0;a<this.collisions.length;a++)this.collisions[a].destroy();this.collisions=[]}},LevelContainerController.prototype={onActivateCheckpoint:function(a){this.model.activeCheckpoint=a},generateLevelData:function(a){for(var b=0;b<a.length;b++)for(var c=a[b],d=0;d<c.length;d++){var e=c[d];if(0!=e){var f=TILE_SIZE,g=TILE_SIZE,h=f*d,i=g*b,j=TILE_TYPES[e],k=new LevelTileController(new Vector2(h,i),f,g,j,10*b+d,"spawnPoint"===j.name?.5:1);1==e?this.model.spawnPoint=k:2==e?this.model.exit=k:this.model[j.name+"s"].push(k),this.model.levelObjects.push(k)}}},destroyLevelData:function(){for(var a=0;a<this.model.levelObjects.length;a++){var b=this.model.levelObjects[a];b.destroy()}this.model.reset()},getSpawnPosition:function(){return this.model.spawnPoint.getPosition()}},LevelTileController.prototype={getPosition:function(){return this.model.position.copy()},onGlitchModeChanged:function(a){this.model.isGlitching=this.model.type.name===a},update:function(a){this.model.isGlitching&&(this.model.isShowingGlitch?(Math.random()>.99&&this.view.changeGlitchDisplay(),Date.now()-this.model.glitchStartTime>this.model.glitchTime&&(this.model.isShowingGlitch=!1,this.view.resetGlitchDisplay())):Math.random()>.9&&(this.model.isShowingGlitch=!0,this.model.glitchStartTime=Date.now(),this.generateGlitchParameters())),"spawnPoint"===this.model.type.name&&(this.model.relativeSize=(this.model.relativeSize+a)%1),"exit"===this.model.type.name&&(this.model.relativeSize=(1+(this.model.relativeSize-a))%1)},onFindAndActivateCheckpoint:function(a){"checkpoint"===this.model.type.name&&(this.checkPositionIsInside(a)?(GameEvents.emit("activateCheckpoint",this),this.model.isCheckpointActive=!0):this.model.isCheckpointActive=!1)},onGetActiveCheckpointPosition:function(a,b){this.model.isCheckpointActive&&b.call(a,this.model.position)},generateGlitchParameters:function(){this.model.glitchTime=2e3*Math.random(),this.model.canvasGrabSize=this.generateRandomSizeVector(),this.model.canvasGrabSourcePosition=this.generateRandomSizeVector(),this.model.canvasGrabDestPosition=this.generateRandomSizeVector()},generateRandomSizeVector:function(){return new Vector2((Math.random()*TILE_SIZE-TILE_SIZE/2)*window.gameScale,(Math.random()*TILE_SIZE-TILE_SIZE/2)*window.gameScale)},onInsideNewGlitcherCheck:function(a,b){"floor"!==this.model.type.name&&"antifloor"!==this.model.type.name||this.checkPositionIsInside(a.model.position)&&b.call(a,!0)},checkPositionIsInside:function(a){var b=this.model.position;return a.x>=b.x&&a.x<=b.x+TILE_SIZE&&a.y>=b.y&&a.y<=b.y+TILE_SIZE},destroy:function(){this.view.destroy(),GameEvents.off("glitchModeChanged",this.onGlitchModeChanged,this),GameEvents.off("checkForInsideNewGlitcher",this.onInsideNewGlitcherCheck,this),GameEvents.off("findAndActivateCheckpoint",this.onFindAndActivateCheckpoint,this),GameEvents.off("getActiveCheckpointPosition",this.onFindAndActivateCheckpoint,this),GameEvents.off("update",this.update,this)}},LineColliderController.prototype={checkIntersection:function(a,b){return this.model.checkIntersection(a,b)},getDirection:function(){return this.model.getDirection()},getType:function(){return this.model.type},setAsInternal:function(a){this.model.isInternal=a},setA:function(a){this.model.a=a},setB:function(a){this.model.b=a},destroy:function(){this.view.destroy(),GameEvents.emit("deregisterCollider",this,"level")}},PlayerController.prototype={onLevelStarted:function(a){this.model.reset(),this.resetPosition(a.getSpawnPosition()),this.resetKeys(),this.model.levelStarted=!0},onDeath:function(){this.model.reset(),GameEvents.emit("getActiveCheckpointPosition",this,function(a){this.resetPosition(a)}),this.resetKeys(),this.model.levelStarted=!0},resetPosition:function(a){this.model.position=a,this.model.position=this.model.position.add(new Vector2(TILE_SIZE/2,TILE_SIZE/2)),this.newPosition=this.model.position.copy()},resetKeys:function(){this.keysdown={left:!1,right:!1,up:!1}},onKeyDown:function(a){if(this.model.levelStarted)switch(a.keyCode){case 37:this.keysdown.left=!0;break;case 38:this.keysdown.up=!0,this.model.jumpCount<MAX_JUMPS&&(this.model.velocity.y-=JUMP_STRENGTH,this.model.isOnFloor=!1,this.model.jumpCount++,this.model.isStartingJump=!0);break;case 39:this.keysdown.right=!0;break;case 40:}},onKeyUp:function(a){if(this.model.levelStarted)switch(a.keyCode){case 37:this.keysdown.left=!1;break;case 39:this.keysdown.right=!1}},adjustXVelocity:function(){this.keysdown.right&&!this.keysdown.left?("floor"===window.glitchMode&&(GameEvents.emit("glitchModeChanged","antifloor"),GameEvents.emit("checkForInsideNewGlitcher",this,function(a){a&&this.die()})),this.model.velocity.x<0&&(this.model.velocity.x=0),this.model.velocity.x+=ACCELERATION*this.lastFrameTime,this.model.velocity.x=Math.min(this.model.velocity.x,MAX_SPEED)):this.keysdown.left&&!this.keysdown.right&&("antifloor"===window.glitchMode&&(GameEvents.emit("glitchModeChanged","floor"),GameEvents.emit("checkForInsideNewGlitcher",this,function(a){a&&this.die()})),this.model.velocity.x>0&&(this.model.velocity.x=0),this.model.velocity.x-=ACCELERATION*this.lastFrameTime,this.model.velocity.x=Math.max(this.model.velocity.x,-MAX_SPEED)),this.model.velocity.x*=FRICTION},adjustYVelocity:function(){this.model.velocity.y+=GRAVITY*this.lastFrameTime,this.model.velocity.y=Math.min(this.model.velocity.y,TERMINAL_VELOCITY)},checkCollisions:function(){this.pointA=this.model.position,this.pointB=this.model.position.add(this.model.velocity.scale(this.lastFrameTime)),this.collisionCount=0,GameEvents.emit("detectCollision",this,"level",this.pointA,this.pointB,this.handleCollisionData)},handleCollisionData:function(a){for(var b=0;b<a.length;b++){var c=a[b],d=c.collidee.getDirection();switch(d){case"up":this.model.isStartingJump||this.model.velocity.y>0&&this.handleCollision(c,d);break;case"down":this.model.isStartingJump||this.model.velocity.y<0&&this.handleCollision(c,d);break;case"right":this.model.velocity.x<0&&this.handleCollision(c,d);break;case"left":this.model.velocity.x>0&&this.handleCollision(c,d)}}this.model.position=this.newPosition.add(this.model.velocity.scale(this.lastFrameTime))},handleCollision:function(a,b){var c=a.collidee.getType();switch(c){case"floor":"antifloor"===window.glitchMode&&this.handleBlockerCollision(a,b);break;case"antifloor":"floor"===window.glitchMode&&this.handleBlockerCollision(a,b);break;case"blocker":this.handleBlockerCollision(a,b);break;case"exit":return void this.handleExitCollision();case"checkpoint":this.handleCheckpointCollision(a);break;case"deathtile":this.handleDeathtileCollision()}},handleBlockerCollision:function(a,b){var c=(a.collidee,a.intersectionResult.intersection);this.newPosition=c.copy();var d=c.subtract(this.pointB),e=!1;switch(b){case"up":this.model.isOnFloor=!0,this.model.jumpCount=0,this.model.velocity.y=0,this.newPosition.y=this.pointB.y+d.y-.1,e=!0;break;case"down":this.model.velocity.y=0,this.newPosition.y=this.pointB.y+d.y+.1,e=!0;break;case"right":this.model.velocity.x=0,this.newPosition.x=this.pointB.x+d.x+.1,e=!0;break;case"left":this.model.velocity.x=0,this.newPosition.x=this.pointB.x+d.x-.1,e=!0}e&&(this.collisionCount++,GameEvents.emit("detectCollision",this,"level",this.model.position,this.newPosition.add(this.model.velocity.scale(this.lastFrameTime)),this.handleCollisionData))},handleExitCollision:function(){GameEvents.emit("exitReached")},handleCheckpointCollision:function(a){GameEvents.emit("findAndActivateCheckpoint",a.intersectionResult.intersection)},handleDeathtileCollision:function(){this.die()},addVelocityToPosition:function(){this.model.position=this.model.position.add(this.model.velocity.scale(this.lastFrameTime))},checkForFallenOutOfLevel:function(){this.model.position.y*window.gameScale>canvas.height&&this.die()},setDebugDrawPoints:function(){this.model.debugDrawPoints=[this.model.position,this.model.position.add(this.model.velocity.scale(this.lastFrameTime))]},die:function(){this.model.isDead=!0,this.model.deathShards=[];for(var a=0;a<DEATH_SHARD_COUNT;a++)this.model.deathShards.push({pos:this.model.position.copy(),vel:new Vector2(Math.random()*DEATH_SHARD_MAX_VELOCITY_X-DEATH_SHARD_MAX_VELOCITY_X/2,1-Math.random()*DEATH_SHARD_MAX_VELOCITY_Y),size:Math.random()*DEATH_SHARD_MAX_SIZE});this.deathTime=Date.now()},update:function(a){if(this.model.levelStarted)if(this.lastFrameTime=a,this.model.isDead){if(Date.now()-this.deathTime>DEATH_TIMING)return void GameEvents.emit("playerDied");for(var b=0;b<this.model.deathShards.length;b++){var c=this.model.deathShards[b];c.vel.y+=GRAVITY*this.lastFrameTime,c.pos=c.pos.add(c.vel.scale(this.lastFrameTime))}}else this.newPosition=this.model.position.copy(),this.adjustXVelocity(),this.adjustYVelocity(),this.checkCollisions(),this.checkForFallenOutOfLevel(),DRAW_DEBUG&&this.setDebugDrawPoints(),this.model.isStartingJump=!1}},function(){for(var a=0,b=["webkit","moz"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b,c){var d=(new Date).getTime(),e=Math.max(0,16-(d-a)),f=window.setTimeout(function(){b(d+e)},e);return a=d+e,f}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)})}(),window.NewGame=function(){function a(a){window.glitchMode="antifloor",g.destroyLevelData();var b=LevelData[a].level,c=d(b);window.gameScale=12/c,g.generateLevelData(b),f.generateCollisionsFromLevelData(b),GameEvents.emit("startLevel",g),ctx.clearRect(0,0,canvas.width,canvas.height),window.GameTitle=LevelData[a].gameTitle||""}function b(a){GameEvents.emit("update",(new Date-i)/1e3),i=new Date,c(),window.requestAnimationFrame(b)}function c(){for(var a=0;a<DRAW_LAYERS.length;a++)GameEvents.emit("draw",DRAW_LAYERS[a]);if(e<LevelData.length){var b=LevelData[e].title||"";ctx.font=32*window.gameScale+"px monospace",ctx.fillStyle="white",ctx.textAlign="center",ctx.globalAlpha=1,ctx.fillText(b,canvas.width/2,60*window.gameScale)}LevelData[e].showGameTitle&&(ctx.globalAlpha=1,ctx.fillStyle="white",ctx.font=64*window.gameScale+"px monospace",ctx.textAlign="center",ctx.fillText(window.GameTitle,canvas.width/2,canvas.height/2-TILE_SIZE/4))}function d(a){return Math.max(a.length,a[0].length)}var e=STARTING_LEVEL,f=new LevelCollisionController,g=new LevelContainerController,h=new PlayerController;a(e),GameEvents.on("exitReached",function(){a(e=(e+1)%LevelData.length)}),GameEvents.on("playerDied",function(){g.model.activeCheckpoint?h.onDeath():a(e)}),GameEvents.on("glitchModeChanged",function(a){window.glitchMode=a,f.generateCollisionsFromLevelData(LevelData[e].level)});var i=new Date;window.requestAnimationFrame(b)},window.SetupGame=function(){function a(){var a,d,e=canvas.width/canvas.height,f=window.innerWidth/window.innerHeight;e>f?(d=window.innerWidth,a=d/e):(a=window.innerHeight,d=a*e),canvas.style.width=Math.min(d,b)+"px",canvas.style.height=Math.min(a,c)+"px"}window.canvas=document.querySelector("#gameCanvas"),window.ctx=canvas.getContext("2d");var b=840,c=840;window.addEventListener("load",a,!1),window.addEventListener("resize",a,!1),CollisionHandler.init(),InputHandler.init(),NewGame()},LevelContainerModel.prototype={reset:function(){this.spawnPoint=null,this.exit=null,this.floors=[],this.antifloors=[],this.blockers=[],this.checkpoints=[],this.activeCheckpoint=null,this.deathtiles=[],this.levelObjects=[]}},LineColliderModel.prototype={checkIntersection:function(a,b){var c=this.a.subtract(a),d=this.b.subtract(this.a),e=b.subtract(a),f=e.x*d.y-e.y*d.x;if(0!==f){var g=(c.x*e.y-c.y*e.x)/f;if(!(g<0||g>1)){var h=(c.x*d.y-c.y*d.x)/f;if(!(h<0||h>1))return{intersection:a.add(e.scale(h)),normal:this.normal}}}},getDirection:function(){return 0===this.normal.x?this.normal.y===-1?"up":"down":this.normal.x<0?"left":"right"}},PlayerModel.prototype={reset:function(){this.levelStarted=!1,this.direction=0,this.isOnFloor=!1,this.size=PLAYER_SIZE,this.velocity=new Vector2(500,0),this.position=new Vector2(0,0),this.jumpCount=MAX_JUMPS,this.isDead=!1}};var CollisionHandler={init:function(){GameEvents.on("registerCollider",this.onRegisterCollider,this),GameEvents.on("deregisterCollider",this.onDeregisterCollider,this),GameEvents.on("detectCollision",this.getCollision,this),GameEvents.on("detectCollisionAtPoint",this.getCollisionAtPoint,this),this.collisionLayers={}},onRegisterCollider:function(a,b){if(!a.model.normal)throw new Error("Error: Can't register a collider that has no normal.");this.collisionLayers[b]?this.collisionLayers[b].push(a):this.collisionLayers[b]=[a]},onDeregisterCollider:function(a,b){for(var c=this.collisionLayers[b],d=0;d<c.length;d++){var e=c[d];if(e==a){this.collisionLayers[b].splice(d,1);break}}},getCollision:function(a,b,c,d,e){for(var f=this.collisionLayers[b],g=[],h=0;h<f.length;h++){var i=f[h];if(i!=a){var j=i.checkIntersection(c,d);j&&(i.model.lastCollisionTime=Date.now(),g.push({collidee:i,intersectionResult:j}))}}e.call(a,g)}},InputHandler={init:function(){document.onkeydown=this.OnKeyDown,document.onkeyup=this.OnKeyUp},OnKeyDown:function(a){switch(a.keyCode){case 37:case 38:case 39:case 40:GameEvents.emit("arrowKeyDown",a)}},OnKeyUp:function(a){switch(a.keyCode){case 37:case 38:case 39:case 40:GameEvents.emit("arrowKeyUp",a)}}};Vector2.prototype={add:function(a){return new Vector2(this.x+a.x,this.y+a.y)},subtract:function(a){return new Vector2(this.x-a.x,this.y-a.y)},scale:function(a){return new Vector2(this.x*a,this.y*a)},scaleByVector:function(a){return new Vector2(this.x*a.x,this.y*a.y)},toString:function(){return"[x: "+Math.round(this.x)+", y: "+Math.round(this.y)+"]"},copy:function(){return new Vector2(this.x,this.y)},normalise:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y);return 0==a?new Vector2(0,0):new Vector2(this.x/a,this.y/a)},dotProduct:function(a){return this.x*a.x+this.y*a.y},project:function(a){var b=this.dotProduct(a),c=new Vector2(b/(a.x*a.x+a.y*a.y)*a.x,b/(a.x*a.x+a.y*a.y)*a.y);return c},projectUnit:function(a){var b=this.dotProduct(a),c=new Vector2(b/a.x,b/a.y);return c},crossProduct:function(a){var b=a.x-this.x,c=a.y-this.y;return new Vector2(-c,b)}},LevelContainerView.prototype={draw:function(a){"background"===a&&(ctx.fillStyle="black",ctx.globalAlpha=.01,ctx.fillRect(0,0,canvas.width,canvas.height))},destroy:function(){GameEvents.off("draw",this.draw,this)}},LevelTileView.prototype={draw:function(a){if(("level"===a||"background"===a)&&!("level"===a&&"blocker"===this.model.type.name||"background"===a&&"blocker"!==this.model.type.name)){switch(this.scaledPosition=this.model.position.scale(window.gameScale),this.scaledSize=TILE_SIZE*window.gameScale,this.model.type.name){case"floor":case"antifloor":this.model.isGlitching?(ctx.globalCompositeOperation="multiply",this.drawRect("cyan",1,this.glitchOffsets[0],this.model.isShowingGlitch),this.drawRect("magenta",1,this.glitchOffsets[1],this.model.isShowingGlitch),this.drawRect("yellow",1,this.glitchOffsets[2]),this.model.isShowingGlitch,ctx.globalCompositeOperation="source-over",ctx.strokeStyle="white",ctx.globalAlpha=.5,ctx.strokeRect(this.scaledPosition.x,this.scaledPosition.y,this.scaledSize,this.scaledSize)):this.drawRect(this.model.type.colour,1);break;case"spawnPoint":var b=Math.floor(255*this.model.relativeSize).toString(16);this.drawRect("#"+b+b+b,1);break;case"exit":var b=Math.floor(255*this.model.relativeSize).toString(16);this.drawRect("#"+b+b+b,1);break;case"checkpoint":var b=this.model.isCheckpointActive?"white":this.model.type.colour;this.drawRect(b,1);break;default:this.drawRect(this.model.type.colour,1)}DRAW_DEBUG&&(ctx.fillStyle="white",ctx.font="12px sans-serif",ctx.textAlign="left",ctx.fillText(this.model.index,this.scaledPosition.x+6,this.scaledPosition.y+18))}},changeGlitchDisplay:function(){this.glitchOffsets[0].x=20*Math.random()-10,this.glitchOffsets[0].y=20*Math.random()-10,this.glitchOffsets[1].x=20*Math.random()-10,this.glitchOffsets[1].y=20*Math.random()-10,this.glitchOffsets[2].x=20*Math.random()-10,this.glitchOffsets[2].y=20*Math.random()-10},resetGlitchDisplay:function(){this.glitchOffsets=[new Vector2(0,0),new Vector2(0,0),new Vector2(0,0)]},drawRect:function(a,b,c,d){c||(c=new Vector2(0,0)),d&&ctx.drawImage(ctx.canvas,this.scaledPosition.x+this.model.canvasGrabSourcePosition.x+c.x,this.scaledPosition.y+this.model.canvasGrabSourcePosition.y+c.y,this.scaledSize+this.model.canvasGrabSize.x,this.scaledSize+this.model.canvasGrabSize.y,this.scaledPosition.x+this.model.canvasGrabDestPosition.x+c.x,this.scaledPosition.y+this.model.canvasGrabDestPosition.y+c.y,this.scaledSize+this.model.canvasGrabSize.x,this.scaledSize+this.model.canvasGrabSize.y),ctx.globalAlpha=b,ctx.fillStyle=a,ctx.fillRect(this.scaledPosition.x+c.x,this.scaledPosition.y+c.y,this.scaledSize*this.model.relativeSize,this.scaledSize*this.model.relativeSize)},destroy:function(){GameEvents.off("draw",this.draw,this)}},LineColliderView.prototype={draw:function(a){if("debug"===a&&DRAW_DEBUG){Date.now()-this.model.lastCollisionTime<100?ctx.strokeStyle="white":ctx.strokeStyle="red";var b=this.model.a.scale(window.gameScale),c=this.model.b.scale(window.gameScale);ctx.beginPath(),ctx.moveTo(b.x,b.y),ctx.lineTo(c.x,c.y),ctx.stroke(),ctx.beginPath();var d=b.x+(c.x-b.x)/2,e=b.y+(c.y-b.y)/2,f=new Vector2(d,e);ctx.moveTo(f.x,f.y),ctx.lineTo(f.x+10*this.model.normal.x,f.y+10*this.model.normal.y),ctx.stroke()}},destroy:function(){GameEvents.off("draw",this.draw,this)}},PlayerView.prototype={draw:function(a){if(ctx.globalAlpha=1,"player"===a){var b=this.model.position.scale(window.gameScale),c=this.model.size*window.gameScale;if(this.model.levelStarted){if(ctx.fillStyle="rgb(255, 235, 59)",this.model.isDead)for(var d=0;d<this.model.deathShards.length;d++){var e=this.model.deathShards[d].pos.scale(window.gameScale),f=this.model.deathShards[d].size*window.gameScale;ctx.fillRect(e.x-f/2,e.y-f,f,f)}else ctx.fillRect(b.x-c/2,b.y-c,c,c);if(DRAW_DEBUG){ctx.strokeStyle="green",ctx.beginPath();var g=[this.model.debugDrawPoints[0].scale(window.gameScale),this.model.debugDrawPoints[1].scale(window.gameScale)];ctx.moveTo(g[0].x,g[0].y),ctx.lineTo(g[1].x,g[1].y),ctx.stroke()}}}}};