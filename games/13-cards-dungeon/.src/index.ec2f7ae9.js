function e(e){return e&&e.__esModule?e.default:e}var t,r=globalThis,a={},i={},n=r.parcelRequire7262;null==n&&((n=function(e){if(e in a)return a[e].exports;if(e in i){var t=i[e];delete i[e];var r={id:e,exports:{}};return a[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){i[e]=t},r.parcelRequire7262=n),(0,n.register)("27Lyk",function(e,t){Object.defineProperty(e.exports,"register",{get:()=>r,set:e=>r=e,enumerable:!0,configurable:!0});var r,a=new Map;r=function(e,t){for(var r=0;r<t.length-1;r+=2)a.set(t[r],{baseUrl:e,path:t[r+1]})}}),n("27Lyk").register(new URL("",import.meta.url).toString(),JSON.parse('["izUj7","index.ec2f7ae9.js","kZwMU","door.8c7bd3d5.svg","kVjHD","ladder.7c393936.svg","7dOgd","key.9006051f.svg","eDx4g","enemy.f81e9384.svg","7XzqO","block.f0fb0c53.svg","cYeyI","hero.78bfbe42.svg"]'));for(var s={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)},d=new Uint8Array(16),l=[],o=0;o<256;++o)l.push((o+256).toString(16).slice(1));var c=function(e,r,a){if(s.randomUUID&&!r&&!e)return s.randomUUID();var i=(e=e||{}).random||(e.rng||function(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(d)})();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,r){a=a||0;for(var n=0;n<16;++n)r[a+n]=i[n];return r}return function(e,t=0){return(l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]).toLowerCase()}(i)},h={};h=new URL("door.8c7bd3d5.svg",import.meta.url).toString();var u={};u=new URL("ladder.7c393936.svg",import.meta.url).toString();var m={};m=new URL("key.9006051f.svg",import.meta.url).toString();var y={};y=new URL("enemy.f81e9384.svg",import.meta.url).toString();var p=class{constructor(e,t=!0,r=-1){this.id=`card-${c()}`,this.type=e,this.isDraggable=t,this.position=r}createCardByType(t){switch(t){case"start":return{name:"start",figure:""};case"door":return{name:"door",figure:/*@__PURE__*/e(h)};case"corridor":return{name:"corridor",figure:""};case"ladder":return{name:"ladder",figure:/*@__PURE__*/e(u)};case"key":return{name:"key",figure:/*@__PURE__*/e(m)};case"enemy":return{name:"enemy",figure:/*@__PURE__*/e(y)};case"heart":return{name:"heart",figure:""};case"bomb":return{name:"bomb",figure:""};default:return{}}}setPosition(e){this.position=e}getCard(){return{...this.createCardByType(this.type),id:this.id,type:this.type,position:this.position,isDraggable:this.isDraggable}}},g={};g=new URL("block.f0fb0c53.svg",import.meta.url).toString();var v=class{constructor(){this.cardsList=[],this.playerCardTypes=["ladder","corridor"]}insertCard(e){this.cardsList.push(e)}removeCard(e){return this.cardsList.filter(t=>t.id!==e)}clearCardsList(){this.cardsList=[]}createCard(t,r,a=null){let i=new p(t,r,a);this.insertCard(i);let n=document.createElement("div"),s=document.createElement("img");n.setAttribute("class",`card ${t}`),n.setAttribute("id",i.id),s.classList.add("card-img"),s.setAttribute("src",i.getCard().figure),n.appendChild(s);for(let t=0;t<3;t++){let t=document.createElement("img");t.setAttribute("src",/*@__PURE__*/e(g)),t.classList.add("card-bg"),n.appendChild(t)}return r&&(n.setAttribute("draggable","true"),n.classList.add("draggable"),n.addEventListener("dragstart",e=>{e.dataTransfer.setData("cardId",i.id)})),n}getCardList(){return this.cardsList}getCard(e){return this.cardsList.find(t=>t.id===e)}getCardByPosition(e){return this.cardsList.find(t=>t.position===e)}setCardPosition(e,t){this.cardsList.find(t=>t.id===e).setPosition(t)}},C={};C=new URL("hero.78bfbe42.svg",import.meta.url).toString();var f=class{constructor(e,t,r){this.cardsManager=e,this.life=13,this.position=0,this.levelManager=t,this.uiManager=r,this.hasKey=!1}createPlayer(t){let r=document.createElement("div"),a=document.createElement("img");return r.setAttribute("id","player"),a.setAttribute("src",/*@__PURE__*/e(C)),r.appendChild(a),this.position=t,r}getHit(e){this.life>0?this.life-=e:this.uiManager.createGameOverUI()}getKey(){this.hasKey=!0}removeKey(){this.hasKey=!1}canMoveTo(e){let t=(e,t)=>!!e&&t.includes(this.cardsManager.getCardByPosition(this.position).type);if(["left","right"].includes(e)){let r="left"===e?this.cardsManager.getCardByPosition(this.position-1):this.cardsManager.getCardByPosition(this.position+1);return{canMove:t(r,["ladder","corridor","start","door","key","enemy"]),cardId:r?.id||"",cardType:r?.type,newPosition:"left"===e?this.position-1:this.position+1}}{let r="up"===e?this.cardsManager.getCardByPosition(this.position-7):this.cardsManager.getCardByPosition(this.position+7);return{canMove:t(r,["ladder"]),cardId:r?.id||"",cardType:r?.type,newPosition:"up"===e?this.position-7:this.position+7}}}move(e){let{canMove:t,cardId:r,cardType:a,newPosition:i}=this.canMoveTo(e);if(t){let e=document.querySelector(`#${r}`);document.querySelector("#player").remove(),e.appendChild(this.createPlayer()),this.position=i,"door"===a&&this.hasKey?this.levelManager.currentLevel===this.levelManager.lastLevel?this.uiManager.createCompleteUI():this.levelManager.finishLevel():"key"===a?(this.getKey(),e.querySelector(".card-img")?.remove()):"enemy"===a&&(this.getHit(1),this.uiManager.updatePlayerUI(this.life),e.querySelector(".card-img")?.remove())}}resetPlayer(){this.life=13}},b=class{constructor(e,t,r){this.body=e,this.countCards=r,this.cardManager=t,this.limitCardsInHand=9,this.limitPlayerCards=13}createStartUI(){let e=document.createElement("div"),t=document.createElement("h1");return t.textContent="13 Cards Dungeon",e.classList.add("start-container"),e.appendChild(t),e}createTutorialUI(){let e=document.createElement("div"),t=document.createElement("h1"),r=document.createElement("ul");t.textContent="If you want to escape alive, then follow the rules:";let a=["Use/move only 13 cards","Use arrow keys to move the character","Get the key to release the exit","Avoid enemies","Ladder cards allow you to go up and/or down to other cards"];for(let e=0;e<a.length;e++){let t=document.createElement("li");t.textContent=a[e],r.appendChild(t)}return e.classList.add("tutorial-container"),e.appendChild(t),e.appendChild(r),e}createCompleteUI(){this.body.innerHTML="";let e=document.createElement("div"),t=document.createElement("h1"),r=document.createElement("button");t.textContent="WINNER!",r.textContent="RESTART",e.classList.add("gameover-container"),r.addEventListener("click",()=>{location.reload()}),e.appendChild(t),e.appendChild(r),this.body.appendChild(e)}createGameOverUI(){this.body.innerHTML="";let e=document.createElement("div"),t=document.createElement("h1"),r=document.createElement("button");t.textContent="GAME OVER",r.textContent="RESTART",e.classList.add("gameover-container"),r.addEventListener("click",()=>{location.reload()}),e.appendChild(t),e.appendChild(r),this.body.appendChild(e)}getRandomCardType(){let e=Math.floor(Math.random()*this.cardManager.playerCardTypes.length);return this.cardManager.playerCardTypes[e]}buildPlayerUI(e){let t=document.createElement("div"),r=document.createElement("h4"),a=document.createElement("p");return t.setAttribute("id","player-ui"),r.setAttribute("id","life-text"),r.textContent=e,a.textContent="moves",t.appendChild(r),t.appendChild(a),t}updatePlayerUI(e){let t=document.querySelector("#life-text");t?.textContent&&(t.textContent=e)}buildContainer(){let e=document.createElement("div"),t=document.createElement("div");e.classList.add("container"),t.classList.add("container-cards");for(let e=0;e<this.limitPlayerCards;e++)if(e<this.limitCardsInHand){let e=this.getRandomCardType(),r=this.cardManager.createCard(e,!0);t.appendChild(r)}return e.appendChild(t),e}buildUI(e){let t=this.buildContainer(),r=this.buildPlayerUI(e);t.appendChild(r),this.body.appendChild(t)}},L=class{constructor(e,t){this.levelManager=t,this.body=window.document.querySelector("body"),this.countPlayerCards=0,this.cardsManager=e,this.ui=new b(this.body,this.cardsManager,this.countPlayerCards),this.playerManager=new f(e,t,this.ui)}buildStart(){let e=this.ui.createStartUI(),t=document.createElement("button");t.addEventListener("click",()=>{this.body.innerHTML="",this.buildTutorial()}),t.textContent="START",e.appendChild(t),this.body.appendChild(e)}buildTutorial(){let e=this.ui.createTutorialUI(),t=document.createElement("button");t.addEventListener("click",()=>{this.body.innerHTML="",this.buildLevel(),this.buildUI(),this.inputListen()}),t.textContent="START",e.appendChild(t),this.body.appendChild(e)}buildUI(){this.ui.buildUI(this.playerManager.life)}buildLevel(){let e;this.body.innerHTML="";let t=document.createElement("div");for(let r of(t.classList.add("board"),this.body.appendChild(t),this.levelManager.startLevel(),this.playerManager.removeKey(),Object.keys(this.levelManager.levelData[this.levelManager.currentLevel])))"start"===this.levelManager.levelData[this.levelManager.currentLevel][r]&&(e=r);let r=this.playerManager.createPlayer(parseInt(e));for(let e=0;e<this.levelManager.cardSlots;e++){let a=document.createElement("div");if(a.classList.add("card-slot"),"start"===this.levelManager.levelData[this.levelManager.currentLevel][e]){let t=this.cardsManager.createCard("start",!1,e);this.levelManager.insertCardsInBoard(t),t.appendChild(r),a.appendChild(t)}if("door"===this.levelManager.levelData[this.levelManager.currentLevel][e]){let t=this.cardsManager.createCard("door",!1,e);a.appendChild(t)}if("key"===this.levelManager.levelData[this.levelManager.currentLevel][e]){let t=this.cardsManager.createCard("key",!1,e);a.appendChild(t)}if("enemy"===this.levelManager.levelData[this.levelManager.currentLevel][e]){let t=this.cardsManager.createCard("enemy",!1,e);t.querySelector("img").classList.add("zombie"),a.appendChild(t)}a.addEventListener("dragover",e=>{e.preventDefault()}),a.addEventListener("drop",t=>{t.preventDefault();let r=t.dataTransfer.getData("cardId"),i=document.getElementById(r);!i||a.hasChildNodes()||i.querySelector("#player")||(this.playerManager.getHit(1),this.ui.updatePlayerUI(this.playerManager.life),this.cardsManager.setCardPosition(r,e),a.appendChild(i))}),t.appendChild(a)}}inputListen(){document.addEventListener("keydown",e=>{switch(e.key){case"ArrowLeft":this.playerManager.move("left");break;case"ArrowRight":this.playerManager.move("right");break;case"ArrowUp":this.playerManager.move("up");break;case"ArrowDown":this.playerManager.move("down")}this.levelManager.currentLevelIsFinished&&this.finishLevel()})}async finishLevel(){await this.levelManager.nextLevel(),this.playerManager.resetPlayer(),this.cardsManager.clearCardsList(),this.buildLevel(),this.buildUI()}},M=class{constructor(e,t,r){this.cardSlots=e,this.cardsInBoard=[],this.currentLevel=t,this.lastLevel=12,this.levelData=r,this.transitionTime=1500,this.currentLevelIsFinished=!1}getLevel(e){return this.levelData[e]}getLevels(){return this.levelData}insertCardsInBoard(e){this.cardsInBoard.push(e)}startLevel(){this.currentLevelIsFinished=!1}finishLevel(){this.currentLevelIsFinished=!0}async levelTransition(){return new Promise(e=>{let t=document.createElement("div");t.classList.add("level-transition"),t.textContent=`Level ${this.currentLevel+2}`,document.body.appendChild(t),setTimeout(()=>{t.remove(),e()},this.transitionTime)})}async nextLevel(){await this.levelTransition(),this.currentLevel<this.lastLevel&&(this.currentLevel+=1)}};new L(new v,new M(21,0,[{0:"start",3:"key",6:"door"},{7:"start",5:"key",6:"door"},{0:"start",4:"key",11:"door",3:"enemy"},{0:"start",17:"door",11:"key",10:"enemy"},{14:"start",1:"door",5:"key",4:"enemy"},{7:"start",6:"door",12:"key",11:"enemy",19:"enemy"},{20:"start",7:"door",6:"key",13:"enemy",12:"enemy"},{10:"start",20:"door",0:"key",1:"enemy",12:"enemy"},{6:"start",14:"door",0:"key",5:"enemy",13:"enemy",12:"enemy",7:"enemy"},{0:"start",20:"door",10:"key",3:"enemy",9:"enemy",11:"enemy",17:"enemy",19:"enemy",13:"enemy"},{7:"start",14:"door",6:"key",3:"enemy",4:"enemy",11:"enemy",12:"enemy",18:"enemy",19:"enemy"},{0:"start",17:"door",20:"key",16:"enemy",9:"enemy",10:"enemy",11:"enemy",18:"enemy",19:"enemy",13:"enemy"},{17:"start",0:"door",6:"key",16:"enemy",9:"enemy",10:"enemy",11:"enemy",18:"enemy",19:"enemy",13:"enemy",1:"enemy",7:"enemy",8:"enemy"}])).buildStart();
//# sourceMappingURL=index.ec2f7ae9.js.map
