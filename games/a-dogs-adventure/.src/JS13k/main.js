const canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d");canvas.width=640,canvas.height=295;let currDO,curr2DO,keyRight,keyLeft,keyJump,drawableObjects=[],movableObjects=[],jumpMaximum=0,maxJump=2,scoreTag=document.getElementById("scoreTag"),highScore=0;localStorage.length>0&&(highScore=localStorage.getItem("highScore"));let started=!1,jumpBtn=document.getElementById("jumpBtn"),lost=!1,barksTag=document.getElementById("barksTag"),amountOfBarks=7,barkBtn=document.getElementById("barkBtn");const tick=1e3/60;function setGameLoop(){started&&game.loop()}window.onload=setInterval(setGameLoop,tick),window.onload=function(){blurt("Run away from the Bubonic Plague and Infected Dogs! Use SpaceBar Or Jump Button To Jump And Press 'b' or Bark button to Bark"),setTimeout((()=>{started=!0}),3e3)},setInterval((()=>{started&&(player.velocity.max+=2,player.velocity.x=player.velocity.max)}),1e4),setInterval((()=>{started&&player.score++}),10);const game={x:canvas.getBoundingClientRect().x,y:canvas.getBoundingClientRect().y,width:canvas.width,height:canvas.height,loop:function(){Draw(),player.move(),scoreTag.innerHTML=`Score: ${player.score}`,barksTag.innerHTML=`Amount Of Barks: ${amountOfBarks}`}},player=new Player(400,100);function Player(t,e){this.x=t,this.y=e,this.startingX=t,this.startingY=e,this.width=98,this.height=70,this.score=0,this.animation="normal",this.woof=function(){},this.grv=.8,this.friction=.2,this.velocity={x:4,y:0,max:4},this.img=new Image,this.move=function(){this.x+this.width<0&&(lost||(player.score>highScore&&(localStorage.setItem("highScore",player.score.toString()),highScore=localStorage.getItem("highScore")),alert(`You Got Infected! You Have A Score of ${player.score} and a High Score of ${highScore}`),lost=!0),window.location=window.location),this.animation="normal",barks.length>0&&(this.animation="Bark"),keyJump&&(this.velocity.y-=1.3),this.velocity.x+=5,this.velocity.y+=this.grv,this.velocity.x>this.velocity.max&&(this.velocity.x=this.velocity.max),this.velocity.x<-this.velocity.max&&(this.velocity.x=-this.velocity.max);let t={x:this.x+this.velocity.x,y:this.y,width:this.width,height:this.height},e={x:this.x,y:this.y+this.velocity.y,width:this.width,height:this.height};for(let i=0;i<blocks.length;i++){let s={x:blocks[i].x,y:blocks[i].y,width:blocks[i].width,height:blocks[i].height};if(checkIntersection(t,s)&&(player.x-=player.velocity.x),checkIntersection(e,s)&&(this.velocity.y=0),blocks[i].x+blocks[i].width<=0){let t,e,s,o,h,a;blocks[i].x=canvas.width,this.velocity.x<8&&(t=Math.floor(10*Math.random()+1),e=Math.floor(15*Math.random()+1),s=Math.floor(15*Math.random()+1),a=Math.floor(35*Math.random()+1)),this.velocity.x>=8&&this.velocity.x<16&&(t=Math.floor(20*Math.random()+1),e=Math.floor(30*Math.random()+1),s=Math.floor(30*Math.random()+1),o=Math.floor(30*Math.random()+1),a=Math.floor(50*Math.random()+1)),this.velocity.x>=16&&this.velocity.x<24&&(t=Math.floor(20*Math.random()+1),e=Math.floor(30*Math.random()+1),s=Math.floor(30*Math.random()+1),o=Math.floor(30*Math.random()+1),h=Math.floor(30*Math.random()+1),a=Math.floor(75*Math.random()+1)),this.velocity.x>=24&&(t=Math.floor(30*Math.random()+1),e=Math.floor(40*Math.random()+1),s=Math.floor(40*Math.random()+1),o=Math.floor(40*Math.random()+1),h=Math.floor(50*Math.random()+1),a=Math.floor(95*Math.random()+1)),3==t?blocks.push(new Block(canvas.width,blocks[0].y-100,100,100)):4==e&&blocks.push(new Block(canvas.width,blocks[0].y-200,100,100)),5==s&&(0==Math.floor(this.velocity.y)||0==Math.round(this.velocity.y)||0==Math.round(this.velocity.y)&&0==Math.floor(this.velocity.y))&&(blocks[blocks.length-1].x!=canvas.width||blocks[blocks.length-1].y!=player.y)&&(blocks[blocks.length-2].x!=canvas.width||blocks[blocks.length-2].y!=player.y)&&enemies.push(new Enemy(canvas.width,player.y)),4==o&&blocks.push(new Block(canvas.width,blocks[0].y-300,100,100)),5==h&&blocks.push(new Block(canvas.width,blocks[0].y-400,100,100)),6==a&&(console.log("hai"),bark(!0))}}for(let e=0;e<barkObjects.length;e++)checkIntersection(t,borderRect={x:barkObjects[e].x,y:barkObjects[e].y,width:barkObjects[e].width,height:barkObjects[e].height})&&(barkObjects.splice(e,1),amountOfBarks++);for(let t=0;t<barks.length;t++){let e={x:barks[t].x,y:barks[t].y,width:barks[t].width,height:barks[t].height,id:barks[t].id};for(let i=0;i<blocks.length;i++)checkIntersection({x:blocks[i].x,y:blocks[i].y,width:blocks[i].width,height:blocks[i].height},e)&&null==barks[t].isObject&&(barks.splice(t,1),blocks.splice(i,1))}for(let t=0;t<barks.length;t++)for(let e=0;e<enemies.length;e++){let i={x:barks[t].x,y:barks[t].y,width:barks[t].width,height:barks[t].height,id:barks[t].id};checkIntersection({x:enemies[e].x,y:enemies[e].y,width:enemies[e].width,height:enemies[e].height},i)&&(barks.splice(t,1),enemies.splice(e,1))}for(let i=0;i<enemies.length;i++)(checkIntersection(t,borderRect={x:enemies[i].x,y:enemies[i].y,width:enemies[i].width,height:enemies[i].height})||checkIntersection(e,borderRect))&&(this.velocity.x=0,this.velocity.y=0,enemies.splice[1],lost||(player.score>highScore&&(localStorage.setItem("highScore",player.score.toString()),highScore=localStorage.getItem("highScore")),alert(`You Got Infected! You Have A Score of ${player.score} and a High Score of ${highScore}`),lost=!0),window.location=window.location);for(let t=0;t<enemies.length;t++)for(let e=0;e<blocks.length;e++)Math.round(blocks[e].x)==Math.round(enemies[t].x)&&Math.round(blocks[e].y)==Math.round(enemies[t].y)&&blocks.splice[1];for(let t=0;t<movableObjects.length;t++)if(Array.isArray(movableObjects[t])){let e=movableObjects[t];for(let t=0;t<e.length;t++)e[t].x-=this.velocity.x,e[t].y-=this.velocity.y}else movableObjects[t].x-=this.velocity.x,movableObjects[t].y-=this.velocity.y},this.draw=function(){"normal"==this.animation?this.img.src="jumboFrame1.png":"bark"==this.animation.toLowerCase()&&(this.img.src="jumboFrame2.png"),ctx.drawImage(this.img,this.x,this.y,this.width,this.height)}}function Draw(){ctx.clearRect(0,0,game.width,game.height),ctx.fillStyle="#e28743",ctx.fillRect(0,0,game.width,game.height),ctx.fillStyle="black",ctx.font="65px Ariel",ctx.fillText("A Dog's Adventure",280,670);for(let t=0;t<drawableObjects.length;t++)if(Array.isArray(drawableObjects[t])){currDO=drawableObjects[t];for(let t=0;t<currDO.length;t++)if(Array.isArray(currDO[t])){curr2DO=currDO[t];for(let t=0;t<curr2DO.length;t++)curr2DO[t].draw()}else currDO[t].draw()}else drawableObjects[t].draw()}drawableObjects.push(player),window.addEventListener("keydown",(t=>{("ArrowRight"==t.key||"d"==t.key)&&(keyRight=!0),("ArrowLeft"==t.key||"a"==t.key)&&(keyLeft=!0),("ArrowUp"==t.key||"w"==t.key||" "==t.key)&&jumpMaximum<maxJump&&(t.preventDefault(),jumpMaximum+=1,keyJump=!0,setTimeout((()=>{keyJump=!1}),300))})),window.addEventListener("keyup",(t=>{("ArrowRight"==t.key||"d"==t.key)&&(keyRight=!1),("ArrowLeft"==t.key||"a"==t.key)&&(keyLeft=!1),"b"==t.key&&amountOfBarks>0&&(bark(),amountOfBarks--),("ArrowUp"==t.key||"w"==t.key||" "==t.key)&&(keyJump=!1,jumpMaximum=0)})),barkBtn.onclick=function(){amountOfBarks>0&&(bark(),amountOfBarks--)},barkBtn.addEventListener("touchend",(t=>{amountOfBarks>0&&(bark(),amountOfBarks--)})),jumpBtn.addEventListener("mousedown",(t=>{jumpMaximum<maxJump&&(t.preventDefault(),jumpMaximum+=1,keyJump=!0,setTimeout((()=>{keyJump=!1}),300))})),jumpBtn.addEventListener("mouseup",(t=>{keyJump=!1,jumpMaximum=0})),jumpBtn.addEventListener("touchstart",(t=>{jumpMaximum<maxJump&&(t.preventDefault(),jumpMaximum+=1,keyJump=!0,setTimeout((()=>{keyJump=!1}),300))})),jumpBtn.addEventListener("touchend",(t=>{keyJump=!1,jumpMaximum=0})),window.addEventListener("blur",(()=>{started=!1})),window.addEventListener("focus",(()=>{started=!0}));let blocks=[];function Block(t,e,i,s,o){this.x=t,this.y=e,this.width=i,this.height=s,this.type=o,this.img=new Image,this.draw=function(){this.type="normal",this.img.src="blockImg.png",ctx.drawImage(this.img,this.x,this.y,this.width,this.height)}}drawableObjects.push(blocks),movableObjects.push(blocks),blocks.push(new Block(5e24,500,100,100)),blocks.push(new Block(0,500,100,100)),blocks.push(new Block(100,500,100,100)),blocks.push(new Block(200,500,100,100)),blocks.push(new Block(300,500,100,100)),blocks.push(new Block(400,500,100,100)),blocks.push(new Block(500,500,100,100)),blocks.push(new Block(600,500,100,100)),blocks.push(new Block(700,500,100,100)),blocks.push(new Block(800,500,100,100)),blocks.push(new Block(900,500,100,100)),blocks.push(new Block(1e3,500,100,100));let enemies=[];function Enemy(t,e){this.x=t,this.y=e,this.width=player.width,this.height=player.height,this.id=RandomId(),this.pos=void 0,this.img=new Image,this.draw=function(){this.img.src="strayDogImg.png",ctx.drawImage(this.img,this.x,this.y,this.width,this.height);for(let t=0;t<enemies.length;t++)enemies[t].id==this.id&&(this.pos=t);for(let t=0;t<blocks.length;t++){let e={x:blocks[t].x,y:blocks[t].y,width:blocks[t].width,height:blocks[t].height};checkIntersection(enemies[this.pos],e)&&blocks.splice(t,1)}}}drawableObjects.push(enemies),movableObjects.push(enemies);let barks=[],barkObjects=[];function Bark(t,e,i,s,o){this.x=t,this.y=e,this.width=i,this.height=s,this.id=RandomId(),this.img=new Image,this.isObject=o,this.draw=function(){if(this.img.src="barkImg.png",ctx.drawImage(this.img,this.x,this.y,this.width,this.height),null==this.isObject&&(this.x+=5),this.x>canvas.width&&null==this.isObject)for(let t=0;t<barks.length;t++)barks[t].id==this.id&&barks.splice(t,1);else if(this.x+this.width<0&&1==this.isObject)for(let t=0;t<barks.length;t++)barks[t].id==this.id&&barks.splice(t,1)}}function checkIntersection(t,e){return!(t.x>=e.x+e.width||t.x+t.width<=e.x||t.y>=e.y+e.height||t.y+t.height<=e.y)}function bark(t){1==t?barkObjects.push(new Bark(canvas.width,player.y+15,60,50,!0)):barks.push(new Bark(player.x+player.width,player.y+15,60,50))}function RandomId(){return Math.random().toString(36)}drawableObjects.push(barks),drawableObjects.push(barkObjects),movableObjects.push(barkObjects);