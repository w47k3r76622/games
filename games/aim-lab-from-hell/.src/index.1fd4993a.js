const canvasEl=dom("game"),ctx=canvasEl.getContext("2d"),TARGET_ENTITY_SPAWN_PADDING=20,TARGET_ENTITY_RADIUS=30,TARGET_ENTITY_BG_MIN_RADIUS=0,TARGET_ENTITY_BG_MAX_RADIUS=40,TARGET_ENTITY_START_TTD=40,TARGET_ENTITY_MAX_TTD=10,TARGET_ENTITY_TDD_DIFF_PER_UPDATE=.05,TARGET_ENTITY_SPRITE_PADDING=16,GAME_LIVES_AT_START=5,GHOST_ASSETS=[dom("img-devil"),dom("img-flying-pumpkin"),dom("img-ghost"),dom("img-mask"),dom("img-mokey-skull"),dom("img-worker-skull")],GameStatus={NewGame:"NewGame",Playing:"Playing",Paused:"Paused",GameOver:"GameOver"},gameConfig={fps:10,fpsInterval:100,then:Date.now(),width:null,height:null,status:GameStatus.NewGame,paused:function(){return this.status===GameStatus.Paused||this.status===GameStatus.NewGame||this.status===GameStatus.GameOver}};class TargetEntity{bgr=0;dbgr=0;img;constructor(t,e,a,i){this.x=t,this.y=e,this.r=a,this.dbgr=(40-this.bgr)/i,this.r2=a**2,this.ttd=i,this.img=GHOST_ASSETS.random()}static random(t=40){return new TargetEntity(randomNumber(50,gameConfig.width-50),randomNumber(50,gameConfig.height-50),30,t)}update(){this.ttd-=1,this.bgr+=this.dbgr,this.ttd<=0&&console.info("[Target Entity] expired")}draw(){ctx.beginPath(),ctx.arc(this.x,this.y,this.bgr,0,2*Math.PI),ctx.fill(),ctx.drawImage(this.img,this.x-this.r-16,this.y-this.r-16,2*this.r+32,2*this.r+32)}canCollideWith({x:t,y:e}){return(this.x-t)**2+(this.y-e)**2<this.r2}}class TargetEntityController{targets=[];targetsLimit=2;shootAt=void 0;_currentMaxTdd=40;get currentMaxTdd(){return Math.max(Math.floor(this._currentMaxTdd),10)}update(){let t=0;this.targets.forEach((e=>{this.shootAt&&e.canCollideWith(this.shootAt)&&(gameManager.didHit(),t+=1,e.ttd=-1),e.update()}));const e=this.shootAt&&0===t,a=this.targets.some((t=>0===t.ttd));(e||a)&&gameManager.didMiss(),this.targets=this.targets.filter((t=>t.ttd>0)),this.targets.length<this.targetsLimit&&this.generateNewTarget(),this.shootAt=void 0,this._currentMaxTdd-=.05}draw(){this.targets.forEach((t=>t.draw()))}generateNewTarget(){console.assert(this.targets.length<this.targetsLimit,"Targets entities overflowing"),this.targets.push(TargetEntity.random(this.currentMaxTdd))}}let targetEntityController=new TargetEntityController;class HTMLManager{instructionsPerGameStatus={};constructor(){this.instructionsPerGameStatus[GameStatus.NewGame]="Dont  let  em  loose  and  dont  miss  •  Fire  to  start",this.instructionsPerGameStatus[GameStatus.Playing]="Dont  let  em  loose  and  dont  miss",this.instructionsPerGameStatus[GameStatus.Paused]="Paused  •  Fire  to  start",this.instructionsPerGameStatus[GameStatus.GameOver]="All  Hell  Loose  •  Fire  to  start"}update(){dom("ui-instructions").innerText=this.instructionsPerGameStatus[gameConfig.status];const t=dom("img-heart").cloneNode(!0);t.hidden=!1;const e=dom("img-rip").cloneNode(!0);e.hidden=!1;const a=`${gameConfig.status===GameStatus.GameOver?e.outerHTML:t.outerHTML.repeat(gameManager.currentLives)}   ${gameManager.currentScore}`;dom("ui-all-score").innerHTML=a}}const htmlManager=new HTMLManager;class GameManager{isGameInProgress=!1;currentScore=0;currentMiss=0;currentLives=5;startGame(){sound.start(),this.isGameInProgress=!0}resetGame(){this.isGameInProgress=!1,targetEntityController=new TargetEntityController,this.currentLives=5,this.currentMiss=0,this.currentScore=0,gameOver(),sound.over()}pauseGame(){this.isGameInProgress=!1}didHit(){this.currentScore+=1,sound.shoot(),console.info(`[hit] current score: ${this.currentScore}`)}didMiss(){this.currentMiss+=1,this.currentLives-=1,console.info(`[miss] curent misses: ${this.currentMiss}, current lives: ${this.currentLives}`),this.currentLives<=0?this.resetGame():sound.miss()}}const gameManager=new GameManager;function engineDidInitialize(){htmlManager.update()}function engineDidPause(){gameManager.pauseGame(),htmlManager.update()}function engineDidPlay(){gameManager.startGame(),htmlManager.update()}function engineDidUpdate(){gameManager.isGameInProgress&&targetEntityController.update(),htmlManager.update()}function engineDidDraw(){ctx.clearRect(0,0,gameConfig.width,gameConfig.height),targetEntityController.draw()}function engineDidLeftClick(t){targetEntityController.shootAt=t}function gameLoop(){engineDidUpdate(),engineDidDraw()}function didKeyDown(t){" "===t.key&&(gameConfig.paused()?play():pause())}function didClick(t){if(0!==t.button)return;const{clientX:e,clientY:a}=t,{x:i,y:n}=canvasEl.getBoundingClientRect(),s={x:e-i,y:a-n};gameConfig.paused()?play():engineDidLeftClick(s)}function pause(){gameConfig.status=GameStatus.Paused,console.info("[game] paused"),engineDidPause()}function play(){gameConfig.status===GameStatus.GameOver&&console.clear(),gameConfig.status=GameStatus.Playing,console.info("[game] started"),engineDidPlay(),startGameLoop()}function gameOver(){console.info("[game] over"),gameConfig.status=GameStatus.GameOver}function startGameLoop(){console.assert(!gameConfig.paused(),"starting loop when game is paused"),window.requestAnimationFrame(triggerGameLoop)}function triggerGameLoop(){gameConfig.paused()||window.requestAnimationFrame(triggerGameLoop);const t=Date.now(),e=t-gameConfig.then;e>gameConfig.fpsInterval&&(gameConfig.then=t-e%gameConfig.fpsInterval,gameLoop())}function initializeGame(){console.info("[intialize]"),addEventListners(),gameConfig.width=canvasEl.clientWidth,gameConfig.height=canvasEl.clientHeight,canvasEl.width=gameConfig.width,canvasEl.height=gameConfig.height,ctx.imageSmoothingEnabled=!1,ctx.fillStyle="rgba(0, 0, 0, 0.7)",engineDidInitialize()}function addEventListners(){document.addEventListener("keydown",didKeyDown),canvasEl.addEventListener("click",didClick)}