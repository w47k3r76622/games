!function(t){var i={};function e(s){if(i[s])return i[s].exports;var r=i[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=i,e.d=function(t,i,s){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:s})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(e.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var r in t)e.d(s,r,function(i){return t[i]}.bind(null,r));return s},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){t.exports=e(1)},function(t,i,e){"use strict";e.r(i);var s=e(2),r=e(16);const o=document.querySelector(".c"),n=o.getContext("webgl",{preserveDrawingBuffer:!0});o.height=window.innerHeight,o.width=window.innerWidth,o.style["touch-action"]="none",document.body.style="padding: 0; margin: 0; overflow: hidden",n.enable(n.DEPTH_TEST),n.viewport(0,0,o.width,o.height),new s.default(o,n,r).menu()},function(t,i,e){"use strict";e.r(i);var s=e(3),r=e(5),o=e(6),n=e(7),h=e(8),l=e(9),a=e(10),_=e(13),c=e.n(_),d=e(14),u=e.n(d),m=e(15);i.default=class{constructor(t,i,e){i.cullFace(i.FRONT_AND_BACK),this._music=new m.default,this._background=new a.default(i,[t.width,t.height]),this._canvas=t,this._gl=i,this._levels=e,this._physics=new n.default,this.time=0,this._fluctateRange=.05,this._range=.55,this._p=new o.default,this._p.perspective(45,window.innerWidth/window.innerHeight,1e-4,100),this._matrix=new o.default,this._model=new o.default,this._controls=new h.default(t,this._physics),this._setUpGameOver(),this._targetBuffer=new s.default(this._gl,[[0,0,0]]),this._boundPlay=this.play.bind(this),this._boundPlayLevel=this.playLevel.bind(this),this._setupMenu()}playLevel(t){this._levelId=t,this._music.speed=1.25-.5*t/this._levels.length,this._startTime=(new Date).getTime(),this._shader=new r.default(this._gl,u.a.replace(new RegExp("NR_OF_LIGHTS","g"),this._levels[this._levelId].lights.length),c.a,{attribs:["aPosition","aColor"],uniforms:["fluctate","uModel","range","uCamera","cameraPos","lightPositions","lightColors","uTime"]}),this._lights=new l.default(this._shader),this._positions=this._physics.loadTerrain(this._levels[t]),this._walls=new s.default(this._gl,this._positions.wall),this._ground=new s.default(this._gl,this._positions.ground),this._controls.setPos(this._levels[t].playerPosition);for(let i=0;i<this._levels[t].lights.length;i++)this._lights.addLight(this._levels[t].lights[i]);this.play()}drawCubeBuffer(t){t.getBuffer().bind(),t.getBuffer().point(this._shader,"aPosition",3,this._gl.FLOAT),t.getColorBuffer().bind(),t.getColorBuffer().point(this._shader,"aColor",3,this._gl.FLOAT),this._gl.drawArrays(this._gl.TRIANGLES,0,t._vertices.length/3)}_setupMenu(){const t=document.createElement("div");t.style.position="absolute",t.className="menu",t.style.top="0";const i=document.createElement("h1");i.textContent="Menu",t.appendChild(i);for(let i=0;i<this._levels.length;i++){const e=document.createElement("button");e.textContent="play level: "+(i+1),e.addEventListener("click",()=>{this._boundPlayLevel(i),this.closeMenu()}),t.appendChild(e)}this._menu=t}_setUpGameOver(){const t=document.createElement("div"),i=document.createElement("h1"),e=document.createElement("button"),s=document.createElement("button");t.className="menu",t.style.position="absolute",t.style.top="0",i.textContent="Game Over",t.appendChild(i),e.addEventListener("click",()=>{this.closeGameOver(),this.playLevel(this._levelId)}),e.textContent="replay",s.addEventListener("click",()=>{this.closeGameOver(),this.menu()}),s.textContent="menu",t.appendChild(i),t.appendChild(e),t.appendChild(s),this._gameOver=t}gameOver(){this._background.startDraw(),this._gl.clear(this._gl.COLOR_BUFFER_BIT),this._controls.releasePointer(),document.body.appendChild(this._gameOver)}closeGameOver(){this._background.stopDraw(),document.body.removeChild(this._gameOver)}menu(){this._music.speed=1.25,this._background.startDraw(),this._gl.clear(this._gl.COLOR_BUFFER_BIT),this._controls.releasePointer(),document.body.appendChild(this._menu)}closeMenu(){this._background.stopDraw(),document.body.removeChild(this._menu)}play(){this.time+=.02;const t=Math.cos(this.time)*this._fluctateRange;this._controls.moveHandler(),this._matrix.identity();const i=this._controls.getPos();if(this._matrix=this._matrix.rotateX(this._controls.getRot()[0]),this._matrix=this._matrix.rotateY(this._controls.getRot()[1]),this._matrix=this._matrix.translate(i),this._matrix=this._p.multiply(this._matrix),this._physics.testPlayerAgainstLights([-i[0],-i[1],-i[2]],this._lights.getLights()))this.gameOver();else{{const t=Math.abs(-i[0]-this._levels[this._levelId].target[0]),e=Math.abs(-i[2]-this._levels[this._levelId].target[2]);if(Math.sqrt(t*t+e*e)<.25)return this._levelId++,void(this._levelId>=this._levels.length?this.menu():this.playLevel(this._levelId))}this._gl.clear(this._gl.COLOR_BUFFER_BIT|this._gl.DEPTH_BUFFER_BIT),this._model.identity(),this._shader.bind(),this._shader.uploadMat4(this._matrix.m,"uCamera"),this._shader.uploadMat4(this._model.m,"uModel"),this._shader.uploadFloat(.001*(this._startTime-(new Date).getTime()),"uTime"),this._shader.uploadVec3([-i[0],.5-i[1],-i[2]],"cameraPos"),this._shader.uploadFloat(this._range+t,"range"),this._shader.uploadFloat(t,"fluctate"),this._lights.updateShader(),this.drawCubeBuffer(this._walls),this.drawCubeBuffer(this._ground),this._model.identity(),this._model=this._model.translate(this._levels[this._levelId].target),this._model=this._model.scale([.2,.2,.2]),this._model=this._model.rotateY(this.time),this._model=this._model.rotateX(this.time),this._shader.uploadMat4(this._model.m,"uModel"),this.drawCubeBuffer(this._targetBuffer),requestAnimationFrame(this._boundPlay)}}}},function(t,i,e){"use strict";e.r(i);var s=e(4);i.default=class{constructor(t,i,e){this._gl=t,this._buffer=new s.default(t,[]),this._colorBuffer=new s.default(t,[]),this.setupBuffer(i,e)}setupBuffer(t,i){this._vertices=[],this._positions=t,this._colors=[];for(let i=0;i<t.length;i++)this._vertices.push(t[i][0]-.5,t[i][1]-.5,t[i][2]-.5,.5+t[i][0],.5+t[i][1],t[i][2]-.5,.5+t[i][0],t[i][1]-.5,t[i][2]-.5,t[i][0]-.5,t[i][1]-.5,t[i][2]-.5,t[i][0]-.5,.5+t[i][1],t[i][2]-.5,.5+t[i][0],.5+t[i][1],t[i][2]-.5,t[i][0]-.5,t[i][1]-.5,t[i][2]+.5,.5+t[i][0],.5+t[i][1],t[i][2]+.5,.5+t[i][0],t[i][1]-.5,t[i][2]+.5,t[i][0]-.5,t[i][1]-.5,t[i][2]+.5,t[i][0]-.5,.5+t[i][1],t[i][2]+.5,.5+t[i][0],.5+t[i][1],t[i][2]+.5,t[i][0]+.5,t[i][1]-.5,t[i][2]-.5,.5+t[i][0],.5+t[i][1],t[i][2]+.5,.5+t[i][0],t[i][1]-.5,t[i][2]+.5,t[i][0]+.5,t[i][1]+.5,t[i][2]-.5,.5+t[i][0],.5+t[i][1],t[i][2]+.5,.5+t[i][0],t[i][1]-.5,t[i][2]-.5,t[i][0]-.5,t[i][1]-.5,t[i][2]-.5,t[i][0]-.5,.5+t[i][1],t[i][2]+.5,t[i][0]-.5,t[i][1]-.5,t[i][2]+.5,t[i][0]-.5,t[i][1]+.5,t[i][2]-.5,t[i][0]-.5,.5+t[i][1],t[i][2]+.5,t[i][0]-.5,t[i][1]-.5,t[i][2]-.5,t[i][0]-.5,t[i][1]+.5,t[i][2]+.5,t[i][0]+.5,t[i][1]+.5,t[i][2]+.5,t[i][0]-.5,t[i][1]+.5,t[i][2]-.5,t[i][0]+.5,t[i][1]+.5,t[i][2]-.5,t[i][0]+.5,t[i][1]+.5,t[i][2]+.5,t[i][0]-.5,t[i][1]+.5,t[i][2]-.5,t[i][0]-.5,t[i][1]-.5,t[i][2]+.5,t[i][0]+.5,t[i][1]-.5,t[i][2]+.5,t[i][0]-.5,t[i][1]-.5,t[i][2]-.5,t[i][0]+.5,t[i][1]-.5,t[i][2]-.5,t[i][0]+.5,t[i][1]-.5,t[i][2]+.5,t[i][0]-.5,t[i][1]-.5,t[i][2]-.5);for(let t=0;t<this._vertices.length;t+=18)for(let t=0;t<6;t++)void 0!==i?this._colors.push(i[0],i[1],i[2]):this._colors.push(1,1,1);this._buffer.buffer(new Float32Array(this._vertices)),this._colorBuffer.buffer(new Float32Array(this._colors))}getBuffer(){return this._buffer}getColorBuffer(){return this._colorBuffer}}},function(t,i,e){"use strict";e.r(i);const s=34962,r=35044;i.default=class{constructor(t,i){this._gl=t,this.id=t.createBuffer(),this.buffer(i)}bind(){this._gl.bindBuffer(s,this.id)}buffer(t){this.bind(),this._gl.bufferData(s,t,r)}point(t,i,e,s){this.bind();const r=t.attribs[i];this._gl.enableVertexAttribArray(r),this._gl.vertexAttribPointer(r,e,s,!1,0,0)}}},function(t,i,e){"use strict";e.r(i);i.default=class{constructor(t,i,e,s){if(this._gl=t,this.rawAttribs=s.attribs,this.rawUniforms=s.uniforms,this.program=t.createProgram(),this.vs=t.createShader(t.VERTEX_SHADER),this.fs=t.createShader(t.FRAGMENT_SHADER),this.compileShader(this._gl,this.vs,e),this.compileShader(this._gl,this.fs,i),t.attachShader(this.program,this.vs),t.attachShader(this.program,this.fs),t.linkProgram(this.program),!t.getProgramParameter(this.program,t.LINK_STATUS))throw s=t.getProgramInfoLog(this.program),new Error("Could not compile WebGL this.program. \n\n"+s);this.grabParameters()}bind(){this._gl.useProgram(this.program)}uploadInt(t,i){this.gl.uniform1i(this.uniforms[i],t)}uploadFloat(t,i){this._gl.uniform1f(this.uniforms[i],t)}uploadVec2(t,i){this._gl.uniform2fv(this.uniforms[i],t)}uploadVec3(t,i){this._gl.uniform3fv(this.uniforms[i],t)}uploadVec4(t,i){this._gl.uniform4fv(this.uniforms[i],t)}uploadMat4(t,i){this._gl.uniformMatrix4fv(this.uniforms[i],!1,t)}grabParameters(){this.uniforms=[];for(let t=0;t<this.rawUniforms.length;t++)this.uniforms[this.rawUniforms[t]]=this._gl.getUniformLocation(this.program,this.rawUniforms[t]);this.attribs=[];for(let t=0;t<this.rawAttribs.length;t++)this.attribs[this.rawAttribs[t]]=this._gl.getAttribLocation(this.program,this.rawAttribs[t])}compileShader(t,i,e){return t.shaderSource(i,e),t.compileShader(i),!!t.getShaderParameter(i,t.COMPILE_STATUS)||(alert(t.getShaderInfoLog(i)),null)}}},function(t,i,e){"use strict";e.r(i);class s{constructor(){this.m=[];for(let t=0;t<16;t++)this.m.push(0);this.identity()}identity(){for(let t=0;t<16;t++)this.m[t]=0;for(let t=0;t<16;t+=5)this.m[t]=1}perspective(t,i,e,s){let r=t*Math.PI/180,o=e*Math.tan(r/2),n=o*i;this.m[0]=2*e/(n- -n),this.m[5]=2*e/(o- -o),this.m[8]=(n+-n)/(n- -n),this.m[9]=(o+-o)/(o- -o),this.m[10]=-(s+e)/(s-e),this.m[11]=-1,this.m[14]=-2*s*e/(s-e),this.m[15]=0}multiply(t){let i=new s;for(let e=0;e<16;e++)i.m[e]=this.m[e%4]*t.m[4*Math.floor((1|e)/4)]+this.m[e%4+4]*t.m[4*Math.floor((1|e)/4)+1]+this.m[e%4+8]*t.m[4*Math.floor((1|e)/4)+2]+this.m[e%4+12]*t.m[4*Math.floor((1|e)/4)+3];return i}scale(t){let i=new s,e=0;for(let s=0;s<15;s+=5)i.m[s]=t[e],e++;return this.multiply(i)}translate(t){let i=new s;for(let e=0;e<3;e++)i.m[e+12]=t[e];return this.multiply(i)}rotateY(t){let i=new s;return i.m[0]=Math.cos(t),i.m[2]=Math.sin(t),i.m[5]=1,i.m[8]=-Math.sin(t),i.m[10]=Math.cos(t),i.m[15]=1,this.multiply(i)}rotateX(t){let i=new s;return i.m[0]=1,i.m[5]=Math.cos(t),i.m[6]=-Math.sin(t),i.m[9]=Math.sin(t),i.m[10]=Math.cos(t),i.m[15]=1,this.multiply(i)}}i.default=s},function(t,i,e){"use strict";e.r(i);i.default=class{constructor(){this._colliders=[],this._terrain=[],this._p=document.createElement("p"),this._p.style.position="absolute",this._p.style.top="0",document.body.appendChild(this._p)}testPlayerAgainstLights(t,i){for(let e=0;e<i.length;e++){const s=i[e].position[0]-t[0],r=i[e].position[2]-t[2];if(Math.sqrt(s*s+r*r)<.75)return!0}return!1}loadTerrain(t){const i=[],e=[];this._terrain=[];for(let s=0;s<t.grid.length;s++){this._terrain.push([]);for(let r=0;r<t.grid[s].length;r++){if(this._terrain[s].push(!1),0===s||s===t.grid.length-1)for(let t=0;t<3;t++)i.push([s+(0===s?-1:1),t-1,r]);if(0===r||r===t.grid[s].length-1)for(let t=0;t<3;t++)i.push([s,t-1,r+(0===r?-1:1)]);if(0===t.grid[s][r])e.push([s,-1,r]);else if(1===t.grid[s][r]){this._terrain[s][r]=!0;for(let t=0;t<2;t++)i.push([s,t,r])}}}return{wall:i,ground:e}}generateTerrain(t,i){const e=[];this._terrain=[];for(let s=0;s<t;s++){this._terrain.push([]);for(let r=0;r<i;r++){if(e.push([s,-1,r]),0===s||s===t-1)for(let t=0;t<3;t++)e.push([s+(0===s?-1:1),t-1,r]);if(0===r||r===i-1)for(let t=0;t<3;t++)e.push([s,t-1,r+(0===r?-1:1)]);this._terrain[s].push(Math.random()<.1),this._terrain[s][r]&&(e.push([s,1,r]),e.push([s,0,r]))}}return e}testAgainstTerrain(t,i){const e=-Math.floor(.5+t[0]),s=-Math.floor(.5+t[2]),r=-Math.floor(.5+i[0]),o=-Math.floor(.5+i[2]);return e<0||s<0||e>=this._terrain.length||s>=this._terrain[e].length?{hit:!0,collision:[r-e,o-s]}:{hit:this._terrain[e][s],collision:[r-e,o-s]}}}},function(t,i,e){"use strict";e.r(i);i.default=class{constructor(t,i){this._physics=i,this._pos=[0,0,0],this._rot=[0,0,0],this._setupEventListeners(t),this._canvas=t,this._locked=!1,this._lastX=0,this._sensitivity=2,this._down=[],this._up=[],this._mobileMove=[0,0,0],this._lastX=0;for(let t=0;t<255;t++)this._down.push(!1),this._up.push(!0)}_dpadHandler(t){let i=t.clientX/this._controlHeight,e=(t.clientY-this._topOffset)/this._controlHeight;i=Math.min(i,1),e=Math.max(e,0),i-=.5,e-=.5,i*=2,e*=2,this._mobileMove[0]=.025*-i,this._mobileMove[2]=.025*e,this._mobileMove[0]=Math.min(Math.max(-.025,this._mobileMove[0]),.025),this._mobileMove[2]=Math.min(Math.max(-.025,this._mobileMove[2]),.025),this._lastPointer=t}_pointerDownAndUpHandler(t){this._lastX=t.clientX,this._lastY=t.clientY}_pointerHandler(t){this._rot[1]+=(t.clientX-this._lastX)/window.innerWidth*5,this._rot[0]+=(t.clientY-this._lastY)/window.innerHeight*2,this._lastX=t.clientX,this._lastY=t.clientY}_clickHandler(){this._locked||this._canvas.requestPointerLock()}releasePointer(){document.exitPointerLock()}_pointerLockHandler(t){this._locked=!this._locked}_mouseHandler(t){this._rot[1]+=-t.movementX/window.innerWidth*this._sensitivity,this._rot[0]+=-t.movementY/window.innerHeight*this._sensitivity}_keyBoardHandler(t){"keydown"===t.type?(this._up[t.keyCode]=!1,this._down[t.keyCode]=!0):(this._up[t.keyCode]=!0,this._down[t.keyCode]=!1)}mobileMoveHandler(){const t=[this._mobileMove[0]*Math.cos(this._rot[1])-this._mobileMove[2]*Math.sin(this._rot[1]),this._mobileMove[1],-this._mobileMove[0]*Math.sin(this._rot[1])-this._mobileMove[2]*Math.cos(this._rot[1])],i=this._pos.slice(0);this._pos[0]+=t[0],this.moveDirection(i),this._pos[2]+=t[2],this.moveDirection(i)}moveDirection(t){const i=this._physics.testAgainstTerrain(this._pos,t);i.hit&&i.collision&&(0!==i.collision[0]&&(this._pos[0]=t[0]),0!==i.collision[1]&&(this._pos[2]=t[2]))}desktopMoveHandler(){const t=[0,0,0];for(let i=0;i<this._down.length;i++)switch(this._down[i]?0:i){case 65:t[0]-=.025;break;case 87:t[2]+=.025;break;case 83:t[2]-=.025;break;case 68:t[0]+=.025}const i=[t[0]*Math.cos(this._rot[1])-t[2]*Math.sin(this._rot[1]),t[1],-t[0]*Math.sin(this._rot[1])-t[2]*Math.cos(this._rot[1])],e=this._pos.slice(0);this._pos[0]+=i[0],this.moveDirection(e),this._pos[2]+=i[2],this.moveDirection(e)}moveHandler(){this._rot[0]=Math.min(Math.max(-.6,this._rot[0]),.9),this._mobile?this.mobileMoveHandler():this.desktopMoveHandler()}_pointerUpHandler(t){t.pointerId===this._lastPointer.pointerId&&(this._mobileMove[0]=0,this._mobileMove[2]=0)}_setupEventListeners(t){if(void 0===window.orientation)this._mobile=!1,document.addEventListener("pointerlockchange",this._pointerLockHandler.bind(this)),t.addEventListener("click",this._clickHandler.bind(this)),t.addEventListener("mousemove",this._mouseHandler.bind(this)),document.addEventListener("keydown",this._keyBoardHandler.bind(this)),document.addEventListener("keyup",this._keyBoardHandler.bind(this));else{this._mobile=!0,t.addEventListener("pointermove",this._pointerHandler.bind(this)),t.addEventListener("pointerup",this._pointerDownAndUpHandler.bind(this)),t.addEventListener("pointerdown",this._pointerDownAndUpHandler.bind(this));const i=document.querySelector(".control");i.addEventListener("pointerup",this._pointerUpHandler.bind(this)),i.addEventListener("pointermove",this._dpadHandler.bind(this)),this._mobileControls=document.querySelector(".control"),this._mobileControls.style.position="absolute",this._mobileControls.style.backgroundColor="orange",this._controlHeight=Math.min(window.innerHeight/2,175),this._topOffset=t.height-this._controlHeight,this._mobileControls.style.top=this._topOffset+"px",this._mobileControls.style.width=this._controlHeight+"px",this._mobileControls.style.height=this._controlHeight+"px"}}getRot(){return this._rot}getPos(){return this._pos}setPos(t){this._pos[0]=t[0],this._pos[1]=t[1],this._pos[2]=t[2]}}},function(t,i,e){"use strict";e.r(i);i.default=class{constructor(t,i){this._shader=t,this._lights=[],this._needsUpdate=!0}getLights(){return this._lights}addLight(t){t.position=t.positions[0].slice(),t.toNr=1,t.fromNr=0,this._lights.push(t)}findById(t){for(let i=0;i<this._lights.length;i++)if(this._lights[i].id===t)return this._lights[i];return{}}removeById(t){for(let i=0;i<this._lights.length;i++)this._lights[i].id===t&&this._lights.splice(i,1)}updateShader(){if(!this._needsUpdate)return;const t=[],i=[];for(let e=0;e<this._lights.length&&null!==this._lights;e++)this.updateLightPosition(this._lights[e]),t.push(...this._lights[e].position),i.push(...this._lights[e].color);this._shader.uploadVec3(i,"lightColors"),this._shader.uploadVec3(t,"lightPositions")}updateLightPosition(t){window.light=t;let i=!1;t.position[0]>t.positions[t.toNr][0]-.1&&t.position[0]<t.positions[t.toNr][0]+.1||(i=!0,t.position[0]=this.lerp(t.position[0],t.positions[t.toNr][0],.012375)),t.position[2]>t.positions[t.toNr][2]-.1&&t.position[2]<t.positions[t.toNr][2]+.1||(i=!0,t.position[2]=this.lerp(t.position[2],t.positions[t.toNr][2],.012375)),i||(t.toNr++,t.toNr=t.toNr%t.positions.length)}lerp(t,i,e){return t+e*(i-t)}}},function(t,i,e){"use strict";e.r(i);var s=e(4),r=e(5),o=e(11),n=e.n(o),h=e(12),l=e.n(h);i.default=class{constructor(t,i){this._gl=t,this._resolution=i,console.log(this._resolution),this.draw=this.draw.bind(this),this._buffer=new s.default(t,new Float32Array([-1,-1,-1,1,1,-1,-1,1,1,1,1,-1])),console.log(this._buffer),this._shader=new r.default(t,l.a,n.a,{attribs:["aPosition"],uniforms:["uTime","uAspect"]}),this._baseTime=(new Date).getTime(),this._aspect=[i[0]/i[1],i[1]/i[0]],this._aspect[0]>this._aspect[1]?this._aspect[1]=1:this._aspect[0]=1}draw(){this._gl.clear(this._gl.DEPTH_BUFFER_BIT|this._gl.COLOR_BUFFER_BIT),this._shader.bind(),this._shader.uploadFloat(.001*(this._baseTime-(new Date).getTime()),"uTime"),this._shader.uploadVec2(this._aspect,"uAspect"),this._buffer.bind(),this._buffer.point(this._shader,"aPosition",2,this._gl.FLOAT),this._gl.drawArrays(this._gl.TRIANGLES,0,6),this._drawing&&requestAnimationFrame(this.draw)}startDraw(){this._drawing=!0,requestAnimationFrame(this.draw)}stopDraw(){this._drawing=!1}}},function(t,i){t.exports="precision highp float;\r\n\r\nattribute vec2 aPosition;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n    vUv = (aPosition.xy + 1.) * 0.5;\r\n    gl_Position = vec4(aPosition, 0, 1);\r\n}\r\n"},function(t,i){t.exports="precision highp float;\r\n\r\nuniform vec2 uAspect;\r\nuniform float uTime;\r\n\r\nvarying vec2 vUv;\r\n\r\nfloat random (in vec2 _st) {\r\n    return fract(sin(dot(_st.xy,\r\n                         vec2(12.9898,78.233)))*\r\n        43758.5453123);\r\n}\r\n\r\nfloat noise (in vec2 _st) {\r\n    vec2 i = floor(_st);\r\n    vec2 f = fract(_st);\r\n\r\n    float a = random(i);\r\n    float b = random(i + vec2(1.0, 0.0));\r\n    float c = random(i + vec2(0.0, 1.0));\r\n    float d = random(i + vec2(1.0, 1.0));\r\n\r\n    vec2 u = f * f * (3.0 - 2.0 * f);\r\n\r\n    return mix(a, b, u.x) +\r\n            (c - a)* u.y * (1.0 - u.x) +\r\n            (d - b) * u.x * u.y;\r\n}\r\n\r\n#define NUM_OCTAVES 5\r\n\r\nfloat fbm ( in vec2 _st) {\r\n    float v = 0.0;\r\n    float a = 0.5;\r\n    vec2 shift = vec2(100.0);\r\n    mat2 rot = mat2(cos(0.5), sin(0.5),\r\n                    -sin(0.5), cos(0.50));\r\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\r\n        v += a * noise(_st);\r\n        _st = rot * _st * 2.0 + shift;\r\n        a *= 0.5;\r\n    }\r\n    return v;\r\n}\r\n\r\nvoid main() {\r\n    vec2 st = (vUv * uAspect) * 5.;\r\n\t\r\n\tvec2 u = vec2(0.);\r\n\tu.x = fbm( st - vec2(0.5));\r\n    u.y = fbm( st + vec2(1.0));\r\n    \r\n    vec2 q = vec2(0.);\r\n    q.x = fbm( st + u + vec2(0.5, 4.5) - 0.12 * uTime);\r\n    q.y = fbm( st + u + vec2(3.5, 4.5) + 0.095 * uTime);\r\n\t\r\n    vec2 r = vec2(0.);\r\n    r.x = fbm( st + q + vec2(1.7,9.2) + 0.15*uTime );\r\n    r.y = fbm( st + q + vec2(8.3,2.8) - 0.126*uTime);\r\n\r\n    float f = fbm(st+r);\r\n\r\n    gl_FragColor = vec4(vec3(f*f) * 1.5,1.);\r\n    gl_FragColor.x *= length(r);\r\n    gl_FragColor.y *= length(q);\r\n    gl_FragColor.z *= length(u);\r\n    gl_FragColor *= 2.;\r\n    gl_FragColor.w = 1.;\r\n}\r\n"},function(t,i){t.exports="precision highp float;\r\n\r\nattribute vec3 aPosition;\r\nattribute vec3 aColor;\r\n\r\nvarying vec3 color;\r\nvarying vec3 inputPos;\r\n\r\nuniform mat4 uCamera;\r\nuniform mat4 uModel;\r\nvoid main() {\r\n  color = aColor;\r\n  inputPos = (uModel * vec4(aPosition, 1)).xyz;\r\n  gl_Position = uCamera * uModel * vec4(aPosition, 1);\r\n}\r\n"},function(t,i){t.exports="precision highp float;\r\n\r\nvarying vec3 inputPos;\r\nvarying vec3 color;\r\n\r\nuniform vec3 lightPositions[NR_OF_LIGHTS];\r\nuniform vec3 lightColors[NR_OF_LIGHTS];\r\n\r\nuniform float range;\r\nuniform float fluctate;\r\nuniform vec3 cameraPos;\r\n\r\nuniform float uTime;\r\n\r\nfloat random (in vec2 _st) {\r\n    return fract(sin(dot(_st.xy,\r\n                         vec2(12.9898,78.233)))*\r\n        43758.5453123);\r\n}\r\n\r\nfloat noise (in vec2 _st) {\r\n    vec2 i = floor(_st);\r\n    vec2 f = fract(_st);\r\n\r\n    float a = random(i);\r\n    float b = random(i + vec2(1.0, 0.0));\r\n    float c = random(i + vec2(0.0, 1.0));\r\n    float d = random(i + vec2(1.0, 1.0));\r\n\r\n    vec2 u = f * f * (3.0 - 2.0 * f);\r\n\r\n    return mix(a, b, u.x) +\r\n            (c - a)* u.y * (1.0 - u.x) +\r\n            (d - b) * u.x * u.y;\r\n}\r\n\r\n#define NUM_OCTAVES 5\r\n\r\nfloat fbm ( in vec2 _st) {\r\n    float v = 0.0;\r\n    float a = 0.5;\r\n    vec2 shift = vec2(100.0);\r\n    mat2 rot = mat2(cos(0.5), sin(0.5),\r\n                    -sin(0.5), cos(0.50));\r\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\r\n        v += a * noise(_st);\r\n        _st = rot * _st * 2.0 + shift;\r\n        a *= 0.5;\r\n    }\r\n    return v;\r\n}\r\n\r\nvoid main() {\r\n  float lightDistance = 1. - length(cameraPos - inputPos) * range;\r\n  lightDistance = clamp(lightDistance, 0., 1.);\r\n  gl_FragColor = vec4(lightDistance, lightDistance, lightDistance, 1.);\r\n  for (int i = 0; i < NR_OF_LIGHTS; i++) {\r\n    lightDistance = 1. - length(lightPositions[i] - inputPos) * 0.7 + fluctate;\r\n    lightDistance = clamp(lightDistance, 0., 1.);\r\n    vec2 p = inputPos.xz;\r\n    float f = fbm(p);\r\n    f *= fbm(inputPos.xy + 0.05 *uTime);\r\n    f *= fbm(inputPos.yz - 0.02 * uTime);\r\n    gl_FragColor += vec4(vec3(lightDistance) * f * 4. * lightColors[i], 1.);\r\n  }\r\n  gl_FragColor.xyz *= color;\r\n\r\n  gl_FragColor.w = 1.;\r\n}\r\n"},function(t,i,e){"use strict";e.r(i);i.default=class{constructor(){this._context=new AudioContext,this._oscilator=this._context.createOscillator(),this._gain=this._context.createGain(),this._oscilator.connect(this._gain),this._gain.connect(this._context.destination),this._oscilator.start(0),this._updateNote=this._updateNote.bind(this),this._frequencies=[261.6,277.2,293.7,261.6,293.7,277.2,311.1,329.6,349.2,392,293.7,277.2,293.7,261.6],this._speeds=[250,300,325,350,325,350,375,380,330,310,280,300,325],this._current=0,this.speed=1.25,this._update=!1,requestAnimationFrame(this._updateNote)}_updateNote(){this._current++,this._current=this._current%this._frequencies.length,this._oscilator.frequency.value=this._frequencies[this._current]*this.speed,setTimeout(this._updateNote,this._speeds[this._current]*this.speed)}}},function(t){t.exports=[{grid:[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],lights:[{id:0,color:[1,1,1],positions:[[0,0,0],[0,0,4],[3,0,4],[3,0,0]]}],playerPosition:[-1.5,0,-1.5],target:[0,0,4]},{grid:[[0,0,0,0,0],[1,1,1,1,0],[0,0,0,0,0],[0,1,1,1,1],[0,0,0,0,0]],lights:[{id:0,color:[0,1,1],positions:[[4,0,4],[0,0,4],[4,0,0],[0,0,0]]},{id:0,color:[0,1,1],positions:[[0,0,4],[4,0,4],[0,0,0],[4,0,0]]}],playerPosition:[0,0,0],target:[4,0,4]},{grid:[[0,0,0,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,1,0,1,0],[0,0,0,0,0],[0,0,1,0,0],[0,0,0,0,0]],lights:[{id:0,color:[0,0,1],positions:[[0,0,1],[0,0,5]]},{id:1,color:[0,1,0],positions:[[4,0,0],[4,0,5]]},{id:2,color:[1,0,0],positions:[[6,0,0],[6,0,5]]}],playerPosition:[0,0,0],target:[6,0,4]},{grid:[[0,0,0,0,0,0],[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,1,0,1,0],[0,0,1,0,0,0],[0,0,1,0,0,0]],lights:[{id:0,color:[1,0,1],positions:[[0,0,0],[0,0,5]]},{id:1,color:[0,.5,1],positions:[[0,0,0],[5,0,0]]},{id:2,color:[0,1,1],positions:[[0,0,5],[5,0,5]]},{id:3,color:[.2,.5,1],positions:[[5,0,5],[2,0,2]]}],playerPosition:[-5,0,-1],target:[2,0,2]},{grid:[[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0]],lights:[{id:0,color:[1,0,0],positions:[[0,0,0],[0,0,5]]},{id:1,color:[0,0,1],positions:[[4,0,0],[4,0,5]]},{id:2,color:[0,.5,1],positions:[[2,0,1],[2,0,5]]},{id:0,color:[1,.5,0],positions:[[0,0,2],[4,0,2]]},{id:0,color:[0,1,.5],positions:[[4,0,4],[0,0,4]]},{id:0,color:[1,.25,.75],positions:[[0,0,6],[4,0,6]]},{id:0,color:[.75,.1,.4],positions:[[4,0,8],[0,0,8]]},{id:0,color:[0,.25,1],positions:[[0,0,9],[4,0,9]]}],playerPosition:[-2,0,0],target:[2,0,9]}]}]);