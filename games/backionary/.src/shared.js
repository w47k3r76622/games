const bx={},cz=()=>Math.random().toString().replace(/^[0.]+/g,''),fe=(...a)=>!1,aj=(...a)=>!1,fg=(...a)=>!1,dm=(a,b,c={})=>{bp(a,b,c).then(a=>{aj('Emit return',b,a)}).catch(a=>{a&&'Response time out'!==a.message?fg('Emit return error',b,a):fg('Response time out',b)})},bp=async(a,b,c={})=>{c=fh(c);const d=cz();aj('Send message',b,c,d);const e=new Promise((a,b)=>{bx[d]=a,setTimeout(()=>{b(new Error('Response time out'))},1e3)}).finally(()=>{delete bx[d]});return a.emit('bs',[b,c,d]),e},fl=(a,b,c,d={})=>{d=fh(d),fe('Send response',b,c,d),a.emit('bu',[b,c,d])},fh=a=>{if(Array.isArray(a)){const b=[];for(const c of a)b.push(fh(c));return b}if(a&&'object'===typeof a){const b={},c=a.ai||a;for(const a in c)b[a]=fh(c[a]);return b}return a},bt=(a,b=null)=>c=>{if(aj('Received message',c),!c||3!==c.length)return void fg('Invalid message structure',c,c.length);let[d,e,f]=c;if(!f||!e)return void fg('Invalid message data',d,e,f,av[d]);if(!av[d])return void fg('Invalid message handler',d,e,f,av[d]);const g=av[d](b,e);fl(a,d,f,g)};