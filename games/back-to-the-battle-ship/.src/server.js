const o=[],e=[];module.exports={io:i=>{i.on("nU",r=>{let t=-1,l=!1;if(0!==o.length)for(let e=0;e<o.length;e++){if(o[e].player.data[3]!==r.player[3]?t=e:l=!0,t<0||l)break}if(t<0&&!l){const e=guid();o.push({player:{data:r.player,id:i.id},room:e}),i.join(e)}else if(t>=0){const{room:l}=o[t],n={room:o[t].room,p1:o[t].player,p2:{data:r.player,id:i.id},turn:randomNumber(1,2)};e.push(n),o.splice(t,1),i.join(l),io.sockets.in(l).emit("sG",n)}else i.emit("sP",{browser:r.tokenByBrowser})}),i.on("sA",o=>{o.actualPlayer>=1&&o.actualPlayer<=2&&o.col>=0&&o.col<DIMENSION_BOARD&&o.row>=0&&o.row<DIMENSION_BOARD&&io.sockets.in(o.room).emit("rA",o)}),i.on("sE",o=>{io.sockets.in(o.room).emit("rE",o)}),i.on("gO",o=>{let i=-1;for(let r=0;r<e.length;r++)if(e[r].room===o.room){i=r;break}i>=0&&e.splice(i,1)}),i.on("disconnect",()=>{let r=-1,t=-1;if(0!==e.length)for(let o=0;o<e.length;o++){const{p1:t={id:""},p2:l={id:""}}=e[o];if(t.id===i.id||l.id===i.id){r=o;break}}if(r>=0)io.sockets.in(e[r].room).emit("gD"),e.splice(r,1);else{for(let e=0;e<o.length;e++)if(o[e].player.id===i.id){t=e;break}t>=0&&o.splice(t,1)}}),console.log("Connected: "+i.id)}}