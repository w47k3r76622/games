// ---------  Level generation --------- //
function add_neighbors(e,t,n,r){r.x+1<t.width&&e[r.y][r.x+1]===0&&n.push({y:r.y,x:r.x+1}),r.x-1>0&&e[r.y][r.x-1]===0&&n.push({y:r.y,x:r.x-1}),r.y+1<t.height&&e[r.y+1][r.x]===0&&n.push({y:r.y+1,x:r.x}),r.y-1>0&&e[r.y-1][r.x]===0&&n.push({y:r.y-1,x:r.x})}function does_not_more_than_one_neighbors_in_maze(e,t,n){var r=(n.x+1<t.width&&e[n.y][n.x+1]===1)+(n.x-1>0&&e[n.y][n.x-1]===1)+(n.y+1<t.height&&e[n.y+1][n.x]===1)+(n.y-1>0&&e[n.y-1][n.x]===1);return r<2}function prim(e,t){var n=Math.floor(Math.random()*(t.height-1))+1,r=Math.floor(Math.random()*(t.width-1))+1;e[n][r]=1;var i=[];add_neighbors(e,t,i,{y:n,x:r});var s=null;while(i.length!==0){var o=Math.floor(Math.random()*i.length);s=i[o],e[s.y][s.x]=1,add_neighbors(e,t,i,s),i=i.filter(function(n){return(n.y!==s.y||n.x!==s.x)&&does_not_more_than_one_neighbors_in_maze(e,t,n)})}}function random_direction(){return Math.floor(Math.random()*4)}function generate_tanks(e,t,n,r,i){var s,o;tanks=[];for(var u=0;u<e.length;u++){do s=Math.floor(Math.random()*n),o=Math.floor(Math.random()*r);while(t[o][s]==0||i.indexOf(o*r+s)>-1);i.push(o*r+s),e[u].direction=random_direction(),tanks.push({y:o+.125,x:s+.125,direction:e[u].direction,moving:!1,shoot:!1,reload:0,player:e[u],color:e[u].color})}return tanks}function generate_castles(e,t,n,r,i,s){var o,u;castles=[];for(var a=0;a<e.length;a++)for(var f=0;f<t;f++){do o=Math.floor(Math.random()*r),u=Math.floor(Math.random()*i);while(n[u][o]==0||s.indexOf(u*i+o)>-1);s.push(u*i+o),castles.push({y:u,x:o,color:e[a].color})}return castles}module.exports={generate_castles:generate_castles,generate_tanks:generate_tanks,prim:prim};