class AudioEffects{static playPlayerPewSound(){this._playSound([0,,.16,.18,.18,.47,.0084,-.26,,,,,,.74,-1,,-.76,,1,,,,,.15])}static playEnemyPewSound(){this._playSound([2,,.2,,.1753,.64,,-.5261,,,,,,.5522,-.564,,,,1,,,,,.25])}static playBarrierSound(){this._playSound([0,,.01,,.4384,.2,,.12,.28,1,.65,,,.0419,,,,,1,,,,.3])}static playPlayerDamageSound(){this._playSound([3,,.1606,.5988,.2957,.1157,,-.3921,,,,,,,,,.3225,-.2522,1,,,,,.25])}static playEnemyDamageSound(){this._playSound([0,,.0639,,.2425,.7582,,-.6217,,,,,,.4039,,,,,1,,,,,.25])}static _playSound(t){const e=jsfxr(t),i=new Audio;i.src=e,i.play()}}class SpriteSheet{constructor(t,e){this.image=t,this.spriteSize=e,this.sprites=[]}addSprite(t){this.sprites.push({name:t.name,x:t.x,y:t.y})}addSpriteBulk(t,e,i){if(e*i===t.length){let s=0;for(let n=0;n<e;n++)for(let e=0;e<i;e++)this.addSprite({name:t[s++],x:e*this.spriteSize,y:n*this.spriteSize})}}getSprite(t){for(const e of this.sprites)if(e.name===t)return e}getSpritePosition(t){for(const e of this.sprites)if(e.name===t)return new Position(e.x,e.y)}}class Sprite{constructor(t,e,i,s=96,n=32,r,h=3,o=3){const a=new Image;a.src="images/"+t,this.image=a,this.rows=e,this.columns=i,this.individualSpriteSize=n,this.totalSpriteSize=s,this.position=r,this.scaleFactorX=h,this.scaleFactorY=o}}class SpriteConfig{constructor(t=[],e=[],i){this.MOTION_1=t,this.MOTION_2=e,this.spriteSheet=null,this.sprite=i,this._extractSprites()}_extractSprites(){let t=this.MOTION_1.slice(0);t=t.concat(this.MOTION_2),this.spriteSheet=new SpriteSheet(this.sprite.image,this.sprite.individualSpriteSize),this.spriteSheet.addSpriteBulk(t,this.sprite.rows,this.sprite.columns)}}class Position{constructor(t=0,e=0){this.x=t,this.y=e}}class Timer{constructor(t,e){this.timeToChangeAnimation=t,this.timeToChangeMotion=e,this.animationTimer=0,this.motionTimer=0}_resetAnimationTimer(){this.animationTimer=0}_resetMotionTimer(){this.motionTimer=0}stepTimer(){0!=this.timeToChangeAnimation&&(this.animationTimer+=1),0!=this.timeToChangeMotion&&(this.motionTimer+=1)}isTimeToAnimate(){return 0==this.timeToChangeAnimation||this.animationTimer==this.timeToChangeAnimation&&(this._resetAnimationTimer(),!0)}isTimeToMove(){return 0==this.timeToChangeMotion||this.motionTimer==this.timeToChangeMotion&&(this._resetMotionTimer(),!0)}}class PlayerUtil{static bound(t,e,i,s,n,r,h){let o=!1;const a=i+s*n;switch(t){case"left":o=r.x-e>0+i;break;case"right":o=r.x+e<h.width-a;break;case"up":o=r.y-e>0+i;break;case"down":o=r.y+e<h.height-a}return o}static getBarrierPosition(t,e,i){return i*(e-t)/2}static isIdleAnim(t){return 0===t||1===t}static imgDrawCall(t,e,i,s,n,r,h){const o=e.getSprite(i),a=new Image;a.src=e.image,t.drawImage(a,o.x,o.y,s,s,n,r,s*h,s*h)}}class Player{constructor(t,e,i,s,n,r=3,h=5){this.spriteSheet=t,this.spriteNames=e,this.ctx=i,this.canvasSize=s,this.keys=n,this.lives=r,this.maxBulletSize=h,this.bulletCount=0,this.firedBulletStack=[],this.level=null,this.absorbState=!1,this.pressed={left:!1,up:!1,right:!1,down:!1,pew:!1,absorb:!1},this.scale={player:3,barrier:3.5},this.position={x:15,y:s.height/2-t.spriteSize*this.scale.player/2},this.playerSpriteSheet=new SpriteSheet(t.image,t.spriteSize),this.animState=0,this.frameCounter=0}init(){this.playerSpriteSheet.addSpriteBulk(this.spriteNames,this.spriteSheet.rows,this.spriteSheet.columns),this._startInputListeners()}playerMovement(){this.pressed.left&&PlayerUtil.bound("left",4,10,this.spriteSheet.spriteSize,this.scale.player,this.position,this.canvasSize)?this.position.x-=4:this.pressed.right&&PlayerUtil.bound("right",4,10,this.spriteSheet.spriteSize,this.scale.player,this.position,this.canvasSize)?this.position.x+=4:this.pressed.up&&PlayerUtil.bound("up",4,10,this.spriteSheet.spriteSize,this.scale.player,this.position,this.canvasSize)?this.position.y-=4:this.pressed.down&&PlayerUtil.bound("down",4,10,this.spriteSheet.spriteSize,this.scale.player,this.position,this.canvasSize)&&(this.position.y+=4)}_drawFrame(){if(this.pressed.absorb?this._absorbAnimation():this.pressed.pew?this._fireAnimation():PlayerUtil.isIdleAnim(this.animState)&&this._idleAnimation(),this._bulletDraw(),PlayerUtil.imgDrawCall(this.ctx,this.playerSpriteSheet,this.spriteNames[this.animState],this.spriteSheet.spriteSize,this.position.x,this.position.y,this.scale.player),this.pressed.absorb){const t=PlayerUtil.getBarrierPosition(this.scale.player,this.scale.barrier,this.spriteSheet.spriteSize),e=this.position.x-t,i=this.position.y-t;PlayerUtil.imgDrawCall(this.ctx,this.playerSpriteSheet,this.spriteNames[6],this.spriteSheet.spriteSize,e,i,this.scale.barrier)}}_idleAnimation(){this.frameCounter<=15?this.animState=0:this.frameCounter>=16&&this.frameCounter<=30&&(this.animState=1),30===this.frameCounter&&(this.frameCounter=0)}_fireAnimation(){this.frameCounter<=7?0===this.animState?this.animState=2:1===this.animState&&(this.animState=3):this.frameCounter>7&&(this._returnToIdle(2,3),this.pressed.pew=!1)}_absorbAnimation(){this.frameCounter<=15?this.animState=4:this.frameCounter>=16&&this.frameCounter<=30&&(this.animState=5),30===this.frameCounter&&(this.frameCounter=0)}_returnToIdle(t,e){this.animState===t?(this.animState=1,this.frameCounter=15):this.animState===e&&(this.animState=0,this.frameCounter=0)}_startInputListeners(){document.addEventListener("keydown",this._moveKeyDown.bind(this),!1),document.addEventListener("keyup",this._moveKeyUp.bind(this),!1),document.addEventListener("keydown",this._fireKeyDown.bind(this),!1),document.addEventListener("keydown",this._absorbKeyDown.bind(this),!1),document.addEventListener("keyup",this._absorbKeyUp.bind(this),!1)}_moveKeyDown(t){switch(t.keyCode){case this.keys.left:this.pressed.left=!0;break;case this.keys.right:this.pressed.right=!0;break;case this.keys.up:this.pressed.up=!0;break;case this.keys.down:this.pressed.down=!0}}_moveKeyUp(t){switch(t.keyCode){case this.keys.left:this.pressed.left=!1;break;case this.keys.right:this.pressed.right=!1;break;case this.keys.up:this.pressed.up=!1;break;case this.keys.down:this.pressed.down=!1}}setLevel(t){this.level=t}_fireKeyDown(t){t.repeat||t.keyCode===this.keys.pew&&this.bulletCount>0&&(this.decrementBulletCount(),this._fireBullet(),0===this.animState?this.animState=2:1===this.animState&&(this.animState=3),this.frameCounter=0,this.pressed.pew=!0,AudioEffects.playPlayerPewSound())}_fireBullet(){const t=new Sprite("player_bullet.png",1,5,5,5,new Position(0,0),10,10),e=new Bullet(t,new Position(this.position.x+35,this.position.y+45),this.bulletpattern,5,1);e.setContext(this.ctx),e.setPlayerMode(),e.fire(),this.firedBulletStack.push(e)}_bulletDraw(){this.firedBulletStack=this.firedBulletStack.filter(this._bulletsDraw.bind(this))}_bulletsDraw(t){if(null!=t||null!=t)return this.isBulletInsideCanvas(t)?(this._checkCollisionWithEnemy(t),!0):(t.despawn(),!1)}isBulletInsideCanvas(t){return null!=t.position&&(t.getBulletPosition().x<800&&t.getBulletPosition().y<800)}_checkCollisionWithEnemy(t){this._playerBulletCollisionWithEnemy(t)}_playerBulletCollisionWithEnemy(t){this.level.drawableObjects.forEach(e=>{e.collideDetect(t)&&(e.takeDamage(t.damage),t.despawn()),t.wDraw()})}_absorbKeyDown(t){t.keyCode===this.keys.absorb&&(this.pressed.absorb=!0)}_absorbKeyUp(t){t.keyCode===this.keys.absorb&&(this.pressed.absorb=!1,this._returnToIdle(4,5))}decrementLife(){return this.lives>0&&this.lives--,this.lives}incrementBulletCount(){this.bulletCount<this.maxBulletSize&&this.bulletCount++}decrementBulletCount(){this.bulletCount>0&&this.bulletCount--}}class Font{static draw(t,e,i,s,n){const r=this._getChars(t);let h=s;for(let t=0;t<r.length;t++){const s=r[t];let o=n,a=0;for(let t=0;t<s.length;t++){const n=s[t];for(let t=0;t<n.length;t++)n[t]&&i.fillRect(h+t*e,o,e,e);a=Math.max(a,n.length*e),o+=e}h+=e+a}}static _getChars(t){const e={A:[[,1],[1,,1],[1,,1],[1,1,1],[1,,1]],B:[[1,1],[1,,1],[1,1,1],[1,,1],[1,1]],C:[[1,1,1],[1],[1],[1],[1,1,1]],D:[[1,1],[1,,1],[1,,1],[1,,1],[1,1]],E:[[1,1,1],[1],[1,1,1],[1],[1,1,1]],F:[[1,1,1],[1],[1,1],[1],[1]],G:[[,1,1],[1],[1,,1,1],[1,,,1],[,1,1]],H:[[1,,1],[1,,1],[1,1,1],[1,,1],[1,,1]],I:[[1,1,1],[,1],[,1],[,1],[1,1,1]],J:[[1,1,1],[,,1],[,,1],[1,,1],[1,1,1]],K:[[1,,,1],[1,,1],[1,1],[1,,1],[1,,,1]],L:[[1],[1],[1],[1],[1,1,1]],M:[[1,1,1,1,1],[1,,1,,1],[1,,1,,1],[1,,,,1],[1,,,,1]],N:[[1,,,1],[1,1,,1],[1,,1,1],[1,,,1],[1,,,1]],O:[[1,1,1],[1,,1],[1,,1],[1,,1],[1,1,1]],P:[[1,1,1],[1,,1],[1,1,1],[1],[1]],Q:[[0,1,1],[1,,,1],[1,,,1],[1,,1,1],[1,1,1,1]],R:[[1,1],[1,,1],[1,,1],[1,1],[1,,1]],S:[[1,1,1],[1],[1,1,1],[,,1],[1,1,1]],T:[[1,1,1],[,1],[,1],[,1],[,1]],U:[[1,,1],[1,,1],[1,,1],[1,,1],[1,1,1]],V:[[1,,,,1],[1,,,,1],[,1,,1],[,1,,1],[,,1]],W:[[1,,,,1],[1,,,,1],[1,,,,1],[1,,1,,1],[1,1,1,1,1]],X:[[1,,,,1],[,1,,1],[,,1],[,1,,1],[1,,,,1]],Y:[[1,,1],[1,,1],[,1],[,1],[,1]],Z:[[1,1,1,1,1],[,,,1],[,,1],[,1],[1,1,1,1,1]],0:[[1,1,1],[1,,1],[1,,1],[1,,1],[1,1,1]],1:[[,1],[,1],[,1],[,1],[,1]],2:[[1,1,1],[0,0,1],[1,1,1],[1,0,0],[1,1,1]],3:[[1,1,1],[0,0,1],[1,1,1],[0,0,1],[1,1,1]],4:[[1,0,1],[1,0,1],[1,1,1],[0,0,1],[0,0,1]],5:[[1,1,1],[1,0,0],[1,1,1],[0,0,1],[1,1,1]],6:[[1,1,1],[1,0,0],[1,1,1],[1,0,1],[1,1,1]],7:[[1,1,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1]],8:[[1,1,1],[1,0,1],[1,1,1],[1,0,1],[1,1,1]],9:[[1,1,1],[1,0,1],[1,1,1],[0,0,1],[1,1,1]]," ":[[0],[0],[0],[0],[0]]},i=[];t=t.toUpperCase();for(let s=0;s<t.length;s++){const n=e[t.charAt(s)];n&&i.push(n)}return i}}class UserInterface{constructor(t){this.ctx=t,this.healthSpriteSheet=new SpriteSheet("images/ui_heart.png",5),this.countSpriteSheet=new SpriteSheet("images/ui_bullet_holder.png",7),this.names=["a","b","c","d","e","f"]}init(){this.healthSpriteSheet.addSpriteBulk(this.names.slice(0,4),1,4),this.countSpriteSheet.addSpriteBulk(this.names,1,6)}draw(t,e,i){this.ctx.save(),this.ctx.globalAlpha=.5,this._drawHealth(t),this._drawBulletCount(e),this._drawScore(i.toString(),5),this.ctx.restore()}_drawHealth(t){PlayerUtil.imgDrawCall(this.ctx,this.healthSpriteSheet,this.names[t],this.healthSpriteSheet.spriteSize,10,550,7)}_drawBulletCount(t){PlayerUtil.imgDrawCall(this.ctx,this.countSpriteSheet,this.names[t],this.countSpriteSheet.spriteSize,50,540,7)}_drawScore(t,e){this.ctx.fillStyle="#00bff3";const i=20*(t.length-1);Font.draw(t,e,this.ctx,775-i,10)}}class CollisionDetection{static detect(t,e){let i=!1;return t.x<e.x+e.width&&t.x+t.width>e.x&&t.y<e.y+e.height&&t.y+t.height>e.y&&(i=!0),i}}class animationHelper extends Timer{constructor(t,e){super(t,e)}wDraw(){null!=this.sprite&&this.context.drawImage(this.sprite.image,this.sprite.position.x,this.sprite.position.y,this.sprite.individualSpriteSize,this.sprite.individualSpriteSize,this.position.x,this.position.y,this.sprite.individualSpriteSize*this.sprite.scaleFactorX,this.sprite.individualSpriteSize*this.sprite.scaleFactorY)}objectUpdate(){}postObjectUpdate(){this.stepTimer(),this.isTimeToMove()&&this._Movement(),this.isTimeToAnimate()&&this.objectUpdate(),this.objectAnimation()}setContext(t){this.context=t}objectAnimation(){setTimeout(()=>{this.postObjectUpdate()},1)}}class BulletPattern{static get DEFAULT(){return BulletPattern.STRAIGHT}static get STRAIGHT(){return"straight"}static get FOLLOW(){return"follow"}}class BulletAnimationHelper extends animationHelper{constructor(){super(0,4)}objectUpdate(){}}class BulletMovement extends BulletAnimationHelper{constructor(){super(),this.playerMode=!1}fire(){}straight(){this.position.x=this.position.x-this.speed}_Movement(){if(null!=this.position){if(this.playerMode)return void this._playerBulletMotion();eval("this."+this.pattern+"()")}}follow(){if(null==this.playerPositionSnap)return this.straight();let t=this.playerPositionSnap.x-this.position.x,e=this.playerPositionSnap.y-this.position.y;const i=Math.sqrt(e*e+t*t);t>-10&&e>-10&&!this.playerMode&&this.despawn(),t/=i,e/=i,this.position.x+=t*this.speed,this.position.y+=e*this.speed}setPlayerMode(){this.playerMode=!0}isPlayerMode(){return this.playerMode}_playerBulletMotion(){this.position.x=this.position.x+this.speed}}class Bullet extends BulletMovement{constructor(t=null,e=null,i=BulletPattern.FOLLOW,s=1,n=1){super(),this.sprite=t,this.position=e,this.pattern=i,this.speed=s,this.damage=n,this.playerPositionSnap=null}static get DEFAULT(){return new Bullet}setBulletTarget(t){return this.targetPosition=t,this.targetPosition}setBulletPostition(t){return this.position=t,this.position}setPlayerPositionSnap(t){this.playerPositionSnap=t}getBulletPosition(){return this.position}fire(){AudioEffects.playEnemyPewSound(),this.objectAnimation(this.context)}despawn(){this.position=null,this.sprite=null,this.position=null,this.pattern=null,this.speed=null,this.damage=null,this.playerPositionSnap=null}collideDetect(t){if(null==t.x||null==this.position.x)return!1;const e={x:this.position.x,y:this.position.y,width:this.sprite.individualSpriteSize*this.sprite.scaleFactorX,height:this.sprite.individualSpriteSize*this.sprite.scaleFactorY},i={x:t.x,y:t.y,width:64,height:64};return CollisionDetection.detect(e,i)}}class EnemyAnimationHelper extends animationHelper{constructor(){super(120,12),this.fireState=!1,this._subAnimationState=!1,this._workingState=null}objectUpdate(){this.checkHealthAndDespawn()||(this._Movement(),this.fireState?this._fireAnimation():this._idleAnimation())}_fireAnimation(){this._subAnimationState||(this._workingState=this.spriteConfig.MOTION_2.slice(0)),Array.isArray(this._workingState)&&this._workingState.length&&(this.sprite.position=this.spriteConfig.spriteSheet.getSpritePosition(this._workingState.shift()),this._subAnimationState=this.fireState=Array.isArray(this._workingState)&&this._workingState.length)}_idleAnimation(){this._subAnimationState||(this._workingState=this.spriteConfig.MOTION_1.slice(0)),Array.isArray(this._workingState)&&this._workingState.length&&(this.sprite.position=this.spriteConfig.spriteSheet.getSpritePosition(this._workingState.shift()),this._subAnimationState=Array.isArray(this._workingState)&&this._workingState.length)}triggerFireState(){return this.fireState=!0,this.fireState}getFireState(){return this.fireState}}class EnemyMovement extends EnemyAnimationHelper{constructor(t,e,i){super(),this.sprite=t,this.spriteConfig=e,this.position=i,this.playerPosition=null}_Movement(){if(this.checkHealthAndDespawn())return;const t=this;let e=null;const i=function(e){let i=t.playerPosition.y-e;return i<0&&(i*=-1),i};let s=0;for(;s<100&&!(i((e=this._directionDecision()).y)<=i(this.position.y));)s++;this._enemyPositionUpdate(e)}_directionDecision(){const t=parseFloat(4*Math.random()-2),e=parseFloat(4*Math.random()-2);return 700<(i=new Position(this.position.x+t,this.position.y+e)).x?i.x=i.x-10:500<i.y&&(i.y=i.y-10),300>i.x&&(i.x=i.x+10),i;var i}_enemyPositionUpdate(t){this.position.x=t.x,this.position.y=t.y}startAnimation(t){this.setContext(t),this.objectAnimation()}}class Enemy extends EnemyMovement{constructor(t,e,i=null,s=1,n=500){super(t,e,i),this.health=s,this.rateOfFire=n,this.bullet=[],this.bulletpattern=BulletPattern.DEFAULT,this.autoshoot=!1}shoot(){if(this.getFireState())return void(this.autoshoot&&this._autoshoot());if(null==this.position)return void(this.autoshoot=!1);const t=new Sprite("enemy_bullet.png",1,5,5,5,new Position(0,0),10,10),e=new Bullet(t,new Position(this.position.x-30,this.position.y+20),this.bulletpattern,5,1);e.setContext(this.context),e.setPlayerPositionSnap(this.playerPosition),this.triggerFireState(),e.fire(),this.bullet.push(e),this.autoshoot&&this._autoshoot()}_autoshoot(){setTimeout(()=>{this.shoot()},this.rateOfFire)}setPlayerPosition(t,e){this.playerPosition=new Position(t,e)}setBulletPattern(t){this.bulletpattern=t}takeDamage(t){this.health>0&&(this.health=this.health-t)}collideDetect(t){if(null==t.position.x||null==this.position)return!1;const e={x:t.position.x,y:t.position.y,width:t.sprite.individualSpriteSize*this.sprite.scaleFactorX,height:t.sprite.individualSpriteSize*this.sprite.scaleFactorY},i={x:this.position.x,y:this.position.y,width:this.sprite.individualSpriteSize*this.sprite.scaleFactorX,height:this.sprite.individualSpriteSize*this.sprite.scaleFactorY};return CollisionDetection.detect(e,i)}checkHealthAndDespawn(){return null==this.health&&null==this.sprite||this.health<1&&(this.health=null,this.rateOfFire=null,this.bullet=[],this.bulletpattern=null,this.autoshoot=!1,this.position=null,!0)}}class EnemySpawner{constructor(t){const e=t;this.context=e.ctx,this.player=e.globalObject.player,this.drawableObjects=[]}draw(){this.drawableObjects.forEach(t=>{this._enemiesDraw(t),t.bullet=t.bullet.filter(this._bulletsDraw.bind(this))})}_enemiesDraw(t){return t.health<1||null==t.health?(t.checkHealthAndDespawn(),!1):(t.wDraw(),t.setPlayerPosition(this.player.position.x,this.player.position.y),!0)}_bulletsDraw(t){if(null!=t||null!=t)return this.isBulletInsideCanvas(t)?(this._checkCollisionWithPlayer(t),!0):(t.despawn(),!1)}isBulletInsideCanvas(t){return null!=t.position&&(t.getBulletPosition().x>0&&t.getBulletPosition().y>0)}_checkCollisionWithPlayer(t){if(t.collideDetect(new Position(this.player.position.x,this.player.position.y))){if(t.despawn(),this.player.pressed.absorb)return void this.player.incrementBulletCount();this.player.decrementLife()}else t.wDraw()}}class Level extends EnemySpawner{constructor(t){super(t),this.levelEndStatus=!1,this.level=1,this.currentLevelEnemies=[],this.gameEnd=!1}triggerNextLevel(){this.level+=1,this.levelTrigger()}resetLevelToOne(){this.level=1}levelTrigger(){for(let t=1;t<=this.level;t++){const e=this.enenmyOneFactory(new Position(400,50*t+100),this.level,900/this.level);e.startAnimation(this.context),e.autoshoot=!0,1!=this.level&&t==this.level&&e.setBulletPattern(BulletPattern.FOLLOW),e.shoot(),console.log("spawned enemy for level "+this.level),this.currentLevelEnemies.push(e),this.drawableObjects.push(e)}}enenmyOneFactory(t,e,i){const s=new Sprite("enemy1.png",2,2,128,32,new Position(0,0),3,3),n=new SpriteConfig(["idle1","idle2"],["fire1","fire2"],s);return new Enemy(s,n,t,e,i)}}class Game{constructor(t,e,i){t.width=e,t.height=i,this.width=e,this.height=i,this.ctx=t.getContext("2d"),this.globalObject={player:null,ui:null,score:0},this.requestAnimationFrameId=null}init(){this.ctx.imageSmoothingEnabled=!1,this.ctx.globalCompositeOperation="source-over",this.globalObject.player=this._createPlayer(),this.globalObject.player.init(),this.globalObject.ui=new UserInterface(this.ctx),this.globalObject.ui.init(),this.level=new Level(this),this.globalObject.player.setLevel(this.level),this.level.levelTrigger(),this._render()}_render(){this.ctx.clearRect(0,0,this.width,this.height);const t=this.globalObject.player;t.frameCounter++,this.ctx.fillStyle="#260016",this.ctx.fillRect(0,0,this.width,this.height),t.lives<1&&(window.cancelAnimationFrame(this._render.bind(this)),alert("gameover"),exit()),t.playerMovement(),t._drawFrame();let e=null;this.level.currentLevelEnemies.forEach(t=>{null!=t.position&&(e=!0)}),null==e&&this.level.triggerNextLevel(),this.level.draw(),this.globalObject.ui.draw(t.lives,t.bulletCount,this.globalObject.score),this.requestAnimationFrameId=window.requestAnimationFrame(this._render.bind(this))}_createPlayer(){const t={width:this.width,height:this.height};return new Player({image:"images/player.png",spriteSize:32,rows:4,columns:2},["idle1","idle2","pop1","pop2","push1","push2","shield","blank"],this.ctx,t,{left:37,up:38,right:39,down:40,pew:88,absorb:90})}}function main(){const t=document.getElementById("game");new Game(t,800,600).init()}main();