'use strict';class RayCaster{constructor(){this.cameraX;this.rayDirX;this.rayDirY;this.mapX;this.mapY;this.deltaDistX;this.deltaDistY;this.sideDistX;this.sideDistY;this.perpWallDist;this.stepX;this.stepY;this.hit;this.side;this.lineHeight;this.drawStart;this.drawEnd;this.floorYWall=this.floorXWall=this.wallX=this.texNum=this.texY=this.texX=0;this.distWall;this.distPlayer;this.currentDist;this.floorTexY=this.floorTexX=0}CastRays(c,m,h,p,n,b,f,g,d){for(;c<m;c+=p){this.hit=0;this.cameraX=2*c/m-1;this.rayDirX=
b.dirX+b.planeX*this.cameraX;this.rayDirY=b.dirY+b.planeY*this.cameraX;this.mapX=Math.floor(b.posX);this.mapY=Math.floor(b.posY);this.deltaDistX=Math.abs(1/this.rayDirX);this.deltaDistY=Math.abs(1/this.rayDirY);0>this.rayDirX?(this.stepX=-1,this.sideDistX=(b.posX-this.mapX)*this.deltaDistX):(this.stepX=1,this.sideDistX=(this.mapX+1-b.posX)*this.deltaDistX);0>this.rayDirY?(this.stepY=-1,this.sideDistY=(b.posY-this.mapY)*this.deltaDistY):(this.stepY=1,this.sideDistY=(this.mapY+1-b.posY)*this.deltaDistY);
for(;0==this.hit;)this.sideDistX<this.sideDistY?(this.sideDistX+=this.deltaDistX,this.mapX+=this.stepX,this.side=0):(this.sideDistY+=this.deltaDistY,this.mapY+=this.stepY,this.side=1),0<n[this.mapX][this.mapY]&&(this.hit=1);this.perpWallDist=0==this.side?(this.mapX-b.posX+(1-this.stepX)/2)/this.rayDirX:(this.mapY-b.posY+(1-this.stepY)/2)/this.rayDirY;this.lineHeight=Math.floor(h/this.perpWallDist);this.drawStart=Math.floor(-this.lineHeight/2+h/2);0>this.drawStart&&(this.drawStart=0);this.drawEnd=
Math.floor(this.lineHeight/2+h/2);this.drawEnd>=h&&(this.drawEnd=h-1);this.texNum=n[this.mapX][this.mapY];this.wallX=0==this.side?b.posY+this.perpWallDist*this.rayDirY:b.posX+this.perpWallDist*this.rayDirX;this.wallX-=Math.floor(this.wallX);this.texX=Math.floor(this.wallX*g);0==this.side&&0<this.rayDirX&&(this.texX=g-this.texX-1);1==this.side&&0>this.rayDirY&&(this.texX=g-this.texX-1);0==this.side&&0<this.rayDirX?(this.floorXWall=this.mapX,this.floorYWall=this.mapY+this.wallX):0==this.side&&0>this.rayDirX?
(this.floorXWall=this.mapX+1,this.floorYWall=this.mapY+this.wallX):1==this.side&&0<this.rayDirY?(this.floorXWall=this.mapX+this.wallX,this.floorYWall=this.mapY):(this.floorXWall=this.mapX+this.wallX,this.floorYWall=this.mapY+1);this.distWall=this.perpWallDist;this.distPlayer=0;0>this.drawEnd&&(this.drawEnd=h);for(var k=this.drawEnd;k<h;k++){this.currentDist=h/(2*k-h);var a=(this.currentDist-this.distPlayer)/(this.distWall-this.distPlayer),e=a*this.floorYWall+(1-a)*b.posY;this.floorTexX=Math.floor((a*
this.floorXWall+(1-a)*b.posX)*g)%g;this.floorTexY=Math.floor(e*g)%g;a=4*(c+k*m);e=4*(c+(h-k-1)*m);const l=4*(this.floorTexX+this.floorTexY*g);d[a]=f[6].data[l];d[a+1]=f[6].data[l+1];d[a+2]=f[6].data[l+2];d[a+3]=255;d[e]=f[0].data[l];d[e+1]=f[0].data[l+1];d[e+2]=f[0].data[l+2];d[e+3]=255}for(k=this.drawStart;k<this.drawEnd+1;k++)this.texY=Math.floor((k-h/2+this.lineHeight/2)*g/this.lineHeight),0>this.texY?this.texY=0:this.texY>g-1&&(this.texY=g-1),a=4*(c+k*m),e=4*(this.texX+this.texY*g),1==this.side?
(d[a]=f[this.texNum].data[e],d[a+1]=f[this.texNum].data[e+1],d[a+2]=f[this.texNum].data[e+2]):(d[a]=f[this.texNum+6].data[e],d[a+1]=f[this.texNum+6].data[e+1],d[a+2]=f[this.texNum+6].data[e+2]),d[a+3]=255}}}const rayCaster=new RayCaster;
let byteArray,textures=[],texSize=0,map=[],threads=0,width,height,workerInit=function(c){width=c.data.width;height=c.data.height;textures=c.data.textures;texSize=textures[0].width;threads=c.data.threads;map=c.data.map;removeEventListener("message",workerInit);addEventListener("message",c=>{byteArray=new Uint8ClampedArray(width*height*4);rayCaster.CastRays(c.data.start,width,height,threads,map,c.data.player,textures,texSize,byteArray);postMessage(byteArray.buffer,[byteArray.buffer])})};
addEventListener("message",workerInit);
