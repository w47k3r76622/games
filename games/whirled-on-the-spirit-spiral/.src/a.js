AFRAME.registerShader("gradient",{schema:{topColor:{type:"vec3",default:{x:255,y:255,z:255},is:"uniform"},bottomColor:{type:"vec3",default:{x:0,y:0,z:0},is:"uniform"},offset:{type:"float",default:400,is:"uniform"},exponent:{type:"float",default:.6,is:"uniform"}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec3 bottomColor;\nuniform vec3 topColor;\nuniform float offset;\nuniform float exponent;\nvarying vec3 vWorldPosition;\nvoid main() {\nfloat h = normalize( vWorldPosition + offset ).y;\nfloat rB = bottomColor.x/255.0;\nfloat gB = bottomColor.y/255.0;\nfloat bB = bottomColor.z/255.0;\nvec3 bColor = vec3(rB,gB,bB);\nfloat rT = topColor.x/255.0;\nfloat gT = topColor.y/255.0;\nfloat bT = topColor.z/255.0;\nvec3 tColor = vec3(rT,gT,bT);\ngl_FragColor = vec4( mix( bColor, tColor, max( pow( max( h, 0.0 ), exponent ), 0.0 ) ), 1.0 );\n}"}),AFRAME.registerComponent("camera-cursor",{init(){state.ray=document.querySelector("#ray"),state.crosshair=document.querySelector("#crosshair"),state.hud=document.querySelector("#hud")}}),AFRAME.registerComponent("obstacle",{check(){this.el.classList.contains("obs")&&this.el.getAttribute("position").z>state.playerPosZ&&(Game.destroy(this),ins.movePlayer(2))}}),AFRAME.registerComponent("rotation-listener",{init(){this.sky=document.querySelector("#sky")},tick(){this.sky.object3D.rotation.y+=5e-4*this.el.getAttribute("rotation").y}});let ins=null,conf={pc:{ver:"pc",ringDistance:2},mob:{ver:"mob",ringDistance:3},curr:null},state={scene:null,sky:null,menu:null,mc:null,player:null,ev:null,a:null,lastRender:null,playerPosZ:null,crosshair:null,aimTimeout:null,aimLength:500,aimedObj:null,ray:null,int:null,minZ:-45,maxZ:15,rings:[],obstacles:[],obstacleDistance:2.5,effect:null,effectSpeed:.01,incu:!1},effects={wave:{min:.01,max:.6,val:0},skyOpacity:{min:.1,max:.5,val:.1},ringOpacity:{min:.2,max:.8,val:.2},ringScale:{min:2.8,max:5,val:5},ringSpeed:{min:1,max:1,val:1}};class Game{constructor(){ins||(ins=this),state.scene=document.querySelector("a-scene"),state.sky=document.querySelector("a-sky"),state.menu=document.querySelector("#menu"),state.mc=document.querySelector("#mc"),state.player=document.querySelector("#player"),state.ev=document.querySelector("#ev"),state.a=new AudioContext,state.scene.hasLoaded?ins.gameLoop():state.scene.addEventListener("loaded",ins.gameLoop)}start(){state.mc.emit("coff"),state.menu.object3D.visible=!1;for(let a,b=state.minZ;b<state.maxZ;b+=conf.curr.ringDistance)a=new GameObject(state.scene.components.pool__rings.requestEntity(),[0,2,b],.003),state.rings.push(a);for(let b=state.minZ;b<state.maxZ;b+=state.obstacleDistance){let c=state.scene.components.pool__obstacles.requestEntity(),d=document.createElement("a-animation");d.setAttribute("mixin","brot"),c.appendChild(d),b+15>state.playerPosZ?c.object3D.visible=!1:c.setAttribute("class","obs"),state.obstacles.push(new GameObject(c,[4*Math.random()-2,4*Math.random()+1-3,b],.001,1))}ins.movePlayer(),ins.evHurt(),state.incu=!1,state.lastRender=null,state.effect=null}finish(){clearInterval(state.int),state.int=null,ins.emptyPool(state.rings),ins.emptyPool(state.obstacles);for(let a of document.querySelectorAll(".story"))a.setAttribute("value",ins.isWon()?"You reached the end of the Wormhole, very nice, you got the Internet from Evil Enemy, like a fairy. Congratulations, you just made him upset, once you meet with the people tell them do not be happy, the opposed. Download what you just can quickly, he is really evil and perhaps bored being offline and will come back to show how to quackery.":"Evil Enemy shows why his citous is dupli, shews you them of wormhole, you fall back to the people. Falling pretty boring, you want to check some... oh blaspheme, you learnt from the evil, who keep using the people Internet, people are offline and blame you. Very bad, try to go back!");ins.movePlayer(),document.querySelector("#s"+conf.curr.ver).classList.add("obs"),state.mc.emit("con"),state.menu.object3D.visible=!0}update(a){ins.movePool(a,state.rings,conf.curr.ringDistance),ins.movePool(a,state.obstacles,state.obstacleDistance),ins.startEffect()}draw(){for(let a of state.rings)a.redraw();for(let a of state.obstacles)a.redraw(),a.obj.components.obstacle.check();let a=state.player.object3D.position.z;a!=state.playerPosZ&&(a+=a<state.playerPosZ?.1:-.1,state.player.object3D.position.z=.1>Math.abs(state.playerPosZ+a)?state.playerPosZ:parseFloat(parseFloat(a).toFixed(1))),ins.playEffect()}gameLoop(a){0<state.rings.length&&(null==state.lastRender&&(state.lastRender=a),ins.update(a-state.lastRender),ins.draw(),state.lastRender=a,(ins.isWon()||ins.isLost())&&ins.finish()),ins.aim(),window.requestAnimationFrame(ins.gameLoop)}aim(){let a=state.ray.components.raycaster.intersections;0<a.length?state.aimedObj!=a[0].object&&(ins.endAim(),ins.startAim(a[0].object)):ins.endAim()}startAim(a){state.aimedObj=a,state.aimedObj.material.metalness=.8,state.aimTimeout=setTimeout(ins.shoot,state.aimLength),state.crosshair.emit("aim")}endAim(){clearTimeout(state.aimTimeout),state.aimedObj&&(state.crosshair.emit("endAim"),state.crosshair.setAttribute("theta-Length",360),state.aimedObj.material.metalness=.3),state.aimedObj=null}shoot(){if(state.aimedObj){let a=state.aimedObj.el.id;"spc"==a||"smob"==a?(state.aimedObj.el.classList.remove("obs"),conf.curr=conf[a.substr(1)],state.aimedObj.material.metalness=.3,ins.start()):(Game.destroy(state.aimedObj),ins.changeColour(),ins.movePlayer(-1),ins.beep(300,.1),ins.beep(200,.12,.03),ins.beep(100,.1,.1),ins.beep(600,.01,.19)),state.aimedObj=null}}isWon(){return state.playerPosZ<=state.minZ+5}isLost(){return state.playerPosZ>=state.maxZ}getProgress(){let a=state.maxZ-state.minZ,b=-state.playerPosZ+state.maxZ,c=Math.round(b/(a/100));return 0>c?0:c}startEffect(){if(null==state.int){let a=Object.keys(effects),b=a[Math.floor(Math.random()*a.length)];state.effect=effects[b],void 0,state.effectSpeed=.005,(state.effect.val<=state.effect.min&&0>state.effectSpeed||state.effect.val>=state.effect.max&&0<state.effectSpeed)&&(state.effectSpeed*=-1),state.int=window.setInterval(()=>{state.effect.val+=state.effectSpeed,(0<state.effectSpeed&&state.effect.val>=state.effect.max||0>state.effectSpeed&&state.effect.val<=state.effect.min)&&(clearInterval(state.int),state.int=null)},10)}}playEffect(){if(null!=state.effect){state.sky.setAttribute("opacity",effects.skyOpacity.val);for(const[a,b]of state.rings.entries())if(0==b.type){let c=state.rings.length/10*a,d=Math.sin(c*Math.PI/5)*effects.wave.val;b.pos[1]=d,b.obj.setAttribute("opacity",effects.ringOpacity.val),b.obj.setAttribute("scale",`5 0.5 ${effects.ringScale.val}`)}}}changeColour(){let a="#"+("00000"+(0|Math.random()*65536).toString(16)).slice(-6);for(let b of state.rings)b.obj.setAttribute("material","color",a)}evHurt(){state.ev.setAttribute("opacity",(100-ins.getProgress())/100)}beep(a=100,b=.1,c=0){if(state.a){let d=state.a.createOscillator(),e=state.a.createGain();d.connect(e),d.frequency.value=a,d.type="sine",e.connect(state.a.destination),e.gain.value=.1,d.start(state.a.currentTime+c),d.stop(state.a.currentTime+b+c)}}emptyPool(a){for(;0<a.length;){let b=a.pop();"undefined"==typeof b.parentNode&&(b=b.obj),b.parentNode.removeChild(b)}}static destroy(a){"undefined"==typeof a.material?a.el.setAttribute("material","metalness",.3):a.material.metalness=.3,a.el.classList.remove("obs"),a.el.object3D.visible=!1}movePool(a,b,c){if(0==b.length)return;let d=null,e=null,f=null;for(let[g,h]of b.entries())(null==d||h.pos[2]<d)&&(d=h.pos[2]),(null==f||h.pos[2]>f)&&(e=g,f=h.pos[2]),h.recalc(a,0==h.type?effects.ringSpeed.val:1);d>=state.minZ+c&&(b[e].pos[2]=state.minZ,b[e].redraw(),!b[e].obj.object3D.visible&&(b[e].obj.object3D.visible=!0,b[e].obj.classList.add("obs")))}movePlayer(a=null){null==a?(state.playerPosZ=0,state.player.object3D.position.z=0):(state.playerPosZ+=a,ins.evHurt()),!state.incu&&state.playerPosZ<=state.minZ+20&&(document.querySelector("#penta").emit("dang"),state.incu=!0)}}class GameObject{constructor(a,b,c,d=0){this.obj=a,this.pos=b,this.speed=c,this.type=d}recalc(a,b=1){this.pos[2]+=a*this.speed*b}redraw(){this.obj.object3D.position.set(...this.pos)}}