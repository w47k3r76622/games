class PickHelper{constructor(e,t){this.raycaster=new THREE.Raycaster,this.pickedObject=null,this.pickedObjectSavedColor=0,this.camera=e,this.maxInteractiveDistance=t;const s=this.getCursor();this.camera.add(s),s.position.z=-1.5;s.scale.set(.05,.05,.05),this.cursor=s,this.selectTimer=0,this.selectDuration=2,this.lastTime=0,this.selected=!1}getCursor(e={}){const t=new Uint8Array([64,64,64,64,200,200,200,200]);let s;this.cursorTexture=function(e,t,s){const i=new THREE.DataTexture(e,t,s,THREE.RGBAFormat);return i.minFilter=THREE.NearestFilter,i.magFilter=THREE.NearestFilter,i.needsUpdate=!0,i}(t,2,1);const i=new THREE.TorusBufferGeometry(.3,.15,4,4),c=new THREE.MeshBasicMaterial({color:"yellow",map:this.cursorTexture,transparent:!0,blending:THREE.CustomBlending,blendSrc:THREE.OneMinusDstColorFactor,blendDst:THREE.OneMinusSrcColorFactor});s=new THREE.Mesh(i,c);const r=this.selectDuration;return this.cursorTexture.offset.x=THREE.MathUtils.mapLinear(this.selectTimer,0,r,-.5,.5),s}pick(e,t,s,i){const c=i-this.lastTime,r=this.pickedObject;!this.pickedObject&&this.selected&&(this.selected=!1,this.selectTimer=0),this.pickedObject&&(this.pickedObject=void 0),this.raycaster.setFromCamera(e,s);const o=this.raycaster.intersectObjects(t.children);if(o.length){this.pickedObject=o[0].object;const e=new THREE.Vector3(this.camera.position.x,this.camera.position.y,this.camera.position.z).distanceTo(new THREE.Vector3(this.pickedObject.position.x,this.pickedObject.position.y,this.pickedObject.position.z))<this.maxInteractiveDistance;this.pickedObject&&r===this.pickedObject&&!this.selected&&e?(this.selectTimer+=c,this.selectTimer>=this.selectDuration&&(this.selectTimer=0,this.selected=!0)):(this.lastTime=i,this.selectTimer=0);const t=0,s=this.selectDuration,a=-.5,n=.5;return this.cursorTexture.offset.x=THREE.MathUtils.mapLinear(this.selectTimer,t,s,a,n),this.selected?this.pickedObject:void 0}}}
