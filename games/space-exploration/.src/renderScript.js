const dimensionMeteor = { HEIGHT: 165, WIDTH: 148 }, dimensionShip = { HEIGHT: 60, WIDTH: 90 }, meteorSizeInGame = { height: 80, width: 80 }, numberMeteor = 15; var hasTheGameFinished = !1, isTheGamePaused = !1, Game = new mibbu(innerWidth, innerHeight); Game.showScore().canvasOff().init(); var rocket = new Game.spr('ship2.png', dimensionShip.HEIGHT, dimensionShip.WIDTH, 0, 0), background = new Game.bg('background.png', 10, 'N', { x: 0, y: 0 }), meteorArray = []; meteorArray.init = function () { for (var c = 0; c < numberMeteor; c++)meteorArray.push(new Game.spr('meteor.png', meteorSizeInGame.height, meteorSizeInGame.width, 0, 0)), meteorArray[c].x = Math.random() * innerWidth, meteorArray[c].y = Math.random() * innerHeight - innerHeight, meteorArray[c].size(meteorSizeInGame.height, meteorSizeInGame.width), meteorArray[c].movingSpeed = 6 * Math.random() + 1 }, rocket.speed(0).position(400, 300, 1), rocket.y = 300, rocket.x = 400, rocket.heightIncrement = 0, rocket.widthIncrement = 0; var size = rocket.size(dimensionShip.HEIGHT, dimensionShip.WIDTH).size(); background.speed(10).dir('S').on(), meteorArray.init(), console.log(meteorArray), Game.on(); var additionalLoop = function () { renderMeteorArray(), checkHit(); let c = userScore.getMeteorAvoided(); Game.changeText(c) }; function renderMeteorArray() { if (!isTheGamePaused) for (var c = 0; c < numberMeteor; c++)meteorArray[c].y > innerHeight ? (meteorArray[c].x = Math.random() * (innerWidth - meteorSizeInGame.width), meteorArray[c].y = 0 - Math.random() * (innerHeight / 2), meteorArray[c].movingSpeed = 5 * Math.random() + 1, 4 <= meteorArray[c].movingSpeed ? meteorArray[c].change('fire.png', meteorSizeInGame.height, meteorSizeInGame.width, 0, 0) : meteorArray[c].change('meteor.png', meteorSizeInGame.height, meteorSizeInGame.width, 0, 0), userScore.addMeteorAvoided()) : (meteorArray[c].y += meteorArray[c].movingSpeed, meteorArray[c].position(meteorArray[c].x, meteorArray[c].y)) } Game.hook(additionalLoop).hitsOn(); function checkHit() { for (var c, d = 0; d < numberMeteor; d++)c = meteorArray[d], meteorArray[d].hit(rocket, function () { rocket.change('explode.png', 80, 80, 0, 0), rocket.size(120, 120), console.log(meteorArray[d]), console.log('\n' + d), rocket.speed(0), hasTheGameFinished = !0, Game.off(), setTimeout(function () { promptUserPlayAgain() }, 500) }) } function promptUserPlayAgain() { alert('Game over, you have avoided ' + userScore.getMeteorAvoided() + ' meteors'); var c = confirm('Do you want to play again?'); c && (Game.resetScoreText(), userScore.resetScore(), resetGameState()) } function resetGameState() { meteorAvoided = 0, hasTheGameFinished = !1, rocket.x = Math.random() * (innerWidth - dimensionShip.WIDTH), rocket.y = innerHeight - dimensionShip.WIDTH, rocket.change('ship2.png', dimensionShip.HEIGHT, dimensionShip.WIDTH, 0, 0); for (var c = 0; c < numberMeteor; c++)meteorArray[c].x = Math.random() * innerWidth, meteorArray[c].y = Math.random() * (innerHeight / 2) - innerHeight, meteorArray[c].position(meteorArray[c].x, meteorArray[c].y); rocket.position(rocket.x, rocket.y), Game.on() } function handleVisibilityChange() { document.hidden ? (isTheGamePaused = !0, background.off()) : (isTheGamePaused = !1, background.on()) } window.addEventListener('visibilitychange', handleVisibilityChange, !1);